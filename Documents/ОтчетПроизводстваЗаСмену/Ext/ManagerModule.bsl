

// Процедура печати документа.
//
Функция ПечатьОтчетПроизводстваЗаСмену(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Артикул";
		ТекстКодАртикул = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Код";
		ТекстКодАртикул = "Код";
	Иначе
		ВыводитьКоды    = Ложь;
		Колонка         = "";
		ТекстКодАртикул = "Код";
	КонецЕсли;
	
	УчитыватьНДС = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОтчетПроизводстваЗаСмену.Ссылка,
	               |	ОтчетПроизводстваЗаСмену.Номер,
	               |	ОтчетПроизводстваЗаСмену.Дата,
	               |	ОтчетПроизводстваЗаСмену.Ресторан,
	               |	ОтчетПроизводстваЗаСмену.Ресторан КАК Поставщик,
	               |	ОтчетПроизводстваЗаСмену.Сотрудник КАК Отпустил,
	               |	ОтчетПроизводстваЗаСмену.Комментарий,
	               |	ОтчетПроизводстваЗаСмену.СуммаДокумента
	               |ИЗ
	               |	Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСмену
	               |ГДЕ
	               |	ОтчетПроизводстваЗаСмену.Ссылка В(&МассивОбъектов)";
	Шапка = Запрос.Выполнить().Выбрать();
	//Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗапросПоТоварам.НомерСтроки,
	               |	ЗапросПоТоварам.Владелец,
	               |	ЗапросПоТоварам.Идентификатор,
	               |	ЗапросПоТоварам.Номенклатура,
	               |	ЗапросПоТоварам.ЕдиницаИзмерения,
	               |	ЗапросПоТоварам.Количество,
	               |	ЗапросПоТоварам.Цена,
	               |	ЗапросПоТоварам.СтавкаНДС,
	               |	ЗапросПоТоварам.Сумма,
	               |	ЗапросПоТоварам.СуммаНДС,
	               |	ЗапросПоТоварам.Номенклатура.Код КАК Код,
	               |	ЗапросПоТоварам.Номенклатура."+ ТекстКодАртикул + " КАК КодАртикул,
	               |	ВЫРАЗИТЬ(ЗапросПоТоварам.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ОтчетПроизводстваЗаСменуТовары.НомерСтроки КАК НомерСтроки,
	               |		ОтчетПроизводстваЗаСменуТовары.Владелец КАК Владелец,
	               |		ОтчетПроизводстваЗаСменуТовары.Идентификатор КАК Идентификатор,
	               |		ОтчетПроизводстваЗаСменуТовары.Номенклатура КАК Номенклатура,
	               |		ОтчетПроизводстваЗаСменуТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |		СУММА(ОтчетПроизводстваЗаСменуТовары.Количество) КАК Количество,
	               |		ОтчетПроизводстваЗаСменуТовары.Цена КАК Цена,
	               |		ОтчетПроизводстваЗаСменуТовары.СтавкаНДС КАК СтавкаНДС,
	               |		СУММА(ОтчетПроизводстваЗаСменуТовары.Сумма) КАК Сумма,
	               |		СУММА(ОтчетПроизводстваЗаСменуТовары.СуммаНДС) КАК СуммаНДС
	               |	ИЗ
	               |		Документ.ОтчетПроизводстваЗаСмену.Товары КАК ОтчетПроизводстваЗаСменуТовары
	               |	ГДЕ
	               |		ОтчетПроизводстваЗаСменуТовары.Ссылка В(&МассивОбъектов)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ОтчетПроизводстваЗаСменуТовары.Номенклатура,
	               |		ОтчетПроизводстваЗаСменуТовары.ЕдиницаИзмерения,
	               |		ОтчетПроизводстваЗаСменуТовары.Владелец,
	               |		ОтчетПроизводстваЗаСменуТовары.Идентификатор,
	               |		ОтчетПроизводстваЗаСменуТовары.Цена,
	               |		ОтчетПроизводстваЗаСменуТовары.СтавкаНДС,
	               |		ОтчетПроизводстваЗаСменуТовары.НомерСтроки) КАК ЗапросПоТоварам";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ИмяМакета + "_" + ИмяМакета;
		
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.ОтчетПроизводстваЗаСмену.Накладная" + ИмяМакета);
		
		Макет = ПолучитьМакет("Накладная");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ОбластьМакетаЗаголовок				= Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаПоставщик				= Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакетаДопИнформация			= Макет.ПолучитьОбласть("ДопИнформация");
		ОбластьМакетаОтступ 				= Макет.ПолучитьОбласть("Отступ");
		ОбластьМакетаШапкаТаблицы			= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьМакетаСтрокаКомментарий 		= Макет.ПолучитьОбласть("СтрокаКомментарий");
		ОбластьМакетаСтрока 				= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтого 					= Макет.ПолучитьОбласть("Итого");
		ОбластьМакетаИтогоНДС				= Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакетаСуммаПрописью 			= Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакетаПодписи				= Макет.ПолучитьОбласть("Подписи");
		
		// Заголовок.
		ОбластьМакетаЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, НСтр("ru='Заборный лист';uk='Заборний лист'",КодЯзыкаПечать),КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Поставщик.
		СведенияОПоставщике = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата,,,КодЯзыкаПечать);
		
		ОбластьМакетаПоставщик.Параметры.Заполнить(Шапка);
		ОбластьМакетаПоставщик.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);
		ОбластьМакетаПоставщик.Параметры.РеквизитыПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ФактическийАдрес,/,Телефоны,Факсы,",,КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакетаПоставщик);
		
		СписокДополнительныхПараметров = "";
		
		МассивСтруктурСтрок = ФормированиеПечатныхФормСервер.ДополнительнаяИнформация(Шапка,СписокДополнительныхПараметров,КодЯзыкаПечать);
		Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
			ОбластьМакетаДопИнформация.Параметры.Заполнить(СтруктураСтроки);
			ТабличныйДокумент.Вывести(ОбластьМакетаДопИнформация);
		КонецЦикла;		
		
		Если ВыводитьКоды Тогда
			ОбластьШапки  = "ШапкаСКодом";
			ОбластьСтроки = "СтрокаСКодом";
		Иначе
			ОбластьШапки  = "ШапкаТаблицы";
			ОбластьСтроки = "Строка";
		Конецесли;
		
		// Табличная часть.
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ВыводитьКоды Тогда
			ОбластьМакета.Параметры.Колонка = Колонка;
		КонецЕсли;                        	
		
		Суффикс = "";
		
		ОбластьМакета.Параметры.Цена  = НСтр("ru='Цена';uk='Ціна'",КодЯзыкаПечать) + Суффикс;
		ОбластьМакета.Параметры.Сумма = НСтр("ru='Сумма';uk='Сума'",КодЯзыкаПечать)+ Суффикс;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		
		Сумма    = 0;
		СуммаНДС = 0;
		
		Для каждого ВыборкаСтрокДерева из ЗапросТовары Цикл 
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокДерева.Номенклатура) Тогда
				Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокДерева);
			ОбластьМакета.Параметры.НомерСтроки = ВыборкаСтрокДерева.НомерСтроки;
			ОбластьМакета.Параметры.Товар   	= СокрЛП(ВыборкаСтрокДерева.Товар);			
			
			Если ВыводитьКоды Тогда
				ОбластьМакета.Параметры.КодАртикул = ВыборкаСтрокДерева.КодАртикул;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Сумма    = Сумма    + ВыборкаСтрокДерева.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаСтрокДерева.СуммаНДС;          
			
		КонецЦикла;
		
		// Итого.
		ОбластьМакетаИтого.Параметры.Всего = ОбщегоНазначения.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакетаИтого);
		
		// ИтогоНДС.
		Если УчитыватьНДС Тогда
			
			ОбластьМакетаИтогоНДС.Параметры.ВсегоНДС = ОбщегоНазначения.ФорматСумм(СуммаНДС);
			ОбластьМакетаИтогоНДС.Параметры.НДС      = ?(Шапка.СуммаВключаетНДС, НСтр("ru='В том числе НДС:';uk='У тому числі ПДВ:'",КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk='Сума ПДВ:'",КодЯзыкаПечать));
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогоНДС);
			
			// всего с НДС (если сумма не включает НДС)
			Если НЕ Шапка.СуммаВключаетНДС Тогда
				ОбластьМакетаИтогоНДС.Параметры.ВсегоНДС = ОбщегоНазначения.ФорматСумм(Сумма + СуммаНДС);
				ОбластьМакетаИтогоНДС.Параметры.НДС      = НСтр("ru='Всего с НДС:';uk='Усього з ПДВ:'",КодЯзыкаПечать);
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогоНДС);
			КонецЕсли;
			
		КонецЕсли;	
		
		// Сумма прописью.
		СуммаВключаетНДС = Истина;
		СуммаКПрописи = Сумма + ?(СуммаВключаетНДС, 0, СуммаНДС);
		ОбластьМакетаСуммаПрописью.Параметры.ИтоговаяСтрока = НСтр("ru='Всего наименований ';uk='Всього найменувань '",КодЯзыкаПечать) + ЗапросТовары.Количество() + "," +
		НСтр("ru=' на сумму ';uk=' на суму '",КодЯзыкаПечать)  + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, Константы.ВалютаРегламентированногоУчета.Получить()) + ".";
		
		ОбластьМакетаСуммаПрописью.Параметры.СуммаПрописью  = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Константы.ВалютаРегламентированногоУчета.Получить(),КодЯзыкаПечать)
		+ ?(НЕ УчитыватьНДС, "", Символы.ПС + НСтр("ru='В т.ч. НДС: ';uk='У т.ч. ПДВ: '",КодЯзыкаПечать) + ОбщегоНазначения.СформироватьСуммуПрописью(СуммаНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать));
		ТабличныйДокумент.Вывести(ОбластьМакетаСуммаПрописью);
		
		// Подписи.
		ОбластьМакетаПодписи.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, 
	КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Накладная", ПечатьОтчетПроизводстваЗаСмену(МассивОбъектов, ОбъектыПечати, "Накладная"));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	
	Возврат Новый Структура("Данные, Макеты",
	ДанныеПоВсемОбъектам,
	Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
	ОписаниеОбластей,
	ТипыМакетов,
	ДвоичныеДанныеМакетов));
	
КонецФункции
