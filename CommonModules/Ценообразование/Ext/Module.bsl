// Функция возвращает не пустую дату для расчета цен.
//
// Параметры:
//  ДатаЦен - Дата. Исходная дата.
//
// Возвращаемое значение:
//  Дата. Дата на которую будут рассчитаны цены.
//
Функция ПолучитьАктуальнуюДатуРасчетаЦен(ДатаЦен) Экспорт

	ТекДата = ТекущаяДата();

	Если Не ЗначениеЗаполнено(ДатаЦен) Тогда
		Результат = ТекДата;
	ИначеЕсли ДатаЦен = НачалоДня(ТекДата) Тогда
		Результат = ТекДата;
	Иначе
		Результат = ДатаЦен;
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПолучитьАктуальнуюДатуРасчетаЦен()

// Функция возвращает цену номенклатуры для требуемой номенклатуры на заданную дату.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура. Номенклатура, для которого надо получить цену;
//  ДатаПараметр - Дата. Дата на которую надо получить цену, если не заполнено, то берется рабочая дата.
//  ... . Не поддерживается.
//
// Возвращаемое значение:
//  Число. Рассчитанное значение цены.
//
Функция ПолучитьЦенуНоменклатуры(Номенклатура, ХарактеристикаНоменклатуры = Неопределено, ТипЦен = Неопределено, ДатаПараметр = Неопределено, ЕдиницаИзмерения = Неопределено,
	                             Валюта = Неопределено, Курс = 0, Кратность = 1, ПроцентСкидкиНаценки = 0, ДоговорКонтрагента = Неопределено, УсловиеПродаж = Неопределено) Экспорт

	Дата = ПолучитьАктуальнуюДатуРасчетаЦен(ДатаПараметр);

	////.. Начало изменения Dim)on  6 октября 2013 г. 23:59:42
	////
	////СтруктураРесурсов = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Дата, Новый Структура("Номенклатура", Номенклатура.Ссылка));
	//СтруктураРесурсов = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Дата, Новый Структура("Номенклатура, ТипЦены", Номенклатура.Ссылка, ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана()));
	////
	////.. Конец изменения Dim)on  6 октября 2013 г. 23:59:42
	
	//Костенюк Александр-Старт 15.07.2014
	Если ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ОбменДанными2K_CRS") Тогда
		ТипЦены = ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана();
	Иначе
		ТипЦены = УправлениеПользователями.ОпределитьРесторанПоРежимуРаботы(ПараметрыСеанса.ТекущийРежимРаботы).ТипЦен;
	КонецЕсли;
	СтруктураРесурсов = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Дата, Новый Структура("Номенклатура, ТипЦены", Номенклатура.Ссылка, ТипЦены));
	//Костенюк Александр-Финиш 15.07.2014
	
	ПолученнаяЦена = СтруктураРесурсов.Цена;

	Возврат ПолученнаяЦена;

 КонецФункции // ПолучитьЦенуНоменклатуры()
 
 
// Функция возвращает ставку НДС.
//
// Параметры:
//  СтавкаНДС, ПеречислениеСсылка.СтавкиНДС. Вид НДС.
//
// Возвращаемое значение:
//	Ставка НДС.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт

	Если (СтавкаНДС = Перечисления.СтавкиНДС.НДС20) Тогда
		Возврат 20;
	КонецЕсли;

	Возврат 0;

КонецФункции // ПолучитьСтавкуНДС()

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения.
//
// Параметры: 
//  Сумма, Число. Сумма от которой надо рассчитывать налоги;
//  УчитыватьНДС, Булево. Признак учета НДС в сумме;
//  СуммаВключаетНДС, Булево. Признак включения НДС в сумму;
//  СтавкаНДС, Число. Процентная ставка НДС.
//
// Возвращаемое значение:
//  Число. Полученная сумма НДС.
//
Функция РассчитатьСуммуНДС(Сумма, УчитыватьНДС, СуммаВключаетНДС, СтавкаНДС) Экспорт

	Если (УчитыватьНДС) И (СуммаВключаетНДС) Тогда
		СуммаБезНДС = 100 * Сумма / (100 + СтавкаНДС);
		СуммаНДС = Сумма - СуммаБезНДС;
	Иначе
		СуммаБезНДС = Сумма;
	КонецЕсли;

	Если УчитыватьНДС Тогда 
		Если НЕ СуммаВключаетНДС Тогда
			СуммаНДС = СуммаБезНДС * СтавкаНДС / 100;
		КонецЕсли;
	Иначе
		СуммаНДС = 0;
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции // РассчитатьСуммуНДС()


// Рассчитывает сумму документа по произвольной колонке.
//
// Параметры: 
//  ДокументОбъект - ДокументОбъект. Документ, сумму которого надо рассчитать;
//  ИмяТабличнойЧасти - Строка. Имя табличной части, сумму которой надо рассчитать, если не заполнена, расчет по всем табличным частям;
//  Колонка - Строка. Имя колонки по которой необходимо получить итог.
//
// Возвращаемое значение:
//  Число. Расчитанная сумма.
//
Функция ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, Колонка = "Сумма") Экспорт

	Если (Не ИмяТабличнойЧасти = Неопределено) Тогда
		Сумма = ДокументОбъект[ИмяТабличнойЧасти].Итог(Колонка);
	Иначе
		
		МетаданныеДокумента = ДокументОбъект.Метаданные(); Сумма = 0;
		Для Каждого ТабличнаяЧастьОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл
			Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента(Колонка, МетаданныеДокумента, ТабличнаяЧастьОбъекта.Имя) Тогда
				Сумма = Сумма + ДокументОбъект[ТабличнаяЧастьОбъекта.Имя].Итог(Колонка);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Сумма;

КонецФункции // ПолучитьПроизвольнуюСуммуДокумента()

// Рассчитывает сумму документа со всеми налогами.
//
Функция ПолучитьСуммуДокументаСНДС(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, НеУчитыватьТару = Истина) Экспорт

	Возврат ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти, "Сумма");

КонецФункции // ПолучитьСуммуДокументаСНДС()

// Рассчитывает сумму НДС документа.
//
Функция ПолучитьНДСДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	Возврат ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти, "СуммаНДС");

КонецФункции // ПолучитьНДСДокумента()

// Рассчитывает сумму документа без учета скидки.
//
Функция ПолучитьСуммуДокументаБезСкидки(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	Возврат ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти, "СуммаБезСкидок");

КонецФункции // ПолучитьСуммуДокументаБезСкидки()

// Рассчитывает сумму скидки документа.
//
Функция ПолучитьСуммуСкидкиДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	Возврат ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти, "СуммаСкидки");

КонецФункции // ПолучитьСуммуСкидкиДокумента()

// Рассчитывает сумму наценки документа.
//
Функция ПолучитьСуммуНаценкиДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	Возврат ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти, "СуммаНаценки");

КонецФункции // ПолучитьСуммуНаценкиДокумента()

//Костенюк Александр-Старт 19.07.2012
// Рассчитывает сумму депозита документа.
//
Функция ПолучитьСуммуДепозитаДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	Возврат ПолучитьПроизвольнуюСуммуДокумента(ДокументОбъект, ИмяТабличнойЧасти, "СуммаДепозита");

КонецФункции // ПолучитьСуммуДепозитаДокумента()
//Костенюк Александр-Финиш 19.07.2012

//Костенюк Александр-Старт 29.01.2015
// Функция возвращает ставку Акцизного Налога.
//
// Возвращаемое значение:
//	Ставка Акцизного Налога.
//
Функция ПолучитьСтавкуАкцизногоНалога() Экспорт
	
	Возврат Константы.СтавкаАкцизногоНалога.Получить();
	
КонецФункции // ПолучитьСтавкуАкцизногоНалога()
//Костенюк Александр-Финиш 29.01.2015

//Костенюк Александр-Старт 03.02.2015
// Функция возвращает сумму Акцизного Налога.
//
// Параметры:
// Сумма - Число. База для расчета акзицного налога.
// СпособОбложения - ПеречислениеСсылка.СпособыОбложенияАкцизнымНалогом.
// СтавкаАкцизногоНалога - Число. Процентная ставка акзицного налога.
//
// Возвращаемое значение:
//	СуммаАкцизногоНалога.
//
Функция РассчитатьСуммуАкцизногоНалога(Сумма, СтавкаАкцизногоНалога, СуммаВключаетАкцизныйНалог = Истина) Экспорт
	
	Если СуммаВключаетАкцизныйНалог Тогда
		Возврат (Сумма/(100+СтавкаАкцизногоНалога))*СтавкаАкцизногоНалога;
	Иначе
		Возврат Сумма*(СтавкаАкцизногоНалога/100)
	КонецЕсли;
	
КонецФункции // РассчитатьСуммуАкцизногоНалога()
//Костенюк Александр-Финиш 03.02.2015
