
Процедура ПолучитьУсловияСкидокВидаДисконтнойКарты(Ссылка, Объект) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	// Связанный справочник.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	УсловияСкидок.Ссылка КАК Ссылка,
		|	УсловияСкидок.Наименование КАК Наименование,
		|	УсловияСкидок.ПометкаУдаления,
		|	ВЫБОР
		|		КОГДА УсловияСкидок.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.УсловияСкидок КАК УсловияСкидок
		|ГДЕ
		|	УсловияСкидок.Владелец = &ВидДисконтнойКарты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование
		|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ВидДисконтнойКарты", Ссылка.Ссылка);
	
	УсловияСкидок = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВДанныеФормы(УсловияСкидок, Объект);	

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПолучитьУсловияСкидокВидаДисконтнойКарты()

Процедура УстановитьУсловияСкидокВидаДисконтнойКарты(Ссылка, Объект, Отказ) Экспорт

	Если Не Отказ Тогда

		УстановитьПривилегированныйРежим(Истина);
		
		УсловияСкидок = ДанныеФормыВЗначение(Объект, Тип("ТаблицаЗначений"));
		
		Для Каждого УсловиеСкидки Из УсловияСкидок Цикл
			
			Если ЗначениеЗаполнено(УсловиеСкидки.Ссылка) Тогда
				ОбъектУсловияСкидок = УсловиеСкидки.Ссылка.ПолучитьОбъект();
			Иначе
				ОбъектУсловияСкидок = Справочники.УсловияСкидок.СоздатьЭлемент();
			КонецЕсли;
			
			ОбъектУсловияСкидок.Владелец = Ссылка.Ссылка;
			ОбъектУсловияСкидок.Наименование = УсловиеСкидки.Наименование;
			ОбъектУсловияСкидок.ПометкаУдаления = УсловиеСкидки.ПометкаУдаления;
		
			Попытка
				ОбъектУсловияСкидок.Записать();
			Исключение
				// ERR
				Отказ = Истина;
				Прервать;
			КонецПопытки;
			
			УсловиеСкидки.Ссылка = ОбъектУсловияСкидок.Ссылка;
			
		КонецЦикла; 
		
		// Актуализация.
		Если Не Отказ Тогда
			ЗначениеВДанныеФормы(УсловияСкидок, Объект);	
		КонецЕсли; 

		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры // УстановитьУсловияСкидокВидаДисконтнойКарты()
