
//	1С:Touch. Touch-ориентированные элементы управления и диалоговые формы, 
//	построенные с использованием только стандартных элементов управления платформы.
//	Copyright (C) 2008-2010 Переверзев Александр Владимирович.
//
//	Это программа является свободным программным обеспечением. Вы можете 
//	распространять и/или модифицировать её согласно условиям Стандартной 
//	Общественной Лицензии GNU, опубликованной Фондом Свободного Программного 
//	Обеспечения, версии 3 или, по Вашему желанию, любой более поздней версии. 
//
//	Эта программа распространяется в надежде, что она будет полезной, но БЕЗ 
//	ВСЯКИХ ГАРАНТИЙ, в том числе подразумеваемых гарантий ТОВАРНОГО СОСТОЯНИЯ ПРИ 
//	ПРОДАЖЕ и ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО ПРИМЕНЕНИЯ. Смотрите Стандартную 
//	Общественную Лицензию GNU для получения дополнительной информации. 
//
//	Вы должны были получить копию Стандартной Общественной Лицензии GNU вместе 
//	с программой. В случае её отсутствия, посмотрите <http://www.gnu.org/licenses/>.


#Если Клиент Тогда
	
Перем мДанныеСтроки, мПоддерживаемыеТипыВложенныхДанных; // Данные текущей строки.

Перем мЯчейки; // Список доступных для оформления ячеек.

Перем мСлужебнаяКартинка; // Служебные переменные хранящие значения требующие для создания и дополнительной настройки объектов.

Перем мТипФормата, мТипФлажка, мТипКартинки, мТипСтруктуры, мТипЭлементаСпискаЗначений; // Типы и описание типов значений.


// Функция возвращает данные строки.
//
// Возвращаемое значение:
//   Тип возвращаемого значения зависит от типа данных, отображаемых в табличном поле, содержит данные строки.
//
Функция ДанныеСтроки() Экспорт
	
	// Проверка входных параметров.
	Если (мЯчейки = Неопределено) Тогда
		ВызватьИсключение "Объект не инициализирован (не связан с владельцем)";
	КонецЕсли;
	
	// Возвращаем данные строки.
	Возврат мДанныеСтроки;
	
КонецФункции


// Функция возвращает элемент коллекции оформления ячеек.
//
// Параметры
//  Имя - Строка, имя колонки табличного поля.
//
// Возвращаемое значение:
//   TouchОформлениеЯчейки, определяет оформление ячейки табличного поля.
//
Функция Ячейки(Имя) Экспорт
	
	// Инициализация оформления строки.
	Если (ТипЗнч(Имя) = мТипСтруктуры) Тогда
		мДанныеСтроки = Имя.ДанныеСтроки;
		
		// -- Инициализация значений по умолчанию на основе владельца.
		ЦветТекста = Имя.ЦветТекстаПоля;
		ЦветФона = Имя.ЦветФонаПоля;
		Шрифт = Имя.Шрифт;

		// -- Ячейки.
		Если (мЯчейки = Неопределено) Тогда
			мЯчейки = Новый Соответствие;
			РежимОбновленияЯчеек = Ложь;
		Иначе
			РежимОбновленияЯчеек = Истина;
		КонецЕсли;
		Для Каждого Колонка Из Имя.Колонки Цикл
			Колонка = Колонка.Значение;
			
			// ---- Отсечение неотображаемых колонок.
			Если Не Колонка.Видимость Тогда
				Продолжить;
			КонецЕсли;
			
			
			РаботаСЭлементомСпискаЗначений = (ТипЗнч(мДанныеСтроки) = мТипЭлементаСпискаЗначений);
			// ---- Значение.
			Если ПустаяСтрока(Колонка.Данные) Тогда
				ЯчейкаЗначение = Неопределено;
			Иначе
				Если РаботаСЭлементомСпискаЗначений Тогда
					Данные = НРег(Колонка.Данные);
					Если (Данные = "значение") Тогда
						ЯчейкаЗначение = мДанныеСтроки.Значение;
					ИначеЕсли (Данные = "представление") Тогда
						ЯчейкаЗначение = мДанныеСтроки.Представление;
					ИначеЕсли (Данные = "пометка") Тогда
						ЯчейкаЗначение = мДанныеСтроки.Пометка;
					КонецЕсли;
				Иначе
					Попытка ЯчейкаЗначение = мДанныеСтроки[Колонка.Данные]; Исключение КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			// ---- Текст.
			Если (Не ПустаяСтрока(Колонка.Формат)) И мТипФормата.СодержитТип(ТипЗнч(ЯчейкаЗначение)) Тогда
				ЯчейкаТекст = Формат(ЯчейкаЗначение, Колонка.Формат);
			Иначе
				ЯчейкаТекст = Строка(ЯчейкаЗначение);
			КонецЕсли;
			// ---- Флажок.
			Если Колонка.ОтображатьВложенныеДанные Или ПустаяСтрока(Колонка.ДанныеФлажка) Тогда
				ЯчейкаФлажок = Ложь;
			Иначе
				Если РаботаСЭлементомСпискаЗначений Тогда
					ДанныеФлажка = НРег(Колонка.ДанныеФлажка);
					Если (ДанныеФлажка = "пометка") Тогда
						ЯчейкаФлажок = мДанныеСтроки.Пометка;
					Иначе
						Попытка ЯчейкаФлажок = мДанныеСтроки[Колонка.ДанныеФлажка]; Исключение КонецПопытки;
					КонецЕсли;
				Иначе
					Попытка ЯчейкаФлажок = мДанныеСтроки[Колонка.ДанныеФлажка]; Исключение КонецПопытки;
				КонецЕсли;
				Если Не мТипФлажка.СодержитТип(ТипЗнч(ЯчейкаФлажок)) Тогда
					ЯчейкаФлажок = Ложь;
				КонецЕсли;
			КонецЕсли;
			// ---- Картинка.
			Если Колонка.ОтображатьВложенныеДанные Или ПустаяСтрока(Колонка.ДанныеКартинки) Тогда
				ЯчейкаКартинка = мСлужебнаяКартинка;
			Иначе
				Если РаботаСЭлементомСпискаЗначений Тогда
					ДанныеКартинки = НРег(Колонка.ДанныеКартинки);
					Если (ДанныеКартинки = "картинка") Тогда
						ЯчейкаКартинка = мДанныеСтроки.Картинка;
					Иначе
						Попытка ЯчейкаКартинка = мДанныеСтроки[Колонка.ДанныеКартинки]; Исключение КонецПопытки;
					КонецЕсли;
				Иначе
					Попытка ЯчейкаКартинка = мДанныеСтроки[Колонка.ДанныеКартинки]; Исключение КонецПопытки;
				КонецЕсли;
				Если (Не ТипЗнч(ЯчейкаКартинка) = мТипКартинки) Тогда
					ЯчейкаКартинка = мСлужебнаяКартинка;
				КонецЕсли;
			КонецЕсли;
			
			
			// ---- Оформление ячеки.
			Имя.Вставить("Колонка", Колонка);
			Имя.Вставить("Динамическая", Колонка.ОтображатьВложенныеДанные И мПоддерживаемыеТипыВложенныхДанных.СодержитТип(ТипЗнч(ЯчейкаЗначение)));
			Имя.Вставить("Значение", ЯчейкаЗначение);
			Имя.Вставить("Текст", ЯчейкаТекст);
			Имя.Вставить("Флажок", ЯчейкаФлажок);
			Имя.Вставить("Картинка", ЯчейкаКартинка);
			
			Если РежимОбновленияЯчеек Тогда
				мЯчейки[Колонка.Имя].Ячейки(Имя);
			Иначе
				мЯчейки.Вставить(Колонка.Имя, Обработки.TouchОформлениеЯчейки.Создать().Ячейки(Имя));
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Неопределено;
	КонецЕсли;
	
	
	// Проверка входных параметров (I).
	Если (мЯчейки = Неопределено) Тогда
		ВызватьИсключение "Объект не инициализирован (не связан с владельцем)";
	КонецЕсли;
	
	Ячека = мЯчейки[Имя];
	
	// Проверка входных параметров (II).
	Если (мЯчейки = Неопределено) Тогда
		ВызватьИсключение "Поле объекта не обнаружено (" + Имя + ")";
	КонецЕсли;
	
	Возврат Ячека;
	
КонецФункции


Процедура Высвободить() Экспорт
	
	// Высвобождение ссылок.
	Если (Не мЯчейки = Неопределено) Тогда
		Для Каждого Элемент Из мЯчейки Цикл
			Элемент.Значение.Высвободить();
		КонецЦикла;
	КонецЕсли;
	
	мЯчейки = Неопределено;
	мДанныеСтроки = Неопределено;
	
КонецПроцедуры // Высвободить()


// Инициализация переменных.
мДанныеСтроки = Неопределено;
мПоддерживаемыеТипыВложенныхДанных = Новый ОписаниеТипов("Массив,Структура,Соответствие,СписокЗначений,ФиксированныйМассив");

мСлужебнаяКартинка = Новый Картинка;

мТипФормата = Новый ОписаниеТипов("Число,Дата,Булево");
мТипФлажка = Новый ОписаниеТипов("Булево,Число", Новый КвалификаторыЧисла(1, 0, ДопустимыйЗнак.Неотрицательный));
мТипКартинки = Тип("Картинка");
мТипСтруктуры = Тип("Структура");
мТипЭлементаСпискаЗначений = Тип("ЭлементСпискаЗначений");

// Инициализация значений по умолчанию.
ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
ЦветФона = ЦветаСтиля.ЦветФонаПоля;
Шрифт = ШрифтыСтиля.ШрифтТекста;

#КонецЕсли
