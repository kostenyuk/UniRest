
&НаКлиенте
Процедура ОптимизироватьСписокНомеровДомов()
	
	Перем НачальныйНомерДома, НачальныйНомерДомаПостфикс, КонечныйНомерДома, КонечныйНомерДомаПостфикс;
	
	Для Каждого Значение Из СписокНомеровДомов Цикл
		Индекс = СписокНомеровДомов.Индекс(Значение) + 1;
		Пока (Индекс <= СписокНомеровДомов.Количество() - 1) Цикл
			Проверяемый = СписокНомеровДомов.Получить(Индекс);
			
			// Проверка пересечений диапазонов.
			Если ((Значение.Значение.НачальныйДом <= Проверяемый.Значение.НачальныйДом) И (Проверяемый.Значение.НачальныйДом <= Значение.Значение.КонечныйДом)) Или
				 ((Значение.Значение.НачальныйДом <= Проверяемый.Значение.КонечныйДом) И (Проверяемый.Значение.КонечныйДом <= Значение.Значение.КонечныйДом)) Или
				 ((Проверяемый.Значение.НачальныйДом <= Значение.Значение.НачальныйДом) И (Значение.Значение.НачальныйДом <= Проверяемый.Значение.КонечныйДом)) Или
				 ((Проверяемый.Значение.НачальныйДом <= Значение.Значение.КонечныйДом) И (Значение.Значение.КонечныйДом <= Проверяемый.Значение.КонечныйДом)) Тогда
				 
				// Изменение диапазона.
				Значение.Значение.НачальныйДом = Мин(Значение.Значение.НачальныйДом, Проверяемый.Значение.НачальныйДом);
				Значение.Значение.КонечныйДом = Макс(Значение.Значение.КонечныйДом, Проверяемый.Значение.КонечныйДом);
				СписокНомеровДомов.Удалить(Проверяемый);
				
				// Формирование представления.
				УправлениеКонтактнойИнформацией.ПолучитьДомПоПредставлениюВнутреннему(Значение.Значение.НачальныйДом, НачальныйНомерДома);
				УправлениеКонтактнойИнформацией.ПолучитьДомПоПредставлениюВнутреннему(Значение.Значение.КонечныйДом, КонечныйНомерДома);
				Если (Не Значение.Значение.НачальныйДом = Значение.Значение.КонечныйДом) Тогда
					Значение.Значение.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДома(НачальныйНомерДома) + " — " + УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДома(КонечныйНомерДома);
				Иначе	
					Значение.Значение.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДома(НачальныйНомерДома);
				КонецЕсли;
				Значение.Представление = Значение.Значение.Представление;
				
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЦикла;
	
	СписокНомеровДомов.СортироватьПоПредставлению();
	
КонецПроцедуры // ОптимизироватьСписокНомеровДомов()


&НаКлиенте
Процедура OK(Команда)

	Закрыть(СписокНомеровДомов);
	
КонецПроцедуры // OK()


&НаКлиенте
Процедура СписокНомеровДомовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	НомераДомов = Новый Структура("НачальныйДом,КонечныйДом,Представление");
	Если Копирование Тогда
		ЗаполнитьЗначенияСвойств(НомераДомов, Элемент.ТекущиеДанные.Значение);
	КонецЕсли;
	
	Результат = ОткрытьФормуМодально("Справочник.МаршрутыДоставки.Форма.ФормаНастройкиНомераДома", Новый Структура("НомераДомов", НомераДомов), Элемент);
	Если (ТипЗнч(Результат) = Тип("Структура")) Тогда
		СписокНомеровДомов.Вставить(0, Результат, Результат.Представление);
		ОптимизироватьСписокНомеровДомов();
	КонецЕсли;
	
КонецПроцедуры // СписокНомеровДомовПередНачаломДобавления()

&НаКлиенте
Процедура СписокНомеровДомовПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Результат = ОткрытьФормуМодально("Справочник.МаршрутыДоставки.Форма.ФормаНастройкиНомераДома", Новый Структура("НомераДомов", Элемент.ТекущиеДанные.Значение), Элемент);
	Если (ТипЗнч(Результат) = Тип("Структура")) Тогда
		СписокНомеровДомов.Удалить(СписокНомеровДомов.НайтиПоИдентификатору(Элемент.ТекущаяСтрока));
		СписокНомеровДомов.Вставить(0, Результат, Результат.Представление);
		ОптимизироватьСписокНомеровДомов();
	КонецЕсли;
	
КонецПроцедуры // СписокНомеровДомовПередНачаломИзменения()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокНомеровДомов = Параметры.СписокНомеровДомов;
	
КонецПроцедуры // ПриСозданииНаСервере()


