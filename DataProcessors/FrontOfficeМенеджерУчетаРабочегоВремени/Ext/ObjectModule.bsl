// TODO: Переделать запись и создание, со связью с сервером фронта;
//		 Перенести актуализацию долкумента в случаии неуспешной записи, в процедуру записи.

#Если Клиент Тогда
	
Процедура Инициализация() Экспорт
	
	// Проверка режима.
	Если ПолучитьСерверFrontOffice().РежимBackOffice Тогда
		Возврат;
	КонецЕсли;
	
	// Создание формы.
	Если (Форма = Неопределено) Тогда
		Форма = ЭтотОбъект.ПолучитьФорму("Форма");
		ПолучитьСерверFrontOffice().__ОткрытьФорму(Форма);
	КонецЕсли;
		
КонецПроцедуры // Инициализация()

Процедура Открыть() Экспорт
	
	// Перенаправление.
	
	ТекущийРесторан = УправлениеПользователями.ПолучитьЗначениеНастройки(ПланыВидовХарактеристик.НастройкиПользователей.FrontOfficeОсновнойРесторан);		
	ДокументОткрыть();
		
КонецПроцедуры // Открыть()

Функция ВыборВидаВремени(Значение = Неопределено) Экспорт
	
	// Данные.
	Запрос = Новый Запрос("ВЫБРАТЬ *, Представление КАК Наименование ИЗ ВременнаяКлассификаторИспользованияРабочегоВремени");
	Запрос.МенеджерВременныхТаблиц = ПолучитьСерверFrontOffice().МенеджерВременныхТаблиц;
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	СтрокаТаблицы = ТаблицаЗначений.Найти(Значение, "Ссылка");
	
	// Выбор.
	//Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзДереваЗначений(СтрокаТаблицы, "Выберите вид времени", ТаблицаЗначений, "Картинка,Наименование") Тогда
	Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзДереваЗначений(СтрокаТаблицы, НСтр("ru='Выберите вид времени';uk='Виберіть вид часу'"), ТаблицаЗначений, "Картинка,Наименование") Тогда //Костенюк Александр 31.05.2012
		Если (Не Значение = СтрокаТаблицы.Ссылка) Тогда
			Значение = СтрокаТаблицы.Ссылка;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ВыборВидаВремени()

Процедура ТаблицаТабеляПрочитать(Документ, ТабличноеПоле, Подробно = Ложь, ИерархическийПросмотр = Ложь) Экспорт
	
	// Данные.
	Данные = ТабличноеПоле.Данные();
	Если (Данные = Неопределено) Тогда
		Данные = Новый ДеревоЗначений;
		
		Для Каждого Реквизит Из Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты Цикл
			Данные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип, Реквизит.Синоним);
		КонецЦикла;
		Данные.Колонки.Добавить("ЭтоГруппа", Новый ОписаниеТипов("Булево"), "ЭтоГруппа");
		Данные.Колонки.Добавить("Актуальность", Новый ОписаниеТипов("Булево"), "ЭтоГруппа");
		Данные.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"), Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.КодВнештатногоСотрудника.Синоним);
		Данные.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"), Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.Сотрудник.Синоним);
		//Данные.Колонки.Добавить("Продолжительность", Новый ОписаниеТипов("Строка"), "Продолжительность");
		Данные.Колонки.Добавить("Продолжительность", Новый ОписаниеТипов("Строка"), НСтр("ru='Продолжительность';uk='Тривалість'")); //Костенюк Александр 31.05.2012
		//ТабличноеПоле.Данные(Данные); ТабличноеПоле.СоздатьКолонки("Картинка,ВнештатныйСотрудник,Код,Представление,ВидВремени,ДатаНачалаПериода,ДатаОкончанияПериода,Продолжительность");
		ТабличноеПоле.Данные(Данные); ТабличноеПоле.СоздатьКолонки("Картинка,Код,Представление,Должность,РабочаяСмена,ДатаНачалаПериода,ДатаОкончанияПериода,Продолжительность"); //Костенюк Александр 24.06.2016
		//ТабличноеПоле.Колонки.Получить("ВнештатныйСотрудник").ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
		//ТабличноеПоле.Колонки.Получить("ВнештатныйСотрудник").ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
		//ТабличноеПоле.Колонки.Получить("ВнештатныйСотрудник").ТолькоПросмотр = Истина;
		//ТабличноеПоле.Колонки.Получить("ВнештатныйСотрудник").Ширина = ТабличноеПоле.МинимальнаяШиринаКолонки;
		ТабличноеПоле.Колонки.Получить("Код").Ширина = 400 * 0.05;
		ТабличноеПоле.Колонки.Получить("Представление").Ширина = 400 * 0.35;
		//ТабличноеПоле.Колонки.Получить("ВидВремени").Ширина = 400 * 0.20; //Костенюк Александр-Закомментировано 06.04.2016
		ТабличноеПоле.Колонки.Получить("Должность").Ширина = 400 * 0.25; //Костенюк Александр 24.06.2016
		ТабличноеПоле.Колонки.Получить("РабочаяСмена").Ширина = 400 * 0.25; //Костенюк Александр 12.04.2016
		ТабличноеПоле.Колонки.Получить("ДатаНачалаПериода").ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
		ТабличноеПоле.Колонки.Получить("ДатаНачалаПериода").Ширина = 400 * 0.15;
		ТабличноеПоле.Колонки.Получить("ДатаОкончанияПериода").ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Центр;
		ТабличноеПоле.Колонки.Получить("ДатаОкончанияПериода").Ширина = 400 * 0.15;
		ТабличноеПоле.Колонки.Получить("Продолжительность").ГоризонтальноеПоложениеВКолонке = ГоризонтальноеПоложение.Право;
		ТабличноеПоле.Колонки.Получить("Продолжительность").Ширина = 400 * 0.10;
		ТабличноеПоле.РежимВыделенияСтроки = РежимВыделенияСтрокиТабличногоПоля.Строка;
	Иначе
		
// TODO: Сохранение исходной позиции с дальнейшим ее востановлением.		
		
		Данные.Строки.Очистить();
	КонецЕсли;
	
	// Выборка данных.
	Если (Документ = Неопределено) Или Документ.Ссылка.Пустая() тогда
		ТабличноеПоле.ОбновитьСтроки();
		Возврат;
	КонецЕсли;
	
	// -- Рестораны.
	Запрос = Новый Запрос("ВЫБРАТЬ *, Представление КАК Рестораны ИЗ ВременнаяРестораны");
	Запрос.МенеджерВременныхТаблиц = ПолучитьСерверFrontOffice().МенеджерВременныхТаблиц;
	ТаблицаРесторанов = Запрос.Выполнить().Выгрузить();
	
	// -- Сотрудники.
	Запрос = Новый Запрос("ВЫБРАТЬ *, Представление КАК СотрудникиОрганизаций ИЗ ВременнаяСотрудникиОрганизаций");
	Запрос.МенеджерВременныхТаблиц = ПолучитьСерверFrontOffice().МенеджерВременныхТаблиц;
	ДеревоСотрудников = ОбщегоНазначения.ТаблицуЗначенийВДеревоЗначений(Запрос.Выполнить().Выгрузить(), "Ссылка", "Родитель");
	
	// -- Актуальность.
	ТаблицаАктуальных = Новый ТаблицаЗначений;
	ТаблицаАктуальных.Колонки.Добавить("Сотрудник", Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.Сотрудник.Тип);
	ТаблицаАктуальных.Колонки.Добавить("КодВнештатногоСотрудника", Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.КодВнештатногоСотрудника.Тип);
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы = ТаблицаАктуальных.Добавить();
		СтрокаТаблицы.Сотрудник = СтрокаТабличнойЧасти.Сотрудник;
		СтрокаТаблицы.КодВнештатногоСотрудника = СтрокаТабличнойЧасти.КодВнештатногоСотрудника;
	КонецЦикла;
	
	// -- Элементы.
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) И (Не Подробно) Тогда
			Продолжить;
		КонецЕсли;
		
		// -- Добавление в дерево родителей.
		СтрокаГруппы = Данные;
		Если ИерархическийПросмотр И (Не СтрокаТабличнойЧасти.ВнештатныйСотрудник) Тогда
			
			СписокРодителей = Новый СписокЗначений;
			СтрокаДерева = ДеревоСотрудников.Строки.Найти(СтрокаТабличнойЧасти.Сотрудник, "Ссылка", Истина);
			Пока (Не СтрокаДерева.Родитель = Неопределено) Цикл
				СписокРодителей.Вставить(0, СтрокаДерева.Родитель);
				СтрокаДерева = СтрокаДерева.Родитель;
			КонецЦикла;
				
			Для Каждого Родитель Из СписокРодителей Цикл
				Родитель = Родитель.Значение;
				
				СтрокаЭлемент = Данные.Строки.Найти(Родитель.Ссылка, "Сотрудник", Истина);
				Если (СтрокаЭлемент = Неопределено) Тогда
					СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
					СтрокаЭлемент.Сотрудник = Родитель.Ссылка;
					СтрокаЭлемент.Представление = Родитель.Представление;
					СтрокаЭлемент.ЭтоГруппа = Истина;
				КонецЕсли;
				
				СтрокаГруппы = СтрокаЭлемент;
			КонецЦикла;
			
		КонецЕсли;
		
		// ---- Добавление в дерево элемента.
		СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
		
		Для Каждого Реквизит Из Документ.Метаданные().ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты Цикл
			СтрокаЭлемент[Реквизит.Имя] = СтрокаТабличнойЧасти[Реквизит.Имя];
		КонецЦикла;
		СтрокаЭлемент.ЭтоГруппа = Ложь;	
		СтрокаЭлемент.Актуальность = Булево(ТаблицаАктуальных.НайтиСтроки(Новый Структура("Сотрудник,КодВнештатногоСотрудника", СтрокаТабличнойЧасти.Сотрудник, СтрокаТабличнойЧасти.КодВнештатногоСотрудника)).Количество());
		
		Если СтрокаТабличнойЧасти.ВнештатныйСотрудник Тогда
			СтрокаДерева = ТаблицаРесторанов.Найти(СтрокаТабличнойЧасти.Сотрудник, "Ссылка");
		Иначе
			СтрокаДерева = ДеревоСотрудников.Строки.Найти(СтрокаТабличнойЧасти.Сотрудник, "Ссылка", Истина);
		КонецЕсли;
		Если (СтрокаДерева = Неопределено) Тогда
			СтрокаЭлемент.Представление = Строка(СтрокаТабличнойЧасти.Сотрудник);	
		Иначе
			СтрокаЭлемент.Представление = СтрокаДерева.Представление;	
		КонецЕсли;
		Если СтрокаТабличнойЧасти.ВнештатныйСотрудник Тогда
			СтрокаЭлемент.Код = СтрокаТабличнойЧасти.КодВнештатногоСотрудника;	
		Иначе
			Если (Не СтрокаДерева = Неопределено) Тогда
				СтрокаЭлемент.Код = СтрокаДерева.Код;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// -- Сортировка.
	//Данные.Строки.Сортировать("ЭтоГруппа Убыв,ВнештатныйСотрудник,Представление,КодВнештатногоСотрудника,ДатаНачалаПериода,ДатаОкончанияПериода", Истина);
	Данные.Строки.Сортировать("ЭтоГруппа Убыв,ДатаНачалаПериода,ДатаОкончанияПериода", Истина); //Костенюк Александр 27.04.2016
	
	// Обновление.
	ТабличноеПоле.ОбновитьСтроки();

КонецПроцедуры // ТаблицаТабеляПрочитать()

Процедура ТаблицаТабеляВывестиСтроку(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	//// ВнештатныйСотрудник.
	//ОформлениеСтроки.Ячейки("ВнештатныйСотрудник").ОтображатьФлажок = Не ДанныеСтроки.ЭтоГруппа;
	//ОформлениеСтроки.Ячейки("ВнештатныйСотрудник").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
	// КодВнештатногоСотрудника.
	ОформлениеСтроки.Ячейки("Код").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
	// Представление.
	ОформлениеСтроки.Ячейки("Представление").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
	//// ВидВремени.
	//ОформлениеСтроки.Ячейки("ВидВремени").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество()); //Костенюк Александр-Закомментировано 06.04.2016
	
	// Должность.
	ОформлениеСтроки.Ячейки("Должность").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество()); //Костенюк Александр 24.06.2016
	
	// РабочаяСмена.
	ОформлениеСтроки.Ячейки("РабочаяСмена").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество()); //Костенюк Александр 12.04.2016
	
	// ДатаНачалаПериода.
	ОформлениеСтроки.Ячейки("ДатаНачалаПериода").ОтображатьТекст = ЗначениеЗаполнено(ДанныеСтроки.ДатаНачалаПериода);
	ОформлениеСтроки.Ячейки("ДатаНачалаПериода").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
	// ДатаОкончанияПериода.
	ОформлениеСтроки.Ячейки("ДатаОкончанияПериода").ОтображатьТекст = ЗначениеЗаполнено(ДанныеСтроки.ДатаОкончанияПериода);
	ОформлениеСтроки.Ячейки("ДатаОкончанияПериода").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
	// Продолжительность.
	Если Не ДанныеСтроки.ЭтоГруппа Тогда
		Если ЗначениеЗаполнено(ДанныеСтроки.ДатаОкончанияПериода) Тогда
			ОформлениеСтроки.Ячейки("Продолжительность").Текст = ОбщегоНазначения.РассчитатьПродолжительность(ДанныеСтроки.ДатаНачалаПериода, ДанныеСтроки.ДатаОкончанияПериода);
		Иначе
			ОформлениеСтроки.Ячейки("Продолжительность").Текст = "~ " + ОбщегоНазначения.РассчитатьПродолжительность(ДанныеСтроки.ДатаНачалаПериода, ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	ОформлениеСтроки.Ячейки("Продолжительность").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
КонецПроцедуры // ТаблицаТабеляВывестиСтроку()

Процедура ДеревоСотрудниковПрочитать(ТабличноеПоле) Экспорт
	
	// Данные.
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка, Родитель, ЭтоГруппа, Код, Представление КАК Наименование, Организация ИЗ ВременнаяСотрудникиОрганизаций ГДЕ Актуальность И НЕ ПометкаУдаления");
	Запрос.МенеджерВременныхТаблиц = ПолучитьСерверFrontOffice().МенеджерВременныхТаблиц;
	
	// -- Поиск.
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	ТаблицаЗначений.Колонки.Добавить("Поиск", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Метаданные.Справочники.СотрудникиОрганизаций.ДлинаКода, 0, ДопустимыйЗнак.Неотрицательный)));
	Для Каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		Если СтрокаТаблицы.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.Поиск = ОбщегоНазначения.ПреобразоватьВЧисло(СтрокаТаблицы.Код);
	КонецЦикла;
	
	Данные = ОбщегоНазначения.ТаблицуЗначенийВДеревоЗначений(ТаблицаЗначений, "Ссылка", "Родитель");
		
	ТабличноеПоле.Данные(Данные); ТабличноеПоле.СоздатьКолонки("Картинка,Код,Наименование");
	ТабличноеПоле.Колонки.Получить("Код").ТекстШапки = Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.КодВнештатногоСотрудника.Синоним;
	ТабличноеПоле.Колонки.Получить("Код").Ширина = 400 * 0.20;
	ТабличноеПоле.Колонки.Получить("Наименование").Ширина = 400 * 0.50;
	ТабличноеПоле.РежимВыделенияСтроки = РежимВыделенияСтрокиТабличногоПоля.Строка;

КонецПроцедуры // ДеревоСотрудниковПрочитать()

Процедура ДеревоСотрудниковВывестиСтроку(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	// Код.
	ОформлениеСтроки.Ячейки("Код").ОтображатьТекст = Не ДанныеСтроки.ЭтоГруппа;
	ОформлениеСтроки.Ячейки("Код").ГиперСсылка = ДанныеСтроки.ЭтоГруппа;
	
	// Наименование.
	ОформлениеСтроки.Ячейки("Наименование").ГиперСсылка = ДанныеСтроки.ЭтоГруппа;
	
КонецПроцедуры // ДеревоСотрудниковВывестиСтроку()

Процедура ТаблицаРесторановПрочитать(ТабличноеПоле) Экспорт
	
	// Данные.
	Запрос = Новый Запрос("ВЫБРАТЬ Ссылка, Представление КАК Наименование ИЗ ВременнаяРестораны ГДЕ НЕ ПометкаУдаления");
	Запрос.МенеджерВременныхТаблиц = ПолучитьСерверFrontOffice().МенеджерВременныхТаблиц;
	Данные = Запрос.Выполнить().Выгрузить();
		
	ТабличноеПоле.Данные(Данные); ТабличноеПоле.СоздатьКолонки("Картинка,Наименование");
	ТабличноеПоле.РежимВыделенияСтроки = РежимВыделенияСтрокиТабличногоПоля.Строка;

КонецПроцедуры // ТаблицаРесторановПрочитать()

Функция СотрудникПолучить(Документ, Сотрудник, КодВнештатногоСотрудника = "") Экспорт
	//перем ЗначениеВозврат;
	ЗначениеВозврат = Неопределено;
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (Не СтрокаТабличнойЧасти.Сотрудник = Сотрудник) Или (Не СтрокаТабличнойЧасти.КодВнештатногоСотрудника = КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		Иначе 
			ЗначениеВозврат = СтрокаТабличнойЧасти.ВидВремени;
			Прервать;
		КонецЕсли;					
	КонецЦикла;
	
	Возврат ЗначениеВозврат;
	
КонецФункции

//Функция СотрудникДобавить(Документ, Сотрудник, КодВнештатногоСотрудника = "", Организация = Неопределено, ВидВремени, ВыводитьСообщение = Истина) Экспорт
Функция СотрудникДобавить(Документ, Сотрудник, КодВнештатногоСотрудника = "", Организация = Неопределено, ВидВремени, ВыводитьСообщение = Истина, РабочаяСмена = Неопределено, Должность = Неопределено) Экспорт //Костенюк Александр 14.04.2016
	
	СтруктураПоиска = Новый Структура("Сотрудник, ДатаОкончанияПериода", Сотрудник, ОбщегоНазначенияСервер.ПолучитьПустуюДату());	
	СтрокиТаблицы = Документ.ОтработанноеВремяВЦеломЗаПериод.НайтиСтроки(СтруктураПоиска);
	Если СтрокиТаблицы.Количество() > 0 Тогда
		СтрМассива = СтрокиТаблицы [СтрокиТаблицы.Количество()-1];
		Если ВыводитьСообщение Тогда
			FrontOffice.ВывестиПредупреждение(НСтр("ru='Сотрудник уже добавлен в смену!';uk='Співробітник вже доданий в зміну!'"));
			Возврат Ложь;
		Иначе
			Возврат  Ложь;
		КонецЕсли;
	КонецЕсли;                                                          
	
	Дата = ТекущаяДата();	
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (Не СтрокаТабличнойЧасти.Сотрудник = Сотрудник) Или (Не СтрокаТабличнойЧасти.КодВнештатногоСотрудника = КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТабличнойЧасти.ДатаОкончанияПериода = Дата - 1;
	КонецЦикла;
	
	СтрокаТабличнойЧасти = Документ.ОтработанноеВремяВЦеломЗаПериод.Добавить(); 
		
	СтрокаТабличнойЧасти.Сотрудник				= Сотрудник;
	СтрокаТабличнойЧасти.ВнештатныйСотрудник	= ЗначениеЗаполнено(КодВнештатногоСотрудника);
	СтрокаТабличнойЧасти.КодВнештатногоСотрудника = КодВнештатногоСотрудника;
	СтрокаТабличнойЧасти.Должность 				= Должность; //Костенюк Александр 29.06.2016
	
	Если СтрокаТабличнойЧасти.ВнештатныйСотрудник Тогда
		СтрокаТабличнойЧасти.Организация = Организация;
	Иначе
		СтрокаТабличнойЧасти.Организация = СтрокаТабличнойЧасти.Сотрудник.Организация;
	КонецЕсли;
	
	//Костенюк Александр-Старт 13.04.2016
	СтрокаТабличнойЧасти.РабочаяСмена = РабочаяСмена;
	СтрокаТабличнойЧасти.НормаЧасов = РабочаяСмена.НормаЧасов;
	СтрокаТабличнойЧасти.КоэффициентОкругленияПериода = РегистрыСведений.НастройкаПараметровУчета.Получить().УчетРабочегоВремениКоэффициентОкругленияПериода;
	//Костенюк Александр-Финиш 13.04.2016
	СтрокаТабличнойЧасти.ВидВремени = ВидВремени;
	СтрокаТабличнойЧасти.ДатаНачалаПериода = Дата;
		
	Если Не ДокументЗаписать(Документ) Тогда
		ДокументПрочитать(Документ);
		Возврат Ложь;
	КонецЕсли;
	
	Если ВыводитьСообщение Тогда
		//FrontOffice.ВывестиПредупреждение(НСтр("ru='Сотрудник " + Сотрудник + " успешно добавлен в смену!';uk='Співробітник "+ Сотрудник + " успішно доданий в зміну!'"));
		//Костенюк Александр-Старт 20.02.2013
		// В некоторых случаях сотрудник не добавляется на смену
		Если НЕ Сотрудник = Неопределено Тогда 
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Сотрудник", Сотрудник);
			НайденныеСтроки = Документ.ОтработанноеВремяВЦеломЗаПериод.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() Тогда
				FrontOffice.ВывестиПредупреждение(НСтр("ru='Сотрудник " + Сотрудник + " успешно добавлен в смену!';uk='Співробітник "+ Сотрудник + " успішно доданий в зміну!'"));
			Иначе
				FrontOffice.ВывестиПредупреждение(НСтр("ru='Сотрудник " + Сотрудник + " не добавлен в смену! Документ " + Документ + " ';uk='Співробітник "+ Сотрудник + " не доданий в зміну! Документ " + Документ + "'"));
				Возврат Ложь;
			КонецЕсли;
		Иначе
			FrontOffice.ВывестиПредупреждение(НСтр("ru='Сотрудник " + Сотрудник + " не добавлен в смену! Документ " + Документ + " ';uk='Співробітник "+ Сотрудник + " не доданий в зміну! Документ " + Документ + "'"));
			Возврат Ложь;
		КонецЕсли;
		//Костенюк Александр-Финиш 20.02.2013
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

//Костенюк Александр-Старт 13.04.2016
Функция СотрудникИзменить(Документ, Сотрудник, КодВнештатногоСотрудника = "", РабочаяСмена) Экспорт
	
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (СтрокаТабличнойЧасти.Сотрудник <> Сотрудник) ИЛИ (СтрокаТабличнойЧасти.КодВнештатногоСотрудника <> КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТабличнойЧасти.РабочаяСмена = РабочаяСмена;
	КонецЦикла;
	
	Если НЕ ДокументЗаписать(Документ) Тогда
		ДокументПрочитать(Документ);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
//Костенюк Александр-Финиш 13.04.2016

Функция СотрудникУдалить(Документ, Сотрудник, КодВнештатногоСотрудника = Неопределено) Экспорт
	
	// Дата.
	Дата = ТекущаяДата();
	
	// Удаление.
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (Не СтрокаТабличнойЧасти.Сотрудник = Сотрудник) Или (Не СтрокаТабличнойЧасти.КодВнештатногоСотрудника = КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТабличнойЧасти.ДатаОкончанияПериода = Дата;
		СтрокаТабличнойЧасти.КоличествоСменРасчетное = РассчитатьКоличествоСмен(СтрокаТабличнойЧасти.ДатаНачалаПериода, СтрокаТабличнойЧасти.ДатаОкончанияПериода, СтрокаТабличнойЧасти.КоэффициентОкругленияПериода, СтрокаТабличнойЧасти.РабочаяСмена.НормаЧасов);//Костенюк Александр 13.04.2016
	КонецЦикла;
	
	// Запись.
	Если Не ДокументЗаписать(Документ) Тогда
		ДокументПрочитать(Документ);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // СотрудникУдалить()

Функция ДокументНайти(Документ, Ресторан = Неопределено ) Экспорт
	 
	// Поиск документа.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТабельУчетаРабочегоВремениОрганизации.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации КАК ТабельУчетаРабочегоВремениОрганизации
	|ГДЕ
	|	(НЕ ТабельУчетаРабочегоВремениОрганизации.ПометкаУдаления)
	|	И ТабельУчетаРабочегоВремениОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДокументов.Открытые)
	|	И ТабельУчетаРабочегоВремениОрганизации.Ресторан = &Ресторан
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабельУчетаРабочегоВремениОрганизации.МоментВремени УБЫВ");
	Если Ресторан = Неопределено Тогда
		Запрос.УстановитьПараметр("Ресторан",ТекущийРесторан);
	Иначе
		Запрос.УстановитьПараметр("Ресторан", Ресторан);	
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
	КонецЕсли;
	
	// Результат.
	Документ = Выборка.Ссылка;
	Возврат Истина;

КонецФункции // ДокументНайти()	

Функция ДокументПроверить(Документ) Экспорт
	
	// Получение объекта.
	ДокументОбъект = Документ;
	
	// Шапка.
	Если ДокументОбъект.Проведен Или (Не ЗначениеЗаполнено(ДокументОбъект.Дата)) Или (Не ЗначениеЗаполнено(ДокументОбъект.ДатаНачалаПериода)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Отработанное время в целом за период.
	Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сотрудник)) Или СтрокаТабличнойЧасти.Сотрудник.Пустая() Тогда
			Возврат Ложь;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.ВнештатныйСотрудник Тогда
			Если (Не ТипЗнч(СтрокаТабличнойЧасти.Сотрудник) = Тип("СправочникСсылка.Рестораны")) Или ПустаяСтрока(СтрокаТабличнойЧасти.КодВнештатногоСотрудника) Тогда
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Если (Не ТипЗнч(СтрокаТабличнойЧасти.Сотрудник) = Тип("СправочникСсылка.СотрудникиОрганизаций")) Или (Не ПустаяСтрока(СтрокаТабличнойЧасти.КодВнештатногоСотрудника)) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		//Если СтрокаТабличнойЧасти.Организация.Пустая() Или СтрокаТабличнойЧасти.ВидВремени.Пустая() Или (Не ЗначениеЗаполнено(ДокументОбъект.ДатаНачалаПериода)) Тогда
		Если СтрокаТабличнойЧасти.Организация.Пустая() Или СтрокаТабличнойЧасти.ВидВремени.Пустая() Или (Не ЗначениеЗаполнено(ДокументОбъект.ДатаНачалаПериода)) Или (Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.РабочаяСмена)) Тогда //Костенюк Александр 13.04.2016
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
		
	Возврат Истина;

КонецФункции // ДокументПроверить()	

//Функция ДокументСоздать(ДокументОснование = Неопределено) Экспорт
Функция ДокументСоздать(ДокументОснование = Неопределено, ДеревоДанных = Неопределено) Экспорт //Костенюк Александр 07.04.2016
	
	Перем Дата;
	
	// Дата.
	Дата = ТекущаяДата();
	
	// Переносимые сотрудники (I).
	ТаблицаСотрудников = Новый ТаблицаЗначений;
	Для Каждого Реквизит Из Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты Цикл
		ТаблицаСотрудников.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип, Реквизит.Синоним);
	КонецЦикла;
	Владелец = Неопределено;
	
	ДокументОснованиеСсылка = Неопределено;
	Если ДокументОснование<>Неопределено
		И Не ДокументОснование.Ссылка.Пустая() Тогда
		
		Если Не ДокументПроверить(ДокументОснование) Тогда
			//FrontOffice.ВывестиПредупреждение("Невозможно выполнить операцию, содержимое документа не является корректным!");
			FrontOffice.ВывестиПредупреждение(НСтр("ru='Невозможно выполнить операцию, содержимое документа не является корректным!';uk='Неможливо виконати операцію, вміст документа не є коректним!'")); //Костенюк Александр 31.05.2012
			Возврат Ложь;
		КонецЕсли;
		
		Для Каждого СтрокаТабличнойЧасти Из ДокументОснование.ОтработанноеВремяВЦеломЗаПериод Цикл
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицы = ТаблицаСотрудников.Добавить();
			СтрокаТаблицы.ВнештатныйСотрудник = СтрокаТабличнойЧасти.ВнештатныйСотрудник;
			СтрокаТаблицы.Сотрудник = СтрокаТабличнойЧасти.Сотрудник;
			СтрокаТаблицы.КодВнештатногоСотрудника = СтрокаТабличнойЧасти.КодВнештатногоСотрудника;
			СтрокаТаблицы.РабочаяСмена = СтрокаТабличнойЧасти.РабочаяСмена; //Костенюк Александр 12.04.2016
			СтрокаТаблицы.ВидВремени = СтрокаТабличнойЧасти.ВидВремени;
			СтрокаТаблицы.Организация = СтрокаТабличнойЧасти.Организация;
		КонецЦикла;
		Владелец = ДокументОснование.Ссылка;
		
		ДокументОснование.ДатаОкончанияПериода = Дата;
		
		//Если Не ДокументЗаписать(ДокументОснование) Тогда
		Если Не ДокументЗаписать(ДокументОснование, ДеревоДанных) Тогда //Костенюк Александр 07.04.2016
			Возврат Ложь;
		КонецЕсли;
		
		ДокументОснованиеСсылка = ДокументОснование.Ссылка;
		
		ДокументЗакрыть(ДокументОснование);
		
	КонецЕсли;
	
	
	Если Не УправлениеПользователями.ПолучитьЗначениеПрава(ПланыВидовХарактеристик.ПраваПользователей.FrontOfficeОткрытиеСмены) Тогда
		//FrontOffice.ВывестиОшибку("Недостаточно прав доступа для открытия новой смены!");
		//Костенюк Александр-Старт 31.05.2012
		FrontOffice.ВывестиОшибку(НСтр("ru='Недостаточно прав доступа для открытия новой смены!';uk='Недостатньо прав доступу для відкриття нової зміни!'"));
		//Костенюк Александр-Финиш 31.05.2012
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		ДокументОбъект = Документы.ТабельУчетаРабочегоВремениОрганизации.СоздатьДокумент();
	Исключение
		//FrontOffice.ВывестиОшибку("Невозможно создать документ, не удается создать новый документ!");
		//Костенюк Александр-Старт 31.05.2012
		FrontOffice.ВывестиОшибку(НСтр("ru='Невозможно создать документ, не удается создать новый документ!';uk='Неможливо створити документ, не вдається створити новий документ!'"));
		//Костенюк Александр-Финиш 31.05.2012
		Возврат Ложь;
	КонецПопытки;
	
	ДокументОбъект.Дата = Дата; //ДокументОбъект.ИсторияРеквизит(Дата, "Дата");
	ДокументОбъект.ДокументОснование = ДокументОснованиеСсылка;
	ОбщегоНазначения.ЗаполнитьШапкуДокумента(ДокументОбъект, глЗначениеПеременной("глТекущийПользователь")); //ДокументОбъект.ИсторияРеквизит(Дата, "Состояние");
	
	// Чистяков Павел 31.01.2011 14:24:25 
	// Ресторан уже выбрали из списка
	ДокументОбъект.Ресторан = ТекущийРесторан;
	
	//ВыборРабочейСмены(ДокументОбъект.РабочаяСмена);
	
	////Костенюк Александр-Закомментировано 13.04.2016
	//Для Каждого СтрокаТаблицы Из ТаблицаСотрудников Цикл
	//	СтрокаТабличнойЧасти = ДокументОбъект.ОтработанноеВремяВЦеломЗаПериод.Добавить();
	//	СтрокаТабличнойЧасти.ВнештатныйСотрудник = СтрокаТаблицы.ВнештатныйСотрудник;
	//	СтрокаТабличнойЧасти.Сотрудник = СтрокаТаблицы.Сотрудник;
	//	СтрокаТабличнойЧасти.КодВнештатногоСотрудника = СтрокаТаблицы.КодВнештатногоСотрудника;
	//	СтрокаТабличнойЧасти.РабочаяСмена = СтрокаТаблицы.РабочаяСмена; //Костенюк Александр 13.04.2016
	//	СтрокаТабличнойЧасти.ВидВремени = СтрокаТаблицы.ВидВремени;
	//	СтрокаТабличнойЧасти.ДатаНачалаПериода = Дата;
	//	СтрокаТабличнойЧасти.Организация = СтрокаТаблицы.Организация;
	//КонецЦикла;
	
	Если Не ДокументЗаписать(ДокументОбъект) Тогда
		ДокументОбъект = Неопределено;
		Возврат Ложь;
	КонецЕсли;
	
	Если Не УправлениеПользователями.ПолучитьЗначениеПрава(ПланыВидовХарактеристик.ПраваПользователей.FrontOfficeПросмотрСмены) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ДокументОткрыть(ДокументОбъект.Ссылка);

КонецФункции

// Чистяков Павел 01.12.2011 15:22:29 
Функция ВыборРесторана(Значение = Неопределено) Экспорт
	
	Запрос = Новый Запрос(                                   
	"ВЫБРАТЬ
	|	Рестораны.Ссылка,
	|	Рестораны.Представление КАК Наименование
	|ИЗ
	|	Справочник.Рестораны КАК Рестораны
	|ГДЕ
	|	(НЕ Рестораны.ПометкаУдаления)");
	ТаблицыЗначений = Запрос.Выполнить().Выгрузить();
	СтрокаТаблицы = ТаблицыЗначений.Найти(Значение, "Ссылка");
	//Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзТаблицыЗначений(СтрокаТаблицы, "Выберите ресторан", ТаблицыЗначений, "Картинка,Наименование") Тогда
	//Костенюк Александр-Старт 31.05.2012
	Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзТаблицыЗначений(СтрокаТаблицы, НСтр("ru='Выберите ресторан';uk='Виберіть ресторан'"), ТаблицыЗначений, "Картинка,Наименование") Тогда
	//Костенюк Александр-Финиш 31.05.2012
		Значение = СтрокаТаблицы.Ссылка;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Чистяков Павел 28.11.2011 16:35:17 
Функция ВыборРабочейСмены(Значение = Неопределено) Экспорт
	
	// Данные.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РабочиеСмены.Ссылка,
	|	РабочиеСмены.Представление КАК Наименование
	|ИЗ
	|	Справочник.РабочиеСмены КАК РабочиеСмены
	|ГДЕ
	|	(НЕ РабочиеСмены.ПометкаУдаления)");
	ТаблицыЗначений = Запрос.Выполнить().Выгрузить();
	СтрокаТаблицы = ТаблицыЗначений.Найти(Значение, "Ссылка");
	//Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзТаблицыЗначений(СтрокаТаблицы, "Выберите рабочую смену", ТаблицыЗначений, "Картинка,Наименование") Тогда
	Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзТаблицыЗначений(СтрокаТаблицы, НСтр("ru='Выберите рабочую смену';uk='Виберіть робочу зміну'"), ТаблицыЗначений, "Картинка,Наименование") Тогда //Костенюк Александр 31.05.2012
		Значение = СтрокаТаблицы.Ссылка;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ДокументОткрыть(Документ = Неопределено) Экспорт
	
	Если Не УправлениеПользователями.ПолучитьЗначениеПрава(ПланыВидовХарактеристик.ПраваПользователей.FrontOfficeПросмотрСмены) Тогда
		//FrontOffice.ВывестиОшибку("Недостаточно прав доступа для просмотра данного документа!");
		//Костенюк Александр-Старт 31.05.2012
		FrontOffice.ВывестиОшибку(НСтр("ru='Недостаточно прав доступа для просмотра данного документа!';uk='Недостатньо прав доступу для перегляду даного документа!'"));
		//Костенюк Александр-Финиш 31.05.2012
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущийРесторан) Тогда
		Если НЕ ВыборРесторана(ТекущийРесторан) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
		
	Если (Документ = Неопределено) Тогда
		ДокументНайти(Документ);
	КонецЕсли;
	
	Если (Документ = Неопределено)
		И УправлениеПользователями.ПолучитьЗначениеПрава(ПланыВидовХарактеристик.ПраваПользователей.FrontOfficeОткрытиеСмены) Тогда
		//Результат = FrontOffice.ВывестиВопрос("На текущий момент нет открытой смены. Открыть новую смену?", РежимДиалогаВопрос.ДаНетОтмена);
		Результат = FrontOffice.ВывестиВопрос(НСтр("ru='Рабочий день не открыт. Открыть рабочий день?';uk='Робочий день не відкритий. Відкрити робочий день?'"), РежимДиалогаВопрос.ДаНетОтмена); //Костенюк Александр 27.04.2016
		Если (Результат = КодВозвратаДиалога.Да) Тогда
			Возврат ДокументСоздать();
		ИначеЕсли (Не Результат = КодВозвратаДиалога.Нет) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ТолькоПросмотр = Ложь;
	ДокументОбъект = Неопределено;	
	
	Если (Не Документ = Неопределено) Тогда
		Попытка
			ДокументОбъект = Документ.ПолучитьОбъект();
			
			Если Не ДокументПроверить(ДокументОбъект) Тогда
				//FrontOffice.ВывестиПредупреждение("Невозможно выполнить операцию, содержимое документа не является корректным!");
				FrontOffice.ВывестиПредупреждение(НСтр("ru='Невозможно выполнить операцию, содержимое документа не является корректным!';uk='Неможливо виконати операцію, вміст документа не є коректним!'")); //Костенюк Александр 31.05.2012
				Возврат Ложь;
			КонецЕсли;
			
			Попытка
				ДокументОбъект.Заблокировать();
			Исключение
				//Если (Не FrontOffice.ВывестиВопрос("Невозможно отрыть документ для редактирования, документ используется другим пользователем." + Символы.ПС + "Открыть документ в режиме просмотра?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда
				Если (Не FrontOffice.ВывестиВопрос(НСтр("ru='Невозможно отрыть документ для редактирования, документ используется другим пользователем.';uk='Неможливо відрити документ для редагування, документ використовується іншим користувачем.'") + Символы.ПС + НСтр("ru='Открыть документ в режиме просмотра?';uk='Відкрити документ в режимі перегляду?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да) Тогда //Костенюк Александр 31.05.2012
					Возврат Ложь;
				КонецЕсли;
				ТолькоПросмотр = Истина;
			КонецПопытки;
		Исключение
			//FrontOffice.ВывестиОшибку("Невозможно отрыть документ, документ не существует!");
			FrontOffice.ВывестиОшибку(НСтр("ru='Невозможно отрыть документ, документ не существует!';uk='Неможливо відрити документ, документ не існує!'")); //Костенюк Александр 31.05.2012
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	// Установка значений.
	Форма.ДокументОбъект = ДокументОбъект;
	Форма.ТолькоПросмотр = ТолькоПросмотр;
	
	// Открытие формы.
	ПолучитьСерверFrontOffice().__ОткрытьФорму(Форма);
	
	Возврат Истина;
	
КонецФункции // ДокументОткрыть()

Функция ДокументПрочитать(Документ) Экспорт
	
	// Выборка данных.
	Возврат ПолучитьСерверFrontOffice().ДокументПрочитать(Документ);
	
КонецФункции // ДокументПрочитать()

Функция ДокументЗаписать(Документ, ДеревоДанных = Неопределено) Экспорт

	// Получение объекта.
	ДокументОбъект = Документ;
	
	// Нормализация.
	Если ЗначениеЗаполнено(ДокументОбъект.ДатаОкончанияПериода) Тогда
		Для Каждого СтрокаТабличнойЧасти Из ДокументОбъект.ОтработанноеВремяВЦеломЗаПериод Цикл
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТабличнойЧасти.ДатаОкончанияПериода = ДокументОбъект.ДатаОкончанияПериода;
		КонецЦикла;
	КонецЕсли;
	
	// Ответсвенный.
	Если не ЗначениеЗаполнено(ДокументОбъект.Ответственный) Тогда
		ДокументОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;
	
	//Костенюк Александр-Старт 07.04.2016
	// Заполнение табличной части
	Если ДеревоДанных <> Неопределено Тогда
		Для Каждого СтрокаДереваДанных Из ДеревоДанных.Строки Цикл
			Идентификатор = СтрокаДереваДанных.Идентификатор;
			СтрокаДереваЗначений = ДокументОбъект.ОтработанноеВремяВЦеломЗаПериод.Найти(Идентификатор, "Идентификатор");
			Если СтрокаДереваЗначений = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаДереваЗначений, СтрокаДереваДанных);
		КонецЦикла;
	КонецЕсли;
	//Костенюк Александр-Финиш 07.04.2016
	
	// Запись объекта.
	Пока Истина Цикл
		Попытка
			Если ЗначениеЗаполнено(ДокументОбъект.ДатаОкончанияПериода) Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокументОбъект.Записать();
			КонецЕсли;
			Прервать;
		Исключение
			Если ДокументОбъект.ЭтоНовый() Тогда
				//Результат = FrontOffice.ВывестиВопрос("Невозможно создать документ, не удается записать новый документ!" + Символы.ПС + "Повторить попытку записи документа?", РежимДиалогаВопрос.ПовторитьОтмена);
				Результат = FrontOffice.ВывестиВопрос(НСтр("ru='Невозможно создать документ, не удается записать новый документ!';uk='Неможливо створити документ, не вдається записати новий документ!'") + Символы.ПС + НСтр("ru='Повторить попытку записи документа?';uk='Повторити спробу запису документа?'"), РежимДиалогаВопрос.ПовторитьОтмена); //Костенюк Александр 31.05.2012
			Иначе
				//Результат = FrontOffice.ВывестиВопрос("Невозможно записать текущий документ!" + Символы.ПС + "Повторить попытку записи документа?", РежимДиалогаВопрос.ПовторитьОтмена);
				Результат = FrontOffice.ВывестиВопрос(НСтр("ru='Невозможно записать текущий документ!';uk='Неможливо записати поточний документ!'") + Символы.ПС + НСтр("ru='Повторить попытку записи документа?';uk='Повторити спробу запису документа?'"), РежимДиалогаВопрос.ПовторитьОтмена); //Костенюк Александр 31.05.2012
			КонецЕсли;
			Если (Не Результат = КодВозвратаДиалога.Повторить) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ДокументЗакрыть(ДокументОбъект) Экспорт
	
	// Снятие блокировки с объекта.
	Если Не ДокументОбъект.Ссылка.Пустая()
		И ДокументОбъект.Заблокирован() Тогда
		ДокументОбъект.Разблокировать();
	КонецЕсли;
	
	ДокументОбъект = Неопределено;
	
КонецФункции

Функция НайтиДокументУчетаРабочегоВремени(Документ = Неопределено, Ресторан = Неопределено) Экспорт 	
	
	Если Документ <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Ресторан = Неопределено Тогда
		Ресторан = ПараметрыСеанса.ТекущийРесторан;
	КонецЕсли;
	
	Если ДокументНайти(Документ, Ресторан) Тогда
		Возврат	Истина;
	Иначе
		//FrontOffice.ВывестиПредупреждение(НСтр("ru='Рабочая смена не открыта!';uk='Робоча зміна не відкрита'"));
		FrontOffice.ВывестиПредупреждение(НСтр("ru='Рабочий день не открыт!';uk='Робочий день не відкрито!'")); //Костенюк Александр 28.04.2016
		Возврат Ложь;
	КонецЕсли;		
	
КонецФункции 	
	

//////////////////////////////////////////////////////////////////////////
// ВЫБОР СОТРУДНИКА
                   
Процедура ПоискСотрудникаВыбор(Элемент, Значение, Колонка, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

Процедура ПоискСотрудникаПриИзмененииДанных(Элемент) Экспорт
	
	ТабличноеПоле = Элемент; 
	ПолучитьСерверFrontOffice().ТабличноеПолеПоместить(ТабличноеПоле);
	
КонецПроцедуры

Процедура ПоискСотрудникаПриПоискеЗначения(Элемент, Значение, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Данные = Элемент.Данные();
	Данные.Очистить();
	
	//ТекстЗапроса = 
	//"ВЫБРАТЬ
	//|	СотрудникиОрганизаций.Ссылка,
	//|	СотрудникиОрганизаций.Код,
	//|	СотрудникиОрганизаций.Организация,
	//|	СотрудникиОрганизаций.Наименование КАК ОбъектПредставление
	//|ИЗ
	//|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций";
	
	//Костенюк Александр-Старт 24.07.2012
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СотрудникиОрганизаций.Ссылка,
	               |	СотрудникиОрганизаций.Код,
	               |	СотрудникиОрганизаций.Организация,
	               |	СотрудникиОрганизаций.Наименование КАК ОбъектПредставление
	               |ИЗ
	               |	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	               |ГДЕ
	               |	СотрудникиОрганизаций.Актуальность
	               |	И НЕ СотрудникиОрганизаций.ПометкаУдаления
	               |	И НЕ СотрудникиОрганизаций.ЭтоГруппа";
	//Костенюк Александр-Финиш 24.07.2012
	
	Если Не ПустаяСтрока(Значение) Тогда
		//ТекстЗапроса = ТекстЗапроса + " ГДЕ
		//Костенюк Александр-Старт 24.07.2012
		ТекстЗапроса = ТекстЗапроса + " И
		//Костенюк Александр-Финиш 24.07.2012
		|	(СотрудникиОрганизаций.Наименование ПОДОБНО &Наименование
		|			ИЛИ СотрудникиОрганизаций.Код ПОДОБНО &Код)";
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Если Не ПустаяСтрока(Значение) Тогда
		Запрос.УстановитьПараметр("Наименование", Значение+"%");
		Запрос.УстановитьПараметр("Код", "%"+Значение+"%");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаблицы = Данные.Добавить();	
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы,Выборка);
		
	КонецЦикла;
		
	Элемент.ОбновитьСтроки();
	
КонецПроцедуры

Процедура ПоискСотрудникаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
КонецПроцедуры

//Функция ВыборСотрудника(Документ, ВидВремени = Неопределено, Сотрудник = Неопределено, ВыводитьСообщение = Истина) Экспорт
Функция ВыборСотрудника(Документ, ВидВремени = Неопределено, Сотрудник = Неопределено, ВыводитьСообщение = Истина, РабочаяСмена = Неопределено, Должность = Неопределено) Экспорт //Костенюк Александр 24.06.2016
	
	ОсновнаяОрганизацияВнештатныхСотрудников = УправлениеПользователями.ПолучитьЗначениеНастройки(ПланыВидовХарактеристик.НастройкиПользователей.FrontOfficeОсновнаяОрганизацияВнештатныхСотрудников); //Костенюк Александр 13.04.2016
	ЗапрашиватьДолжность = УправлениеПользователями.ПолучитьЗначениеНастройки(ПланыВидовХарактеристик.НастройкиПользователей.FrontOfficeЗапрашиватьДолжность); //Костенюк Александр 12.07.2016
	
	Если Сотрудник = Неопределено Тогда  
		Данные = Новый ТаблицаЗначений;
		//Данные.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"),"Код (Таб. №)");
		//Данные.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"),"Сотрудник");
		//Данные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"),"Организация");
		
		//Костенюк Александр-Старт 31.05.2012
		Данные.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"),НСтр("ru='Код (Таб. №)';uk='Код (Таб. №)'"));
		Данные.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"),НСтр("ru='Сотрудник';uk='Співробітник'"));
		Данные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"),НСтр("ru='Организация';uk='Організація'"));
		//Костенюк Александр-Финиш 31.05.2012
		
		Строкой = "";

		//Если FrontOffice.ПоискСтроки(Строкой,"Выберите сотрудника",,,,Данные,
		Если FrontOffice.ПоискСтроки(Строкой,НСтр("ru='Выберите сотрудника';uk='Виберіть співробітника'"),,,,Данные, //Костенюк Александр 31.05.2012
			"Код,Ссылка,Организация",
			НЕ УправлениеПользователями.ПолучитьЗначениеНастройки(ПланыВидовХарактеристик.НастройкиПользователей.FrontOfficeИспользоватьУчетРабочегоВремениВнештатныхСотрудников),
			ЭтотОбъект,"ПоискСотрудника") Тогда
			Если Строкой = Неопределено Тогда
				Возврат Ложь;
			КонецЕсли;
			Если ТипЗнч(Строкой)=Тип("Строка") Тогда
				Ресторан = Неопределено;
				Если НЕ ВыборРесторана(Ресторан) Тогда
					Возврат Ложь;
				КонецЕсли;
				Если ВидВремени <> Неопределено Тогда
					//Если Не СотрудникДобавить(Документ, Ресторан, Строкой,
					//	УправлениеПользователями.ПолучитьЗначениеНастройки(ПланыВидовХарактеристик.НастройкиПользователей.FrontOfficeОсновнаяОрганизацияВнештатныхСотрудников),
					//	ВидВремени, ВыводитьСообщение) Тогда
					//	Возврат Ложь;
					//КонецЕсли;
					//Костенюк Александр-Старт 13.04.2016
					Если РабочаяСмена = Неопределено Тогда
						Если НЕ ВыборРабочейСмены(РабочаяСмена) Тогда
							Возврат Ложь;
						КонецЕсли;
					КонецЕсли;
					Если Должность = Неопределено Тогда
						Если ЗапрашиватьДолжность Тогда
							Если НЕ ВыборДолжности(Должность) Тогда
								Возврат Ложь;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Если НЕ СотрудникДобавить(Документ, Ресторан, Строкой, ОсновнаяОрганизацияВнештатныхСотрудников, ВидВремени, ВыводитьСообщение, РабочаяСмена, Должность) Тогда
						Возврат Ложь;
					КонецЕсли;
					//Костенюк Александр-Финиш 13.04.2016
				иначе
					
					Если Не ВыборВидаВремени(ВидВремени) Тогда
						Возврат Ложь;
					КонецЕсли;
					
					//Если Не СотрудникДобавить(Документ, Ресторан, Строкой,
					//	УправлениеПользователями.ПолучитьЗначениеНастройки(ПланыВидовХарактеристик.НастройкиПользователей.FrontOfficeОсновнаяОрганизацияВнештатныхСотрудников),
					//	ВидВремени , ВыводитьСообщение ) Тогда
					//	Возврат Ложь;
					//КонецЕсли;
					//Костенюк Александр-Старт 13.04.2016
					Если РабочаяСмена = Неопределено Тогда
						Если НЕ ВыборРабочейСмены(РабочаяСмена) Тогда
							Возврат Ложь;
						КонецЕсли;
					КонецЕсли;
					Если Должность = Неопределено Тогда
						Если ЗапрашиватьДолжность Тогда
							Если НЕ ВыборДолжности(Должность) Тогда
								Возврат Ложь;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Если НЕ СотрудникДобавить(Документ, Ресторан, Строкой, ОсновнаяОрганизацияВнештатныхСотрудников, ВидВремени, ВыводитьСообщение, РабочаяСмена, Должность) Тогда
						Возврат Ложь;
					КонецЕсли;
					//Костенюк Александр-Финиш 13.04.2016
				КонецЕсли;
				//Костенюк Александр-Старт 13.04.2016
				// Рабочая смена
				Если РабочаяСмена = Неопределено Тогда
					Если НЕ ВыборРабочейСмены(РабочаяСмена) Тогда
						Возврат Ложь;
					КонецЕсли;
				КонецЕсли;
				Если Должность = Неопределено Тогда
					Если ЗапрашиватьДолжность Тогда
						Если НЕ ВыборДолжности(Должность) Тогда
							Возврат Ложь;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если НЕ СотрудникДобавить(Документ, Ресторан, Строкой, ОсновнаяОрганизацияВнештатныхСотрудников, ВидВремени, ВыводитьСообщение, РабочаяСмена, Должность) Тогда
					Возврат Ложь;
				КонецЕсли;
				//Костенюк Александр-Финиш 13.04.2016
			Иначе
				Если Строкой = Неопределено Тогда
					Возврат Ложь;
				КонецЕсли;
 			
				Сотрудник = Строкой.Ссылка;
				// Администратор 18.01.2012 12:16:45
				Если ВидВремени <> Неопределено Тогда
					//Если Не СотрудникДобавить(Документ, Сотрудник, Неопределено, Сотрудник.Организация, ВидВремени, ВыводитьСообщение) Тогда
					//	Возврат Ложь;
					//КонецЕсли;
					//Костенюк Александр-Старт 13.04.2016
					Если РабочаяСмена = Неопределено Тогда
						Если НЕ ВыборРабочейСмены(РабочаяСмена) Тогда
							Возврат Ложь;
						КонецЕсли;
					КонецЕсли;
					Если Должность = Неопределено Тогда
						Если ЗапрашиватьДолжность Тогда
							Если НЕ ВыборДолжности(Должность) Тогда
								Возврат Ложь;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Если НЕ СотрудникДобавить(Документ, Сотрудник, Неопределено, Сотрудник.Организация, ВидВремени, ВыводитьСообщение, РабочаяСмена, Должность) Тогда
						Возврат Ложь;
					КонецЕсли;
					//Костенюк Александр-Финиш 13.04.2016
				иначе
					ВидВремени	= СотрудникПолучить(Документ, Сотрудник, Неопределено);	
					Если Не ВыборВидаВремени(ВидВремени) Тогда
						Возврат Ложь;
					КонецЕсли;
					
					//Если Не СотрудникДобавить(Документ, Сотрудник, Неопределено, Сотрудник.Организация, ВидВремени, ВыводитьСообщение) Тогда
					//	Возврат Ложь;
					//КонецЕсли;
					//Костенюк Александр-Старт 13.04.2016
					Если РабочаяСмена = Неопределено Тогда
						Если НЕ ВыборРабочейСмены(РабочаяСмена) Тогда
							Возврат Ложь;
						КонецЕсли;
					КонецЕсли;
					Если Должность = Неопределено Тогда
						Если ЗапрашиватьДолжность Тогда
							Если НЕ ВыборДолжности(Должность) Тогда
								Возврат Ложь;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Если НЕ СотрудникДобавить(Документ, Сотрудник, Неопределено, Сотрудник.Организация, ВидВремени, ВыводитьСообщение, РабочаяСмена, Должность) Тогда
						Возврат Ложь;
					КонецЕсли;
					//Костенюк Александр-Финиш 13.04.2016
				КонецЕсли;			
			КонецЕсли;
			
			Возврат Истина;
			
		КонецЕсли;	
	Иначе
		
		//Если Не СотрудникДобавить(Документ, Сотрудник, Неопределено, Сотрудник.Организация, ВидВремени, ВыводитьСообщение) Тогда
		//	Возврат Ложь;
		//КонецЕсли;
		
		//Костенюк Александр-Старт 13.04.2016
		Если НЕ СотрудникДобавить(Документ, Сотрудник, Неопределено, Сотрудник.Организация, ВидВремени, ВыводитьСообщение, РабочаяСмена, Должность) Тогда
			Возврат Ложь;
		КонецЕсли;	
		//Костенюк Александр-Финиш 13.04.2016
		
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////

//Костенюк Александр-Старт 07.04.2016
Функция ВводКоличестваСмен(Значение = Неопределено, Мин = Неопределено, Макс = Неопределено) Экспорт
	
	// Нормализация.
	Если (Значение = Неопределено) Тогда
		Значение = Число(Истина);
	КонецЕсли;
	
	// Ввод.
	Возврат FrontOffice.ВводЧисла(Значение, НСтр("ru='Введите количество';uk='Введіть кількість'") , Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.КоличествоСменРучное.Тип.КвалификаторыЧисла.Разрядность, Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.ТабличныеЧасти.ОтработанноеВремяВЦеломЗаПериод.Реквизиты.КоличествоСменРучное.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти, Мин, Макс);
	
КонецФункции
//Костенюк Александр-Финиш 07.04.2016

//Костенюк Александр-Старт 07.04.2016
Процедура ТаблицаСменВывестиСтроку(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	// Продолжительность.
	Если ЗначениеЗаполнено(ДанныеСтроки.ДатаОкончанияПериода) Тогда
		ОформлениеСтроки.Ячейки("Продолжительность").Текст = ОбщегоНазначения.РассчитатьПродолжительность(ДанныеСтроки.ДатаНачалаПериода, ДанныеСтроки.ДатаОкончанияПериода);
	Иначе
		ОформлениеСтроки.Ячейки("Продолжительность").Текст = "~ " + ОбщегоНазначения.РассчитатьПродолжительность(ДанныеСтроки.ДатаНачалаПериода, ТекущаяДата());
	КонецЕсли;
	ОформлениеСтроки.Ячейки("Продолжительность").ГиперСсылка = Булево(ДанныеСтроки.Строки.Количество());
	
КонецПроцедуры
//Костенюк Александр-Финиш 07.04.2016

//Костенюк Александр-Старт 13.04.2016
Функция СотрудникПолучитьРабочуюСмену(Документ, Сотрудник, КодВнештатногоСотрудника = "") Экспорт
	
	РабочаяСмена = Неопределено;
	
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (НЕ СтрокаТабличнойЧасти.Сотрудник = Сотрудник) ИЛИ (НЕ СтрокаТабличнойЧасти.КодВнештатногоСотрудника = КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		Иначе 
			РабочаяСмена = СтрокаТабличнойЧасти.РабочаяСмена;
			Прервать;
		КонецЕсли;					
	КонецЦикла;
	
	Возврат РабочаяСмена;
	
КонецФункции
//Костенюк Александр-Финиш 13.04.2016

//Костенюк Александр-Старт 13.04.2016
Функция РассчитатьКоличествоСмен(ДатаНачалаПериода, ДатаОкончанияПериода, КоэффициентОкругления, НормаЧасов) Экспорт
	
	СекундВСутках = 3600;
	СекундВМинуте = 60;
	
	НачалоПериода = ОбщегоНазначения.ОкруглитьПериод(ДатаНачалаПериода, Минута(ДатаНачалаПериода) / СекундВМинуте, КоэффициентОкругления);
	КонецПериода = ОбщегоНазначения.ОкруглитьПериод(ДатаОкончанияПериода, Минута(ДатаОкончанияПериода) / СекундВМинуте, КоэффициентОкругления);
	
	Возврат ((КонецПериода - НачалоПериода) / СекундВСутках) / НормаЧасов;
		
КонецФункции
//Костенюк Александр-Финиш 13.04.2016

//Костенюк Александр-Старт 29.06.2016
Функция ПолучитьДолжность(Документ, Сотрудник, КодВнештатногоСотрудника = "") Экспорт
	
	Должность = Неопределено;
	
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (НЕ СтрокаТабличнойЧасти.Сотрудник = Сотрудник) ИЛИ (НЕ СтрокаТабличнойЧасти.КодВнештатногоСотрудника = КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		КонецЕсли;
		Должность = СтрокаТабличнойЧасти.Должность;
		Прервать;
	КонецЦикла;
	
	Возврат Должность;
	
КонецФункции
//Костенюк Александр-Финиш 29.06.2016

//Костенюк Александр-Старт 29.06.2016
Функция ВыборДолжности(Значение = Неопределено) Экспорт
	
	// Данные.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Должности.Ссылка,
	                      |	Должности.Представление КАК Наименование
	                      |ИЗ
	                      |	Справочник.Должности КАК Должности
	                      |ГДЕ
	                      |	НЕ Должности.ПометкаУдаления");
	ТаблицыЗначений = Запрос.Выполнить().Выгрузить();
	СтрокаТаблицы = ТаблицыЗначений.Найти(Значение, "Ссылка");
	Если Обработки.FrontOfficeВыборЗначения.Создать().ВыборИзТаблицыЗначений(СтрокаТаблицы, НСтр("ru='Выберите должность';uk='Виберіть посаду'"), ТаблицыЗначений, "Картинка,Наименование") Тогда
		Значение = СтрокаТаблицы.Ссылка;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
//Костенюк Александр-Финиш 29.06.2016

//Костенюк Александр-Старт 29.06.2016
Функция СотрудникИзменитьДолжность(Документ, Сотрудник, КодВнештатногоСотрудника = "", Должность) Экспорт
	
	Для Каждого СтрокаТабличнойЧасти Из Документ.ОтработанноеВремяВЦеломЗаПериод Цикл
		Если (СтрокаТабличнойЧасти.Сотрудник <> Сотрудник) ИЛИ (СтрокаТабличнойЧасти.КодВнештатногоСотрудника <> КодВнештатногоСотрудника) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДатаОкончанияПериода) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТабличнойЧасти.Должность = Должность;
	КонецЦикла;
	
	Если НЕ ДокументЗаписать(Документ) Тогда
		ДокументПрочитать(Документ);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
//Костенюк Александр-Финиш 29.06.2016

#КонецЕсли