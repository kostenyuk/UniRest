
Перем мТипыДействийНадРеквизитами;


// Обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка заполнения реквизитов.
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если Не ЗначениеЗаполнено(Запись.Действие) Тогда
			ОбщегоНазначения.СообщитьОбНезаполненомРесурсеРегистра(ЭтотОбъект, "Действие", Отказ);
		КонецЕсли;
		Если (Не мТипыДействийНадРеквизитами.Найти(Запись.Действие) = Неопределено) Тогда
			Если ОбщегоНазначения.ЗначениеНЕЗаполнено(Запись.Реквизит) Тогда
				ОбщегоНазначения.СообщитьОбНезаполненомРесурсеРегистра(ЭтотОбъект, "Реквизит", Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если Отказ Тогда
			 Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписью()

// Обработчик события ПриЗаписи объекта.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение автозаполняемых реквизитов.
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если ОбщегоНазначения.ЗначениеНЕЗаполнено(Запись.Идентификатор) Тогда
			Запись.Идентификатор = Новый УникальныйИдентификатор;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ПриЗаписи()


// Инициализация переменных.
мТипыДействийНадРеквизитами = Новый Массив;
мТипыДействийНадРеквизитами.Добавить(Перечисления.ТипыДействий.РеквизитУстановлен);
мТипыДействийНадРеквизитами.Добавить(Перечисления.ТипыДействий.РеквизитИзменен);
мТипыДействийНадРеквизитами.Добавить(Перечисления.ТипыДействий.РеквизитУдален);