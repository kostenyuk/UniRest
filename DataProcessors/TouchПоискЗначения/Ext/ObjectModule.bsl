
//	1С:Touch. Touch-ориентированные элементы управления и диалоговые формы, 
//	построенные с использованием только стандартных элементов управления платформы.
//	Copyright (C) 2008-2010 Переверзев Александр Владимирович.
//
//	Это программа является свободным программным обеспечением. Вы можете 
//	распространять и/или модифицировать её согласно условиям Стандартной 
//	Общественной Лицензии GNU, опубликованной Фондом Свободного Программного 
//	Обеспечения, версии 3 или, по Вашему желанию, любой более поздней версии. 
//
//	Эта программа распространяется в надежде, что она будет полезной, но БЕЗ 
//	ВСЯКИХ ГАРАНТИЙ, в том числе подразумеваемых гарантий ТОВАРНОГО СОСТОЯНИЯ ПРИ 
//	ПРОДАЖЕ и ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО ПРИМЕНЕНИЯ. Смотрите Стандартную 
//	Общественную Лицензию GNU для получения дополнительной информации. 
//
//	Вы должны были получить копию Стандартной Общественной Лицензии GNU вместе 
//	с программой. В случае её отсутствия, посмотрите <http://www.gnu.org/licenses/>.


// Зависимости:
//	Обработки.TouchПредупреждение,
//	Обработки.TouchВводЗначения,
//	Обработки.TouchТабличноеПоле.

#Если Клиент Тогда

// Функция поиска числа вводимого через числовую экранную клавиатуру.
//
// Параметры:
//	Число - Число. Начальное значение;
//	Подсказка - Строка. Текст заголовка окна диалога ввода числа;
//	Длина - Число. Длина вводимого числа включая дробную часть;
//	Точность - Число. Количество знаков в дробной части вводимого числа;
//	Мин - Число. Минимальное допустимое значение;
//	Макс - Число. Максимальное допустимое значение;
//	Формат - Строка. Формат представления значения;
//	Данные - СписокЗначений, ТаблицаЗначений, ДеревоЗначений. Набор значений из которой осуществляется выбор искомого значения;
//	Колонки - Строка. Перечень отображаемых колонок данных;
//	ТолькоВыбор - Булево. Не допускает выбор значения невходящего в переданный набор данных (фактически запрещает ввод новых значений);
//	CallBackФорма - Форма. Форма содержащая callback-процедуры вызов которых будет осуществляется данной обработкой;
//	CallBackПрефикс - Строка. Стандартный префикс содержащийся в именах callback-процедур формы вызов которых будет осуществляется данной обработкой.
//
// Возвращаемое значение:
//	Булево. Истина - если был осуществления ввод значения;
//	Число - Число, ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Введенное значение или элемент из переданного набора данных.
//
// События:
//	ПриИзмененииДанных() - возникает после связывания табличного поля с переданым набором значений и созданием требумых колонок до размещения элемента на форме.
//		В теле процедуры-обработчика допускается любая перенастройка элемента вплоть до связвания с иным набором значений и созданием другой коллекции колонок.
//		После выхода из процедуры-обработчика настройки выравнивания и обработчиков-событий табличного поля будут принудительно приведены в соответсвие с настройками для корректного функционирования формы;
//	ПриПоискеЗначения(Значение, СтандартнаяОбработка) - возникает по мере ввода значения пользователем:
//		- Значение - Число. Значение введенное на данный момент пользователем;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//				Стандартным обработчиком осуществляется обычный поиск значения в пределах данных связанных в данный момент с элементом формы используемым для работы с переданным набором значений;
//	Выбор(ВыбраннаяСтрока, Колонка, СтандартнаяОбработка) - возникает при выборе строки табличного поля пользователем:
//		- ВыбраннаяСтрока - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Выбранная строка табличного поля;
//		- Колонка - ОбработкаОбъект.TouchКолонкаТабличногоПоля. Выбранная колонка табличного поля;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет;
//	ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) - возникает при выводе строки в табличном поле. В процедуре-обработчике события допускается изменение оформления как строки в целом, так и каждой ячейке в отдельности:
//		- Оформление строки - ОбработкаОбъект.TouchОформлениеСтроки. Содержит оформление строки и коллекцию оформлений ячеек;
//		- ДанныеСтроки - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Данные выводимой строки. Параметр соответствует свойству ТекущиеДанные для выводимой строки. 
//
// Описание:
//	В случае если функции передается не пустой параметр CallBackФорма, то по мере работы с формой вызываются callback-процедуры соответсвующих событий.
//	Предпологается, что все callback-процедуры-обработчики описаны согласно следующему правилу:
//		<CallBackПрефикс><Событие>(Элемент[, Праметры]) Экспорт
//	И соответвенно могут быть вызваны записью вида:
//		<CallBackФорма>.<CallBackПрефикс><Событие>(Элемент[, Праметры]);
//	При этом в первый параметр всегда передается элемент формы обработки, типа ОбработкаОбъект.TouchТабличноеПоле, используемый для работы с переданным набором значений.
//	В процедуре-обработчике события допускаеются любые разумные манипуляции с переданым элементом формы обработки и его данными.
//
Функция ПоискЧисла(Число, Подсказка = "", Длина = 0, Точность = 0, Мин = Неопределено, Макс = Неопределено, Формат = "",
				   Данные, Колонки = "", ТолькоВыбор = Истина, CallBackФорма = Неопределено, CallBackПрефикс = "Поиск") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Определение типа значения.
	ОписаниеТипов = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Длина, Точность, ДопустимыйЗнак.Неотрицательный));
	
	// Открываем форму ввода.
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЧисла");
	Форма.Значение = ОписаниеТипов.ПривестиЗначение(Число);
	Форма.ОписаниеТипов = ОписаниеТипов;
	Форма.Формат = Формат;
	Если Не ПустаяСтрока(Подсказка) Тогда
		Форма.Заголовок = Подсказка;
	КонецЕсли;
	Если ПустаяСтрока(Формат) Тогда
		ФорматнаяСтрока = "ЧЦ=" + Строка(ОписаниеТипов.КвалификаторыЧисла.Разрядность) +"; ЧДЦ=" + ОписаниеТипов.КвалификаторыЧисла.РазрядностьДробнойЧасти + "; ЧН=";
	Иначе
		ФорматнаяСтрока = Формат;
	КонецЕсли;
	Если (Не Мин = Неопределено) И Булево(Мин) И (Не Макс = Неопределено) И Булево(Макс) Тогда
		Форма.Заголовок = Форма.Заголовок + НСтр("ru=' (от ';uk=' (від '")  + Формат(Мин, ФорматнаяСтрока) + " до " + Формат(Макс, ФорматнаяСтрока) + ")";
	ИначеЕсли (Не Мин = Неопределено) И Булево(Мин) Тогда
		Форма.Заголовок = Форма.Заголовок + НСтр("ru=' (от ';uk=' (від '")  + Формат(Мин, ФорматнаяСтрока) + ")";
	ИначеЕсли (Не Макс = Неопределено) И Булево(Макс) Тогда
		Форма.Заголовок = Форма.Заголовок + " (до " + Формат(Макс, ФорматнаяСтрока) + ")";
	КонецЕсли;
	Форма.Мин = ОписаниеТипов.ПривестиЗначение(Мин);
	Форма.Макс = ОписаниеТипов.ПривестиЗначение(Макс);
	Форма.Данные = Данные;
	Форма.Колонки = Колонки;
	Форма.ТолькоВыбор = ТолькоВыбор;
	Форма.CallBackФорма = CallBackФорма;
	Форма.CallBackПрефикс = CallBackПрефикс;
	
	// Ввод значения.
	ПараметрЗакрытия = Форма.ОткрытьМодально();
	Если (ТипЗнч(ПараметрЗакрытия) = Тип("Булево")) Тогда
		Если (ТипЗнч(Форма.Результат) = Тип("Число")) Тогда
			Число = ОписаниеТипов.ПривестиЗначение(Форма.Результат);
		Иначе
			Число = Форма.Результат;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ПоискЧисла()

// Функция поиска даты вводимой через числовую экранную клавиатуру.
//
// Параметры:
//	Число - Дата. Начальное значение;
//	Подсказка - Строка. Текст заголовка окна диалога ввода значения;
//	ЧастьДаты - ЧастиДаты. Часть вводимой даты;
//	Мин - Дата. Минимальное допустимое значение;
//	Макс - Дата. Максимальное допустимое значение;
//	Формат - Строка. Формат представления значения;
//	Данные - СписокЗначений, ТаблицаЗначений, ДеревоЗначений. Набор значений из которой осуществляется выбор искомого значения;
//	Колонки - Строка. Перечень отображаемых колонок данных;
//	ТолькоВыбор - Булево. Не допускает выбор значения невходящего в переданный набор данных (фактически запрещает ввод новых значений);
//	CallBackФорма - Форма. Форма содержащая callback-процедуры вызов которых будет осуществляется данной обработкой;
//	CallBackПрефикс - Строка. Стандартный префикс содержащийся в именах callback-процедур формы вызов которых будет осуществляется данной обработкой.
//
// Возвращаемое значение:
//	Булево. Истина - если был осуществлен ввод значения;
//	Дата - Дата, ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Введенное значение или элемент из переданного набора данных.
//
// События:
//	ПриИзмененииДанных() - возникает после связывания табличного поля с переданым набором значений и созданием требумых колонок до размещения элемента на форме.
//		В теле процедуры-обработчика допускается любая перенастройка элемента вплоть до связвания с иным набором значений и созданием другой коллекции колонок.
//		После выхода из процедуры-обработчика настройки выравнивания и обработчиков-событий табличного поля будут принудительно приведены в соответсвие с настройками для корректного функционирования формы;
//	ПриПоискеЗначения(Значение, СтандартнаяОбработка) - возникает по мере ввода значения пользователем:
//		- Значение - Число. Значение введенное на данный момент пользователем;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//				Стандартным обработчиком осуществляется обычный поиск значения в пределах данных связанных в данный момент с элементом формы используемым для работы с переданным набором значений;
//	Выбор(ВыбраннаяСтрока, Колонка, СтандартнаяОбработка) - возникает при выборе строки табличного поля пользователем:
//		- ВыбраннаяСтрока - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Выбранная строка табличного поля;
//		- Колонка - ОбработкаОбъект.TouchКолонкаТабличногоПоля. Выбранная колонка табличного поля;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет;
//	ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) - возникает при выводе строки в табличном поле. В процедуре-обработчике события допускается изменение оформления как строки в целом, так и каждой ячейке в отдельности:
//		- Оформление строки - ОбработкаОбъект.TouchОформлениеСтроки. Содержит оформление строки и коллекцию оформлений ячеек;
//		- ДанныеСтроки - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Данные выводимой строки. Параметр соответствует свойству ТекущиеДанные для выводимой строки. 
//
// Описание:
//	В случае если функции передается не пустой параметр CallBackФорма, то по мере работы с формой вызываются callback-процедуры соответсвующих событий.
//	Предпологается, что все callback-процедуры-обработчики описаны согласно следующему правилу:
//		<CallBackПрефикс><Событие>(Элемент[, Праметры]) Экспорт
//	И соответвенно могут быть вызваны записью вида:
//		<CallBackФорма>.<CallBackПрефикс><Событие>(Элемент[, Праметры]);
//	При этом в первый параметр всегда передается элемент формы обработки, типа ОбработкаОбъект.TouchТабличноеПоле, используемый для работы с переданным набором значений.
//	В процедуре-обработчике события допускаеются любые разумные манипуляции с переданым элементом формы обработки и его данными.
//
Функция ПоискДаты(Дата, Подсказка = "", ЧастьДаты = Неопределено, Мин = Неопределено, Макс = Неопределено, Формат = "", 
				  Данные, Колонки = "", ТолькоВыбор = Истина, CallBackФорма = Неопределено, CallBackПрефикс = "Поиск") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Определение типа значения.
	ОписаниеТипов = Новый ОписаниеТипов("Дата", ,, Новый КвалификаторыДаты(ЧастьДаты));
	
	// Открываем форму ввода.
	Если (ЧастьДаты = ЧастиДаты.Время) Тогда
		Форма = ЭтотОбъект.ПолучитьФорму("ФормаВремени");
	Иначе
		Форма = ЭтотОбъект.ПолучитьФорму("ФормаДаты");
	КонецЕсли;
	Форма.Значение = ОписаниеТипов.ПривестиЗначение(Дата);
	Форма.ОписаниеТипов = ОписаниеТипов;
	Форма.Формат = Формат;
	Если Не ПустаяСтрока(Подсказка) Тогда
		Форма.Заголовок = Подсказка;
	КонецЕсли;
	Если ПустаяСтрока(Формат) Тогда
		Если (ЧастьДаты = ЧастиДаты.Время) Тогда
			ФорматнаяСтрока = "ДФ=HH:mm; ДП=";
		Иначе
			ФорматнаяСтрока = "ДЛФ=D; ДП=";
		КонецЕсли;
	Иначе
		ФорматнаяСтрока = Формат;
	КонецЕсли;
	Если (Не Мин = Неопределено) И ЗначениеЗаполнено(Мин) И (Не Макс = Неопределено) И ЗначениеЗаполнено(Макс) Тогда
		Форма.Заголовок = Форма.Заголовок + НСтр("ru=' (от ';uk=' (від '")  + Формат(Мин, ФорматнаяСтрока) + " до " + Формат(Макс, ФорматнаяСтрока) + ")";
	ИначеЕсли (Не Мин = Неопределено) И ЗначениеЗаполнено(Мин) Тогда
		Форма.Заголовок = Форма.Заголовок + НСтр("ru=' (от ';uk=' (від '")  + Формат(Мин, ФорматнаяСтрока) + ")";
	ИначеЕсли (Не Макс = Неопределено) И ЗначениеЗаполнено(Макс) Тогда
		Форма.Заголовок = Форма.Заголовок + " (до " + Формат(Макс, ФорматнаяСтрока) + ")";
	КонецЕсли;
	Форма.Мин = ОписаниеТипов.ПривестиЗначение(Мин);
	Форма.Макс = ОписаниеТипов.ПривестиЗначение(Макс);
	Форма.Данные = Данные;
	Форма.Колонки = Колонки;
	Форма.ТолькоВыбор = ТолькоВыбор;
	Форма.CallBackФорма = CallBackФорма;
	Форма.CallBackПрефикс = CallBackПрефикс;
	
	// Ввод значения.
	ПараметрЗакрытия = Форма.ОткрытьМодально();
	Если (ТипЗнч(ПараметрЗакрытия) = Тип("Булево")) Тогда
		Если (ТипЗнч(Форма.Результат) = Тип("Дата")) Тогда
			Дата = ОписаниеТипов.ПривестиЗначение(Форма.Результат);
		Иначе
			Дата = Форма.Результат;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ПоискДаты()

// Функция поиска строки вводимой через экранную клавиатуру.
//
// Параметры:
//	Строка - Строка. Начальное значение;
//	Подсказка - Строка. Текст заголовка окна диалога ввода значения;
//	Длина - Число. Длина вводимой строки;
//	Многострочность - Булево. Игнорируется;
//	КодЯзыка - Строка. Указывает код языка, на котором будет вводится строка по умолчанию;
//	Данные - СписокЗначений, ТаблицаЗначений, ДеревоЗначений. Набор значений из которой осуществляется выбор искомого значения;
//	Колонки - Строка. Перечень отображаемых колонок данных;
//	ТолькоВыбор - Булево. Не допускает выбор значения невходящего в переданный набор данных (фактически запрещает ввод новых значений);
//	CallBackФорма - Форма. Форма содержащая callback-процедуры вызов которых будет осуществляется данной обработкой;
//	CallBackПрефикс - Строка. Стандартный префикс содержащийся в именах callback-процедур формы вызов которых будет осуществляется данной обработкой.
//
// Возвращаемое значение:
//	Булево. Истина - если был осуществления ввод значения;
//	Строка - Строка, ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Введенное значение или элемент из переданного набора данных.
//
// События:
//	ПриИзмененииДанных() - возникает после связывания табличного поля с переданым набором значений и созданием требумых колонок до размещения элемента на форме.
//		В теле процедуры-обработчика допускается любая перенастройка элемента вплоть до связвания с иным набором значений и созданием другой коллекции колонок.
//		После выхода из процедуры-обработчика настройки выравнивания и обработчиков-событий табличного поля будут принудительно приведены в соответсвие с настройками для корректного функционирования формы;
//	ПриПоискеЗначения(Значение, СтандартнаяОбработка) - возникает по мере ввода значения пользователем:
//		- Значение - Число. Значение введенное на данный момент пользователем;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//				Стандартным обработчиком осуществляется обычный поиск значения в пределах данных связанных в данный момент с элементом формы используемым для работы с переданным набором значений;
//	Выбор(ВыбраннаяСтрока, Колонка, СтандартнаяОбработка) - возникает при выборе строки табличного поля пользователем:
//		- ВыбраннаяСтрока - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Выбранная строка табличного поля;
//		- Колонка - ОбработкаОбъект.TouchКолонкаТабличногоПоля. Выбранная колонка табличного поля;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет;
//	ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) - возникает при выводе строки в табличном поле. В процедуре-обработчике события допускается изменение оформления как строки в целом, так и каждой ячейке в отдельности:
//		- Оформление строки - ОбработкаОбъект.TouchОформлениеСтроки. Содержит оформление строки и коллекцию оформлений ячеек;
//		- ДанныеСтроки - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Данные выводимой строки. Параметр соответствует свойству ТекущиеДанные для выводимой строки. 
//
// Описание:
//	В случае если функции передается не пустой параметр CallBackФорма, то по мере работы с формой вызываются callback-процедуры соответсвующих событий.
//	Предпологается, что все callback-процедуры-обработчики описаны согласно следующему правилу:
//		<CallBackПрефикс><Событие>(Элемент[, Праметры]) Экспорт
//	И соответвенно могут быть вызваны записью вида:
//		<CallBackФорма>.<CallBackПрефикс><Событие>(Элемент[, Праметры]);
//	При этом в первый параметр всегда передается элемент формы обработки, типа ОбработкаОбъект.TouchТабличноеПоле, используемый для работы с переданным набором значений.
//	В процедуре-обработчике события допускаеются любые разумные манипуляции с переданым элементом формы обработки и его данными.
//
Функция ПоискСтроки(Строка, Подсказка = "", Длина = 0, Многострочность = Ложь, КодЯзыка = Неопределено, 
				    Данные, Колонки = "", ТолькоВыбор = Истина, CallBackФорма = Неопределено, CallBackПрефикс = "Поиск") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Определение типа значения.
	ОписаниеТипов = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(Длина));
	
	// Открываем форму ввода.
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаСтроки");
	Форма.Значение = ОписаниеТипов.ПривестиЗначение(Строка);
	Форма.ОписаниеТипов = ОписаниеТипов;
	Если Не ПустаяСтрока(Подсказка) Тогда
		Форма.Заголовок = Подсказка;
	КонецЕсли;
	Форма.КодЯзыка = КодЯзыка;
	Форма.Данные = Данные;
	Форма.Колонки = Колонки;
	Форма.ТолькоВыбор = ТолькоВыбор;
	Форма.CallBackФорма = CallBackФорма;
	Форма.CallBackПрефикс = CallBackПрефикс;
	
	// Ввод значения.
	ПараметрЗакрытия = Форма.ОткрытьМодально();
	Если (ТипЗнч(ПараметрЗакрытия) = Тип("Булево")) Тогда
		Если (ТипЗнч(Форма.Результат) = Тип("Строка")) Тогда
			Строка = ОписаниеТипов.ПривестиЗначение(Форма.Результат);
		Иначе
			Строка = Форма.Результат;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ПоискСтроки()

//Костенюк Александр-Старт 05.09.2012
// Функция поиска строки вводимой через экранную клавиатуру.
//
// Параметры:
//	Строка - Строка. Начальное значение;
//	Подсказка - Строка. Текст заголовка окна диалога ввода значения;
//	Длина - Число. Длина вводимой строки;
//	Многострочность - Булево. Игнорируется;
//	КодЯзыка - Строка. Указывает код языка, на котором будет вводится строка по умолчанию;
//	Данные - СписокЗначений, ТаблицаЗначений, ДеревоЗначений. Набор значений из которой осуществляется выбор искомого значения;
//	Колонки - Строка. Перечень отображаемых колонок данных;
//	ТолькоВыбор - Булево. Не допускает выбор значения невходящего в переданный набор данных (фактически запрещает ввод новых значений);
//	CallBackФорма - Форма. Форма содержащая callback-процедуры вызов которых будет осуществляется данной обработкой;
//	CallBackПрефикс - Строка. Стандартный префикс содержащийся в именах callback-процедур формы вызов которых будет осуществляется данной обработкой.
//
// Возвращаемое значение:
//	Булево. Истина - если был осуществления ввод значения;
//	Строка - Строка, ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Введенное значение или элемент из переданного набора данных.
//
// События:
//	ПриИзмененииДанных() - возникает после связывания табличного поля с переданым набором значений и созданием требумых колонок до размещения элемента на форме.
//		В теле процедуры-обработчика допускается любая перенастройка элемента вплоть до связвания с иным набором значений и созданием другой коллекции колонок.
//		После выхода из процедуры-обработчика настройки выравнивания и обработчиков-событий табличного поля будут принудительно приведены в соответсвие с настройками для корректного функционирования формы;
//	ПриПоискеЗначения(Значение, СтандартнаяОбработка) - возникает по мере ввода значения пользователем:
//		- Значение - Число. Значение введенное на данный момент пользователем;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//				Стандартным обработчиком осуществляется обычный поиск значения в пределах данных связанных в данный момент с элементом формы используемым для работы с переданным набором значений;
//	Выбор(ВыбраннаяСтрока, Колонка, СтандартнаяОбработка) - возникает при выборе строки табличного поля пользователем:
//		- ВыбраннаяСтрока - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Выбранная строка табличного поля;
//		- Колонка - ОбработкаОбъект.TouchКолонкаТабличногоПоля. Выбранная колонка табличного поля;
//		- СтандартнаяОбработка - Булево. В данный параметр передается признак выполнения стандартной обработки события.
//				Если в теле процедуры-обработчика установить данному параметру значение Ложь, стандартная обработка события производиться не будет;
//	ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) - возникает при выводе строки в табличном поле. В процедуре-обработчике события допускается изменение оформления как строки в целом, так и каждой ячейке в отдельности:
//		- Оформление строки - ОбработкаОбъект.TouchОформлениеСтроки. Содержит оформление строки и коллекцию оформлений ячеек;
//		- ДанныеСтроки - ЭлементСпискаЗначений, СтрокаТаблицыЗначений, СтрокаДереваЗначений. Данные выводимой строки. Параметр соответствует свойству ТекущиеДанные для выводимой строки. 
//
// Описание:
//	В случае если функции передается не пустой параметр CallBackФорма, то по мере работы с формой вызываются callback-процедуры соответсвующих событий.
//	Предпологается, что все callback-процедуры-обработчики описаны согласно следующему правилу:
//		<CallBackПрефикс><Событие>(Элемент[, Праметры]) Экспорт
//	И соответвенно могут быть вызваны записью вида:
//		<CallBackФорма>.<CallBackПрефикс><Событие>(Элемент[, Праметры]);
//	При этом в первый параметр всегда передается элемент формы обработки, типа ОбработкаОбъект.TouchТабличноеПоле, используемый для работы с переданным набором значений.
//	В процедуре-обработчике события допускаеются любые разумные манипуляции с переданым элементом формы обработки и его данными.
//
Функция ПоискСтрокиЧисла(Строка, Подсказка = "", Длина = 0, Многострочность = Ложь, КодЯзыка = Неопределено, 
				    Данные, Колонки = "", ТолькоВыбор = Истина, CallBackФорма = Неопределено, CallBackПрефикс = "Поиск") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Определение типа значения.
	ОписаниеТипов = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(Длина));
	
	// Открываем форму ввода.
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаСтрокиЧисла");
	Форма.Значение = ОписаниеТипов.ПривестиЗначение(Строка);
	Форма.ОписаниеТипов = ОписаниеТипов;
	Если Не ПустаяСтрока(Подсказка) Тогда
		Форма.Заголовок = Подсказка;
	КонецЕсли;
	Форма.Данные = Данные;
	Форма.Колонки = Колонки;
	Форма.КодЯзыка = КодЯзыка;
	Форма.ТолькоВыбор = ТолькоВыбор;
	Форма.CallBackФорма = CallBackФорма;
	Форма.CallBackПрефикс = CallBackПрефикс;
	
	// Ввод значения.
	ПараметрЗакрытия = Форма.ОткрытьМодально();
	Если (ТипЗнч(ПараметрЗакрытия) = Тип("Булево")) Тогда
		Если (ТипЗнч(Форма.Результат) = Тип("Строка")) Тогда
			Строка = ОписаниеТипов.ПривестиЗначение(Форма.Результат);
		Иначе
			Строка = Форма.Результат;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ПоискСтроки()
//Костенюк Александр-Финиш 05.09.2012

#КонецЕсли
