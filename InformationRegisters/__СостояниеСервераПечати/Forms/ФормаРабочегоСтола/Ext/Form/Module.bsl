
&НаКлиенте
Процедура УстановитьВидимость()
	
	// Командная панель.
	Элементы.СеансыВебСервисаПодробныйРежим.Пометка = СеансыВебСервисаПодробныйРежим;
	Элементы.ЗаданияСервераПечатиПодробныйРежим.Пометка = ЗаданияСервераПечатиПодробныйРежим;
	
КонецПроцедуры // УстановитьВидимость()


&НаКлиенте
Процедура ОбработчикОжиданияОбновленияНастроек()

	ОтключитьОбработчикОжидания("ОбработчикОжиданияОбновленияНастроек");
	
	// Обновление настроек.
	ОбновитьНастройки();

	// Сервер печати.
	Если __СерверПечатиКлиент.РежимЗапускаПриложенияСерверПечати() Тогда
		Если СерверПечатиПриостановленность Или СерверПечатиНеобходимостьПерезапуска Тогда
			ПрекратитьРаботуСистемы();
		КонецЕсли;
	КонецЕсли;

	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияНастроек", 60);
	
КонецПроцедуры // ОбработчикОжиданияОбновленияНастроек()

&НаКлиенте
Процедура ОбработчикОжиданияВыполненияЗаданийСервераПечати()

	ОтключитьОбработчикОжидания("ОбработчикОжиданияВыполненияЗаданийСервераПечати");
	
	// Перенаправление.
	ЗаданияСервераПечатиВыполнитьЗадания(Неопределено);
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияВыполненияЗаданийСервераПечати", СерверПечатиИнтервалПечатиЗаданий);
		
КонецПроцедуры // ОбработчикОжиданияВыполненияЗаданийСервераПечати()


&НаСервере
Процедура ОбновитьНастройки()

	// Получение данных.
	СерверПечатиПриостановленность = РегистрыСведений.__СостояниеСервераПечати.ПолучитьПриостановленностьСервера();
	СерверПечатиНеобходимостьПерезапуска = РегистрыСведений.__СостояниеСервераПечати.ПолучитьНеобходимостьПерезапускаСервера();
	СерверПечатиИнтервалПечатиЗаданий = РегистрыСведений.__СостояниеСервераПечати.ПолучитьИнтервалПечатиЗаданий();
	ГраницаНеактивностиСеансов = РегистрыСведений.__НастройкиВебСервиса.ПолучитьГраницуНеактивностиСеансов();

	// Сервер печати.
	Если __СерверПечатиСервер.РежимЗапускаПриложенияСерверПечати() Тогда
		Если СерверПечатиНеобходимостьПерезапуска Тогда
			__СерверПечатиСервер.ЗапускКлиентаСервера();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьНастройки()


&НаКлиенте
Процедура СеансыВебСервисаПодробныйРежим(Команда)
	
	СеансыВебСервисаПодробныйРежим = Не СеансыВебСервисаПодробныйРежим;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // СеансыВебСервисаПодробныйРежим()

&НаКлиенте
Процедура СеансыВебСервисаНастройка(Команда)

	ОтключитьОбработчикОжидания("ОбработчикОжиданияОбновленияНастроек");
	
	// Настройка.
	ОткрытьФормуМодально("РегистрСведений.__НастройкиВебСервиса.ФормаЗаписи");
	
	// Обновление настроек.
	ОбработчикОжиданияОбновленияНастроек();
	
КонецПроцедуры // СеансыВебСервисаНастройка()

&НаКлиенте
Процедура ЗаданияСервераПечатиВыполнитьЗадания(Команда)
	
	// Выполнение.
	__СерверПечатиКлиент.Напечатать();
	
	// Обновление формы.
	Если (Не Команда = Неопределено) Тогда
		ОбновитьОтображениеДанных();
	КонецЕсли;
	
КонецПроцедуры // ЗаданияСервераПечатиВыполнитьЗадания()

&НаКлиенте
Процедура ЗаданияСервераПечатиПодробныйРежим(Команда)
	
	ЗаданияСервераПечатиПодробныйРежим = Не ЗаданияСервераПечатиПодробныйРежим;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ЗаданияСервераПечатиПодробныйРежим()

&НаКлиенте
Процедура ЗаданияСервераПечатиИнформация(Команда)

	ОткрытьФормуМодально("РегистрСведений.__СостояниеСервераПечати.ФормаЗаписи");
	
КонецПроцедуры // ЗаданияСервераПечатиИнформация()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Настройки.
	ОбновитьНастройки();
	
	// Настройка формы.
	Элементы.ЗаданияСервераПечатиВыполнитьЗадания.Видимость = __СерверПечатиСервер.РежимЗапускаПриложенияСерверПечати();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройки.
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновленияНастроек", 60);
	
	// Сервер печати.
	Если __СерверПечатиКлиент.РежимЗапускаПриложенияСерверПечати() Тогда
		ПодключитьОбработчикОжидания("ОбработчикОжиданияВыполненияЗаданийСервераПечати", СерверПечатиИнтервалПечатиЗаданий);
	КонецЕсли;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПриОткрытии()
