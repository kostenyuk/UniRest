

&НаКлиенте
Процедура ОК(Команда)
	
	Перем Отказ;
	
	ОчиститьСообщения();
	
	УстановитьПравилаИспользования(ОбъектИспользования, ПравилаИспользования, Отказ);

	Если Не Отказ Тогда
		Закрыть(Истина);
		__УправлениеДаннымиКлиент.ОповеститьИзмененияНастроекРабочихЦентров();
	КонецЕсли; 
	
КонецПроцедуры // ОК()


&НаКлиенте
Процедура ПравилаИспользованияАктуальностьПриИзменении(Элемент)
	
	Элементы.ПравилаИспользования.ТекущиеДанные.Изменилась = Истина;
	
КонецПроцедуры // ПравилаИспользованияАктуальностьПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектИспользования = Параметры.ОбъектИспользования;
	
	ПолучитьПравилаИспользования(ОбъектИспользования, ПравилаИспользования);
	
	// Настройка формы.
	Элементы.ГруппаИнформация.Видимость = (ТипЗнч(ОбъектИспользования) = Тип("СправочникСсылка.Номенклатура"));
	Элементы.ДекорацияНадписьПредупреждение.Видимость = ОбъектИспользования.ЭтоГруппа;
	Элементы.ДекорацияНадписьИнформация.Видимость = Не Элементы.ДекорацияНадписьПредупреждение.Видимость;
	Элементы.ДекорацияКартинкаИнформация.Видимость = Не Элементы.ДекорацияНадписьПредупреждение.Видимость;
	
КонецПроцедуры // ПриСозданииНаСервере()


&НаСервереБезКонтекста
Процедура ПолучитьПравилаИспользования(Ссылка, Объект)

	УстановитьПривилегированныйРежим(Истина);
	
	ОбъектИспользованияНоменклатура = (ТипЗнч(Ссылка) = Тип("СправочникСсылка.Номенклатура"));
	
	Если ОбъектИспользованияНоменклатура Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	РабочиеЦентры.Ссылка КАК ВладелецПравилИспользования,
		                      |	РабочиеЦентры.Представление КАК Представление,
		                      |	ЕСТЬNULL(ПравилаИспользования.Актуальность, ИСТИНА)
		                      |		И ЕСТЬNULL(ПравилаИспользованияДоступности.Актуальность, ИСТИНА) КАК Актуальность,
		                      |	ВЫБОР
		                      |		КОГДА РабочиеЦентры.ПометкаУдаления
		                      |			ТОГДА 1
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ИндексКартинки,
		                      |	ЛОЖЬ КАК ТолькоПросмотр,
		                      |	ЕСТЬNULL(ПравилаИспользованияДоступности.Актуальность, ИСТИНА) КАК Доступность,
		                      |	ЛОЖЬ КАК Изменилась
		                      |ИЗ
		                      |	Справочник.РабочиеЦентры КАК РабочиеЦентры
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаИспользования КАК ПравилаИспользования
		                      |		ПО (ПравилаИспользования.ВладелецПравилИспользования = РабочиеЦентры.Ссылка)
		                      |			И (ПравилаИспользования.ОбъектИспользования = &ОбъектИспользования)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаИспользования КАК ПравилаИспользованияДоступности
		                      |		ПО (ПравилаИспользованияДоступности.ВладелецПравилИспользования = РабочиеЦентры.Ссылка)
		                      |			И (ПравилаИспользованияДоступности.ОбъектИспользования = &ОбъектИспользованияСвязанный)
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	РабочиеЦентры.Владелец.Наименование,
		                      |	РабочиеЦентры.Наименование
		                      |ИТОГИ
		                      |	РабочиеЦентры.Владелец КАК ВладелецПравилИспользования,
		                      |	ПРЕДСТАВЛЕНИЕССЫЛКИ(РабочиеЦентры.Владелец) КАК Представление,
		                      |	4 КАК ИндексКартинки,
		                      |	ИСТИНА КАК ТолькоПросмотр,
		                      |	ИСТИНА КАК Доступность,
		                      |	ЛОЖЬ КАК Изменилась
		                      |ПО
		                      |	РабочиеЦентры.Владелец КАК ВладелецПравилИспользования
		                      |АВТОУПОРЯДОЧИВАНИЕ");
		Если Ссылка.ЭтоГруппа Тогда
			Запрос.УстановитьПараметр("ОбъектИспользованияСвязанный", Неопределено);
		Иначе
			Запрос.УстановитьПараметр("ОбъектИспользованияСвязанный", Ссылка.НоменклатурнаяГруппа);
		КонецЕсли; 					  
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	РабочиеЦентры.Ссылка КАК ВладелецПравилИспользования,
		                      |	РабочиеЦентры.Представление КАК Представление,
		                      |	ЕСТЬNULL(ПравилаИспользования.Актуальность, ИСТИНА) КАК Актуальность,
		                      |	ВЫБОР
		                      |		КОГДА РабочиеЦентры.ПометкаУдаления
		                      |			ТОГДА 1
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК ИндексКартинки,
		                      |	ЛОЖЬ КАК ТолькоПросмотр,
		                      |	ИСТИНА КАК Доступность,
		                      |	ЛОЖЬ КАК Изменилась
		                      |ИЗ
		                      |	Справочник.РабочиеЦентры КАК РабочиеЦентры
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаИспользования КАК ПравилаИспользования
		                      |		ПО (ПравилаИспользования.ВладелецПравилИспользования = РабочиеЦентры.Ссылка)
		                      |			И (ПравилаИспользования.ОбъектИспользования = &ОбъектИспользования)
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	РабочиеЦентры.Владелец.Наименование,
		                      |	РабочиеЦентры.Наименование
		                      |ИТОГИ
		                      |	РабочиеЦентры.Владелец КАК ВладелецПравилИспользования,
		                      |	ПРЕДСТАВЛЕНИЕССЫЛКИ(РабочиеЦентры.Владелец) КАК Представление,
		                      |	4 КАК ИндексКартинки,
		                      |	ИСТИНА КАК ТолькоПросмотр,
		                      |	ИСТИНА КАК Доступность,
		                      |	ЛОЖЬ КАК Изменилась
		                      |ПО
		                      |	РабочиеЦентры.Владелец КАК ВладелецПравилИспользования
		                      |АВТОУПОРЯДОЧИВАНИЕ");
	КонецЕсли; 
	Запрос.УстановитьПараметр("ОбъектИспользования", Ссылка);
	
	ПравилаИспользования = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЗначениеВДанныеФормы(ПравилаИспользования, Объект);	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПолучитьПравилаИспользования()

&НаСервереБезКонтекста
Процедура УстановитьПравилаИспользования(Ссылка, Знач Объект, Отказ)

	Отказ = Ложь;

	УстановитьПривилегированныйРежим(Истина);
	
	ПравилаИспользования = ДанныеФормыВЗначение(Объект, Тип("ДеревоЗначений"));
	
	ОбъектИспользованияНоменклатура = (ТипЗнч(Ссылка) = Тип("СправочникСсылка.Номенклатура"));
	
	Если ОбъектИспользованияНоменклатура Тогда
		НачатьТранзакцию();
		
		// Подчиненные.
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Номенклатура.ОбъектИспользования,
		                      |	Номенклатура.ВладелецПравилИспользования,
		                      |	ЕСТЬNULL(ПравилаИспользования.Актуальность, ИСТИНА) КАК Актуальность
		                      |ИЗ
		                      |	(ВЫБРАТЬ
		                      |		Номенклатура.Ссылка КАК ОбъектИспользования,
		                      |		РабочиеЦентры.Ссылка КАК ВладелецПравилИспользования
		                      |	ИЗ
		                      |		Справочник.Номенклатура КАК Номенклатура
		                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РабочиеЦентры КАК РабочиеЦентры
		                      |			ПО (ИСТИНА)
		                      |	ГДЕ
		                      |		(Номенклатура.Ссылка В ИЕРАРХИИ (&ОбъектИспользования)
		                      |				ИЛИ Номенклатура.Ссылка = &ОбъектИспользования)) КАК Номенклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаИспользования КАК ПравилаИспользования
		                      |		ПО Номенклатура.ОбъектИспользования = ПравилаИспользования.ОбъектИспользования
		                      |			И Номенклатура.ВладелецПравилИспользования = ПравилаИспользования.ВладелецПравилИспользования");
		Запрос.УстановитьПараметр("ОбъектИспользования", Ссылка);
		
		ТекущиеПравилаИспользования = Запрос.Выполнить().Выгрузить(); СтруктураПоиска = Новый Структура("ВладелецПравилИспользования,Актуальность");
		
		// Все.
		Для Каждого СтрокаПравилИспользования Из ПравилаИспользования.Строки.НайтиСтроки(Новый Структура("ТолькоПросмотр,Доступность,Изменилась", Ложь, Истина, Истина), Истина) Цикл
			СтруктураПоиска.ВладелецПравилИспользования = СтрокаПравилИспользования.ВладелецПравилИспользования;
			СтруктураПоиска.Актуальность = Не СтрокаПравилИспользования.Актуальность;
			
			Для Каждого СтрокаТекущихПравилИспользования Из ТекущиеПравилаИспользования.НайтиСтроки(СтруктураПоиска) Цикл
				Запись = РегистрыСведений.ПравилаИспользования.СоздатьМенеджерЗаписи();
				Запись.ОбъектИспользования = СтрокаТекущихПравилИспользования.ОбъектИспользования;
				Запись.ВладелецПравилИспользования = СтрокаПравилИспользования.ВладелецПравилИспользования;
				
				Если СтрокаПравилИспользования.Актуальность Тогда

					Попытка
						Запись.Удалить();
					Исключение
						// TODO: Регистрация ошибки.
						ОтменитьТранзакцию();
						__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить правила использования'; uk = 'Не вдалося змінити правила використання'"), ,, "ПравилаИспользования", Отказ);
						Прервать;
					КонецПопытки;
						
				Иначе

					Запись.Актуальность = Ложь;
					Попытка
						Запись.Записать(Истина);
					Исключение
						// TODO: Регистрация ошибки.
						ОтменитьТранзакцию();
						__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить правила использования'; uk = 'Не вдалося змінити правила використання'"), ,, "ПравилаИспользования", Отказ);
						Прервать;
					КонецПопытки;
						
				КонецЕсли; 
			КонецЦикла;
			
			Если Отказ Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла; 

		// Родители.
		Если Не Отказ Тогда
			Родитель = Ссылка.Родитель;
			Пока ЗначениеЗаполнено(Родитель) Цикл
				
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	&ОбъектИспользования КАК ОбъектИспользования,
				                      |	Родитель.ВладелецПравилИспользования,
				                      |	Подчиненные.Актуальность
				                      |ИЗ
				                      |	(ВЫБРАТЬ
				                      |		РабочиеЦентры.Ссылка КАК ВладелецПравилИспользования,
				                      |		ЕСТЬNULL(ПравилаИспользования.Актуальность, ИСТИНА) КАК Актуальность
				                      |	ИЗ
				                      |		Справочник.РабочиеЦентры КАК РабочиеЦентры
				                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаИспользования КАК ПравилаИспользования
				                      |			ПО (ПравилаИспользования.ВладелецПравилИспользования = РабочиеЦентры.Ссылка)
				                      |				И (ПравилаИспользования.ОбъектИспользования = &ОбъектИспользования)) КАК Родитель
				                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				                      |			Номенклатура.ВладелецПравилИспользования КАК ВладелецПравилИспользования,
				                      |			МАКСИМУМ(ЕСТЬNULL(ПравилаИспользования.Актуальность, ИСТИНА)) КАК Актуальность
				                      |		ИЗ
				                      |			(ВЫБРАТЬ
				                      |				Номенклатура.Ссылка КАК ОбъектИспользования,
				                      |				РабочиеЦентры.Ссылка КАК ВладелецПравилИспользования
				                      |			ИЗ
				                      |				Справочник.Номенклатура КАК Номенклатура
				                      |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РабочиеЦентры КАК РабочиеЦентры
				                      |					ПО (ИСТИНА)
				                      |			ГДЕ
				                      |				Номенклатура.Ссылка В ИЕРАРХИИ(&ОбъектИспользования)
				                      |				И НЕ Номенклатура.Ссылка = &ОбъектИспользования) КАК Номенклатура
				                      |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаИспользования КАК ПравилаИспользования
				                      |				ПО Номенклатура.ОбъектИспользования = ПравилаИспользования.ОбъектИспользования
				                      |					И Номенклатура.ВладелецПравилИспользования = ПравилаИспользования.ВладелецПравилИспользования
				                      |		
				                      |		СГРУППИРОВАТЬ ПО
				                      |			Номенклатура.ВладелецПравилИспользования) КАК Подчиненные
				                      |		ПО Родитель.ВладелецПравилИспользования = Подчиненные.ВладелецПравилИспользования
				                      |			И Родитель.Актуальность <> Подчиненные.Актуальность");
				Запрос.УстановитьПараметр("ОбъектИспользования", Родитель);

			    Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					Запись = РегистрыСведений.ПравилаИспользования.СоздатьМенеджерЗаписи();
					ЗаполнитьЗначенияСвойств(Запись, Выборка);
					
					Если Выборка.Актуальность Тогда

						Попытка
							Запись.Удалить();
						Исключение
							// TODO: Регистрация ошибки.
							ОтменитьТранзакцию();
							__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить правила использования'; uk = 'Не вдалося змінити правила використання'"), ,, "ПравилаИспользования", Отказ);
							Прервать;
						КонецПопытки;
							
					Иначе

						Запись.Актуальность = Ложь;
						Попытка
							Запись.Записать(Истина);
						Исключение
							// TODO: Регистрация ошибки.
							ОтменитьТранзакцию();
							__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить правила использования'; uk = 'Не вдалося змінити правила використання'"), ,, "ПравилаИспользования", Отказ);
							Прервать;
						КонецПопытки;
							
					КонецЕсли; 
				КонецЦикла;
				
				Если Отказ Тогда
					Прервать;
				КонецЕсли; 
				Родитель = Родитель.Родитель;
			КонецЦикла;
		КонецЕсли;
		
		Если ТранзакцияАктивна() Тогда
			Попытка
				ЗафиксироватьТранзакцию();
			Исключение
				// TODO: Регистрация ошибки.
				__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить правила использования'; uk = 'Не вдалося змінити правила використання'"), ,, "ПравилаИспользования", Отказ);
			КонецПопытки;
		КонецЕсли; 
	Иначе
			
		НаборЗаписей = РегистрыСведений.ПравилаИспользования.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектИспользования.Установить(Ссылка);
		
		// Актуальные.
		Для Каждого СтрокаПравилИспользования Из ПравилаИспользования.Строки.НайтиСтроки(Новый Структура("Актуальность,ТолькоПросмотр", Ложь, Ложь), Истина) Цикл 
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаПравилИспользования);
			Запись.ОбъектИспользования = Ссылка;
		КонецЦикла; 

		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			// TODO: Регистрация ошибки.
			__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить правила использования'; uk = 'Не вдалося змінити правила використання'"), ,, "ПравилаИспользования", Отказ);
		КонецПопытки;
			
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // УстановитьПравилаИспользования()
