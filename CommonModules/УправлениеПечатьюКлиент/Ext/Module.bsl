
// Выполнить команду печати, которая открывает результат в форме печати документов
Процедура ВыполнитьКомандуПечати(ИмяМенеджераПечати, ИменаМакетов, ПараметрКоманды, ВладелецФормы, ПараметрыПечати = Неопределено, КоличествоЭкземпляров = 1) Экспорт
	
	// Проверим количество объектов
	Если НЕ ПроверитьКоличествоПереданныхОбъектов(ПараметрКоманды) Тогда
		Возврат;
	КонецЕсли;
	
	// Получим ключ уникальности открываемой формы
	КлючУникальности = Строка(Новый УникальныйИдентификатор);
	
	ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати,КоличествоЭкземпляров");
	ПараметрыОткрытия.ИмяМенеджераПечати    = ИмяМенеджераПечати;
	ПараметрыОткрытия.ИменаМакетов		    = ИменаМакетов;
	ПараметрыОткрытия.ПараметрКоманды	    = ПараметрКоманды;
	ПараметрыОткрытия.ПараметрыПечати	    = ПараметрыПечати;
	ПараметрыОткрытия.КоличествоЭкземпляров	= КоличествоЭкземпляров;
	
	// Откроем форму печати документов
	//ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, ВладелецФормы, КлючУникальности);
	ОткрытьФорму("ОбщаяФорма.мПечатьДокументов", ПараметрыОткрытия, ВладелецФормы, КлючУникальности);
	
КонецПроцедуры

// Выполнить команду печати, которая результат выводит на принтер
Процедура ВыполнитьКомандуПечатиНаПринтер(ИмяМенеджераПечати, ИменаМакетов, ПараметрКоманды, ПараметрыПечати = Неопределено) Экспорт

	Перем ТабличныеДокументы, ОбъектыПечати, ПараметрыВывода, Адрес, ОбъектыПечатиСоотв, Отказ;
	
	// Проверим количество объектов
	Если НЕ ПроверитьКоличествоПереданныхОбъектов(ПараметрКоманды) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВывода = Неопределено;
	
	// Сформируем табличные документы
#Если ТолстыйКлиентОбычноеПриложение Тогда
	УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение(
			ИмяМенеджераПечати, ИменаМакетов, ПараметрКоманды, ПараметрыПечати,
			Адрес, ОбъектыПечатиСоотв, ПараметрыВывода, Отказ);
	Если НЕ Отказ Тогда
		ОбъектыПечати = Новый СписокЗначений;
		ТабличныеДокументы = ПолучитьИзВременногоХранилища(Адрес);
		Для Каждого ОбъектПечати Из ОбъектыПечатиСоотв Цикл
			ОбъектыПечати.Добавить(ОбъектПечати.Значение, ОбъектПечати.Ключ);
		КонецЦикла;
	КонецЕсли;
#Иначе
	УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати(
			ИмяМенеджераПечати, ИменаМакетов, ПараметрКоманды, ПараметрыПечати,
			ТабличныеДокументы, ОбъектыПечати, ПараметрыВывода, Отказ);
#КонецЕсли
	
	Если Отказ Тогда
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нет прав для вывода печатной формы на принтер, обратитесь к администратору системы.'"));
		Возврат;
	КонецЕсли;
	
	// Распечатаем
	РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати,
			ПараметрыВывода.ДоступнаПечатьПоКомплектно);
	
КонецПроцедуры

// Вывести табличные документы на принтер
Процедура РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати, 
		знач ДоступнаПечатьПоКомплектно) Экспорт
	
	#Если ВебКлиент Тогда
		ДоступнаПечатьПоКомплектно = Ложь;
	#КонецЕсли
	
	Если ДоступнаПечатьПоКомплектно Тогда
		Для Каждого Элемент Из ОбъектыПечати Цикл
			ИмяОбласти = Элемент.Представление;
			Для Каждого Элемент Из ТабличныеДокументы Цикл
				ТабДок = Элемент.Значение;
				Область = ТабДок.Области.Найти(ИмяОбласти);
				Если Область = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ТабДок.ОбластьПечати = Область;
				ТабДок.Напечатать(Истина);
			КонецЦикла;
		КонецЦикла;
	Иначе
		Для Каждого Элемент Из ТабличныеДокументы Цикл
			ТабДок = Элемент.Значение;
			ТабДок.Напечатать(Истина);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Перед выполнение команды печати проверить, был ли передан хотя бы один объект, так как
// для команд с множественным режимом использования может быть передан пустой массив.
Функция ПроверитьКоличествоПереданныхОбъектов(ПараметрКоманды)
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") И ПараметрКоманды.Количество() = 0 Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция ПроверитьДокументыПроведены(ПараметрКоманды) Экспорт
	
	МассивНепроведенныхДокументов = ОбщегоНазначения.ПроверитьПроведенностьДокументов(ПараметрКоманды);
	КоличествоНепроведенныхДокументов = МассивНепроведенныхДокументов.Количество();
	
	Если КоличествоНепроведенныхДокументов > 0 Тогда
		
		Если КоличествоНепроведенныхДокументов = 1 Тогда
			ТекстВопроса = НСтр("ru = 'Чтобы распечатать документ, его требуется провести. Выполнить проведение документа и продолжить?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Чтобы распечатать документы, их требуется провести. Выполнить проведение документов и продолжить?'");
		КонецЕсли;
		
		КодОтвета = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если КодОтвета = КодВозвратаДиалога.Да Тогда
			
			ТипПроведенныхДокументов = Неопределено;
			МассивНепроведенныхДокументов = ОбщегоНазначения.ПровестиДокументы(МассивНепроведенныхДокументов, ТипПроведенныхДокументов);
			
			ОповеститьОбИзменении(ТипПроведенныхДокументов);
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'Документ %1 не проведен. Печать не возможна.'");
	Для Каждого ЭлементНД Из МассивНепроведенныхДокументов Цикл
		Найденный = ПараметрКоманды.Найти(ЭлементНД);
		Если Найденный <> Неопределено Тогда
			ПараметрКоманды.Удалить(Найденный);
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			//		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Строка(ЭлементНД)), ЭлементНД);
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрКоманды.Количество() > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
