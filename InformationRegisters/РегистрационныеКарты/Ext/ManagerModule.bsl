
//.. Начало изменения Dim)on  10 октября 2013 г. 17:08:57
//

// Процедура добавляет запись о регистрационной карте в регистр
// 
// Параметры:
// Отказ - Тип: Булево. Признак отказа от записи.
// ИнформационнаяКарта - Тип: СправочникСсылка.ИнформационныеКарты. Регистрационная карта, которую нужно добавить в регистр.
//
Процедура ДобавитьЗапись(Отказ, ИнформационнаяКарта) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерЗаписи 						= СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИнформационнаяКарта 	= ИнформационнаяКарта;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Отказ = Истина;	// ERR
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Процедура удаляет запись о регистрационной карте из регистра
// 
// Параметры:
// Отказ - Тип: Булево. Признак отказа от записи.
// ИнформационнаяКарта - Тип: СправочникСсылка.ИнформационныеКарты. Регистрационная карта, которую нужно удалить из регистра.
//
Процедура УдалитьЗапись(Отказ, ИнформационнаяКарта) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИнформационнаяКарта.Установить(ИнформационнаяКарта);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Отказ = Истина;	// ERR
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Функция поиска регистрационной карты в регистре
// 
// Параметры:
// КодКарты - Тип: Строка. Код регистрационной карты.
//
// ВозвращаемоеЗначение:
// ИнформационнаяКарта - Тип: СправочникСсылка.ИнформационныеКарты. Найденная информационная карта.
// 
Функция НайтиРегистрационнуюКарту(КодКарты) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрационныеКарты.ИнформационнаяКарта
	               |ИЗ
	               |	РегистрСведений.РегистрационныеКарты КАК РегистрационныеКарты
	               |ГДЕ
	               |	РегистрационныеКарты.ИнформационнаяКарта.КодКарты = &КодКарты";
	Запрос.УстановитьПараметр("КодКарты", СокрЛП(КодКарты));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ИнформационнаяКарта = Справочники.РегистрационныеКарты.ПустаяСсылка();
	Иначе
		ТаблицаЗапроса = РезультатЗапроса.Выгрузить();
		ИнформационнаяКарта = ТаблицаЗапроса[0].ИнформационнаяКарта;
	КонецЕсли;
		
	Возврат ИнформационнаяКарта;
	
КонецФункции

//
//.. Конец изменения Dim)on  10 октября 2013 г. 17:08:57
