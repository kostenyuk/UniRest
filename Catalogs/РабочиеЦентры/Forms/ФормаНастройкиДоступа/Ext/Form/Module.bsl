

&НаКлиенте
Процедура ОК(Команда)
	
	Перем Отказ;
	
	ОчиститьСообщения();
	
	УстановитьПравилаИспользования(ВладелецПравДоступа, ПравилаИспользования, Отказ);

	Если Не Отказ Тогда
		Закрыть(Истина);
	КонецЕсли; 
	
КонецПроцедуры // ОК()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВладелецПравДоступа = Параметры.ВладелецПравДоступа;
	
	ПолучитьПравилаИспользования(ВладелецПравДоступа, ПравилаИспользования);
	
КонецПроцедуры // ПриСозданииНаСервере()


&НаСервереБезКонтекста
Процедура ПолучитьПравилаИспользования(Ссылка, Объект)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РабочиеЦентры.Ссылка КАК ОбъектДоступа,
	                      |	РабочиеЦентры.Представление КАК Представление,
	                      |	ЕСТЬNULL(НастройкиПравДоступаПользователей.Актуальность, ИСТИНА) КАК Актуальность,
	                      |	ВЫБОР
	                      |		КОГДА РабочиеЦентры.ПометкаУдаления
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК ИндексКартинки,
	                      |	ЛОЖЬ КАК ТолькоПросмотр,
	                      |	ИСТИНА КАК Доступность
	                      |ИЗ
	                      |	Справочник.РабочиеЦентры КАК РабочиеЦентры
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
	                      |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = РабочиеЦентры.Ссылка)
	                      |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &ВладелецПравДоступа)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	РабочиеЦентры.Владелец.Наименование,
	                      |	РабочиеЦентры.Наименование
	                      |ИТОГИ
	                      |	РабочиеЦентры.Владелец КАК ОбъектДоступа,
	                      |	ПРЕДСТАВЛЕНИЕССЫЛКИ(РабочиеЦентры.Владелец) КАК Представление,
	                      |	4 КАК ИндексКартинки,
	                      |	ИСТИНА КАК ТолькоПросмотр,
	                      |	ИСТИНА КАК Доступность
	                      |ПО
	                      |	РабочиеЦентры.Владелец КАК ОбъектДоступа
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ВладелецПравДоступа", Ссылка);
	
	ПравилаИспользования = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЗначениеВДанныеФормы(ПравилаИспользования, Объект);	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПолучитьПравилаИспользования()

&НаСервереБезКонтекста
Процедура УстановитьПравилаИспользования(Ссылка, Знач Объект, Отказ)

	Отказ = Ложь;

	УстановитьПривилегированныйРежим(Истина);
	
	ПравилаИспользования = ДанныеФормыВЗначение(Объект, Тип("ДеревоЗначений"));
	
	НаборЗаписей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВладелецПравДоступа.Установить(Ссылка);
	
	// Актуальные.
	Для Каждого СтрокаПравилИспользования Из ПравилаИспользования.Строки.НайтиСтроки(Новый Структура("Актуальность,ТолькоПросмотр", Ложь, Ложь), Истина) Цикл 
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаПравилИспользования);
		Запись.ВладелецПравДоступа = Ссылка;
	КонецЦикла; 

	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		// TODO: Регистрация ошибки.
		__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить права доступности'; uk = 'Не вдалося змінити права доступності'"), ,, "ПравилаИспользования", Отказ);
	КонецПопытки;

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // УстановитьПравилаИспользования()
