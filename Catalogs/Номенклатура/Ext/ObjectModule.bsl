
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если (ТипЗнч(ДанныеЗаполнения) = Тип("Структура")) Тогда
		Если ДанныеЗаполнения.Свойство("Родитель") Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
			
			НоменклатурнаяГруппа = Родитель.НоменклатурнаяГруппа;
			КатегорияНоменклатуры = Родитель.КатегорияНоменклатуры;
			ГруппаБлюда = Родитель.ГруппаБлюда; //Костенюк Александр 10.08.2015
			
			ДанныеЗаполнения = НоменклатурнаяГруппа;
		КонецЕсли;
	КонецЕсли;
	
	Если (ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.НоменклатурныеГруппы")) Тогда
		Если Не ЭтоГруппа Тогда
			
			ТипНоменклатуры = ДанныеЗаполнения.ТипНоменклатуры;
			Если Не ЗначениеЗаполнено(ТипНоменклатуры) Тогда
				ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Блюдо;
			КонецЕсли; 
			БазоваяЕдиницаИзмерения = ДанныеЗаполнения.БазоваяЕдиницаИзмерения;
			Безнадбавочный = ДанныеЗаполнения.Безнадбавочный;
			Безскидочный = ДанныеЗаполнения.Безскидочный;
			СтавкаНДС = ДанныеЗаполнения.СтавкаНДС;
			АкцизныйНалог = ДанныеЗаполнения.АкцизныйНалог; //Костенюк Александр 04.02.2015
			ПенсионныйФонд = ДанныеЗаполнения.ПенсионныйФонд;
			НоменклатурнаяГруппа = ДанныеЗаполнения.Ссылка;
			ПродолжительностьПроизводства = ДанныеЗаполнения.ПродолжительностьПроизводства;
			
			Ценовой = УправлениеНоменклатуройКлиентСервер.ДоступностьЦенововго(ЭтотОбъект);
			
			Штучный = (Штучный Или УправлениеНоменклатуройКлиентСервер.ТолькоШтучный(ЭтотОбъект)) И УправлениеНоменклатуройКлиентСервер.ДоступностьШтучного(ЭтотОбъект);
			Весовой = Весовой И УправлениеНоменклатуройКлиентСервер.ДоступностьВесового(ЭтотОбъект);
			Временной = Временной И УправлениеНоменклатуройКлиентСервер.ДоступностьВременного(ЭтотОбъект);
			
			Печатаемый = Печатаемый И УправлениеНоменклатуройКлиентСервер.ДоступностьПечатаемого(ЭтотОбъект);
		
			Если Не ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
				Если (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар) Или 
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга) Или
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор) Или
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Комплект) Или
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Сертификат) Или //Костенюк Александр 10.12.2014
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Депозит) Тогда
					БазоваяЕдиницаИзмерения = Константы.ЕдиницаИзмеренияШтучк.Получить();
				ИначеЕсли (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Блюдо) Или
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Модификатор) Или
					 (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Условие) Тогда
					БазоваяЕдиницаИзмерения = Константы.ЕдиницаИзмеренияПорций.Получить();
				КонецЕсли;
			КонецЕсли; 
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		__ОбщегоНазначенияСервер.ИзменитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты, , "НоменклатурнаяГруппа");
	Иначе
		Если Временной Тогда
			__ОбщегоНазначенияСервер.ИзменитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты, "ПродолжительностьПроизводства");
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ПередЗаписью(Отказ)
	
	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Версия.
	Если Не ЭтоГруппа Тогда	
		ВерсияСравнения = ВерсияДанных;
	КонецЕсли;
	
	// Нормализация.
	Если Не ЭтоГруппа Тогда
		Ценовой = Ценовой И УправлениеНоменклатуройКлиентСервер.ДоступностьЦенововго(ЭтотОбъект);
		
		//Модифицируемый = Модифицируемый И УправлениеНоменклатуройКлиентСервер.ДоступностьМодификаторов(ЭтотОбъект); 
		//Костенюк Александр-Старт 05.11.2012
		// Проверка на наличие модификаторов у модифицируемого товара
		ПравилаМодификаторовДерево = РегистрыСведений.МодификаторыНоменклатуры.ПолучитьСписокМодификаторов(ЭтотОбъект, ЭтотОбъект.Родитель, ЭтотОбъект);
		МассивАктуальных = ПравилаМодификаторовДерево.Строки.НайтиСтроки(Новый Структура("Актуальность", Истина), Истина);
		Модифицируемый = Модифицируемый И УправлениеНоменклатуройКлиентСервер.ДоступностьМодификаторов(ЭтотОбъект) И МассивАктуальных.Количество();
		//Костенюк Александр-Финиш 05.11.2012
		Если Не Модифицируемый Тогда
			МаксимальноеКоличествоМодификаторов = Неопределено;
		КонецЕсли; 
		МножественныйВыборМодификаторов = МножественныйВыборМодификаторов И Модифицируемый;
		ПовторениеМодификаторов = ПовторениеМодификаторов И МножественныйВыборМодификаторов;
												 
		Штучный = (Штучный Или УправлениеНоменклатуройКлиентСервер.ТолькоШтучный(ЭтотОбъект)) И УправлениеНоменклатуройКлиентСервер.ДоступностьШтучного(ЭтотОбъект);
		Весовой = Весовой И УправлениеНоменклатуройКлиентСервер.ДоступностьВесового(ЭтотОбъект);
		Временной = Временной И УправлениеНоменклатуройКлиентСервер.ДоступностьВременного(ЭтотОбъект);
		
		Печатаемый = Печатаемый И УправлениеНоменклатуройКлиентСервер.ДоступностьПечатаемого(ЭтотОбъект);
		
		Состав = УправлениеНоменклатуройКлиентСервер.ПривестиСостав(Состав);
		Выход = УправлениеНоменклатуройКлиентСервер.ПривестиВыход(Выход);
		
		Если Не Временной Тогда
			Оборудование = Неопределено;
			МинимальноеВремяЗаказа = Неопределено; //Костенюк Александр 29.09.2013
		КонецЕсли;
		
	КонецЕсли;
	
	// Параметры.
	Если Не ЭтоГруппа Тогда	
		Услуга = 
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга);
		Набор = 
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);
		
		ИспользуетсяТоварами =  
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Блюдо) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Комплект) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Сертификат) Или //Костенюк Александр 10.12.2014
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Депозит);
		ИспользуетсяКомплектами = 	
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Блюдо) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);
		ИспользуетсяМодификаторами = 
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Блюдо) Или
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Модификатор);
		ИспользуетсяУсловиями = 
			(ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Условие);	
		КонецЕсли;
		
		
		ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый()); //Костенюк Александр 21.03.2014
		
		//Костенюк Александр-Старт 10.12.2015
		Если ЗначениеЗаполнено(ЭтотОбъект.Родитель) Тогда
			ЭтотОбъект.ГруппаБлюда = ЭтотОбъект.Родитель.ГруппаБлюда;
		КонецЕсли;
		//Костенюк Александр-Финиш 10.12.2015
		
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	Перем ПараметрыЦены;
	
	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Цена.
	Если ДополнительныеСвойства.Свойство("ПараметрыЦены", ПараметрыЦены) Тогда
		//.. Начало изменения Dim)on  7 октября 2013 г. 3:05:24
		//
		Если ПараметрыЦены.Свойство("ТаблицаЦенПоТипам") И ПараметрыЦены.ТаблицаЦенПоТипам.Количество() Тогда
			РегистрыСведений.ЦеныНоменклатуры.УстановитьЦеновыеПараметрыДляНесколькихТиповЦен(ЭтотОбъект, ПараметрыЦены.Период, Истина, Отказ, ПараметрыЦены.ТаблицаЦенПоТипам);
		Иначе
			РегистрыСведений.ЦеныНоменклатуры.ПриЗаписиНоменклатуры(ЭтотОбъект, ПараметрыЦены.Период, ПараметрыЦены.Цена, ПараметрыЦены.Себестоимость, Отказ);
		КонецЕсли;
		ДополнительныеСвойства.Удалить("ПараметрыЦены");
		//
		//.. Конец изменения Dim)on  7 октября 2013 г. 3:05:24
	КонецЕсли; 
	
	// Связанные данные.
	Если Не Отказ Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Меню.Ссылка
		                      |ИЗ
		                      |	Справочник.Меню КАК Меню
		                      |ГДЕ
		                      |	Меню.Номенклатура = &Номенклатура
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	МодификаторыНоменклатуры.Ссылка
		                      |ИЗ
		                      |	Справочник.МодификаторыНоменклатуры КАК МодификаторыНоменклатуры
		                      |ГДЕ
		                      |	МодификаторыНоменклатуры.Номенклатура = &Номенклатура
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	УсловияНоменклатуры.Ссылка
		                      |ИЗ
		                      |	Справочник.УсловияНоменклатуры КАК УсловияНоменклатуры
		                      |ГДЕ
		                      |	УсловияНоменклатуры.Номенклатура = &Номенклатура
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	КомплектыНоменклатуры.Ссылка
		                      |ИЗ
		                      |	Справочник.КомплектыНоменклатуры КАК КомплектыНоменклатуры
		                      |ГДЕ
		                      |	КомплектыНоменклатуры.Номенклатура = &Номенклатура");
		Запрос.УстановитьПараметр("Номенклатура", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СвязанныйОбъект = Выборка.Ссылка.ПолучитьОбъект();
			СвязанныйОбъект.Наименование = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеНаименование(Наименование);
			СвязанныйОбъект.ОбменДанными.Загрузка = Истина;
			Попытка
				СвязанныйОбъект.Записать();
			Исключение
			    Отказ = Истина; // ERR
			КонецПопытки;
		КонецЦикла;
		
		////Костенюк Александр-Старт 21.03.2014
		//// При загрузке меню для новых позиций не нужно устанавливать флаги для типов скидок/наценок 
		//ЭтоНовый = Ложь;
		//ДополнительныеСвойства.Свойство("ЭтоНовый", ЭтоНовый);
		//Если ЭтоНовый Тогда
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = "ВЫБРАТЬ
		//				   |	ТипыСкидокНаценок.Ссылка КАК ТипСкидкиНаценки
		//				   |ИЗ
		//				   |	Справочник.ТипыСкидокНаценок КАК ТипыСкидокНаценок
		//				   |ГДЕ
		//				   |	НЕ ТипыСкидокНаценок.ПометкаУдаления
		//				   |	И НЕ ТипыСкидокНаценок.ЭтоГруппа";
		//	Выборка = Запрос.Выполнить().Выбрать();
		//	НаборЗаписей = РегистрыСведений.СкидкиНаценкиНоменклатуры.СоздатьНаборЗаписей();
		//	НаборЗаписей.Отбор.Номенклатура.Установить(Ссылка);
		//	Пока Выборка.Следующий() Цикл
		//		Запись = НаборЗаписей.Добавить();
		//		Запись.Номенклатура = Ссылка;
		//		Запись.ТипСкидкиНаценки = Выборка.ТипСкидкиНаценки;
		//	КонецЦикла;
		//	Попытка
		//		НаборЗаписей.Записать(Истина);
		//	Исключение
		//		// ERR
		//		Сообщить(ОписаниеОшибки());
		//	КонецПопытки;
		//КонецЕсли;
		////Костенюк Александр-Финиш 21.03.2014
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли; 

КонецПроцедуры // ПриЗаписи()
