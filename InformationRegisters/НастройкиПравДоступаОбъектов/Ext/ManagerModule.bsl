
Процедура ПолучитьПраваДоступаОбъектов(Ссылка, Объект) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если (Ссылка = Неопределено) Тогда
		ВладелецПравДоступа = Ссылка;
	Иначе
		ВладелецПравДоступа = Ссылка.Ссылка;
	КонецЕсли;
	
	// Деревов правил использования.
	ПраваДоступа = Новый ДеревоЗначений;
	ПраваДоступа.Колонки.Добавить("ОбъектДоступа");
	ПраваДоступа.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"), "Объект");
	
	МассивИсточников = Новый Массив; МассивИсточников.Добавить(Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы); МассивИсточников.Добавить(Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Реквизиты);
	Для Каждого Источник Из МассивИсточников Цикл Для Каждого Ресурс Из Источник Цикл ПраваДоступа.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип, Ресурс.Синоним); КонецЦикла; КонецЦикла;
	Ресурс = Метаданные.РегистрыСведений.НастройкиПравДоступаОтчетов.Ресурсы.Выполнение;
	ПраваДоступа.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип, Ресурс.Синоним);
	
	ПраваДоступа.Колонки.Добавить("ТолькоПросмотр", Новый ОписаниеТипов("Булево"));
	ПраваДоступа.Колонки.Добавить("Документ", Новый ОписаниеТипов("Булево"));
	ПраваДоступа.Колонки.Добавить("Отчет", Новый ОписаниеТипов("Булево"));
	ПраваДоступа.Колонки.Добавить("Картинка", Новый ОписаниеТипов("Картинка"));
	
	// Пустые данные.	
	ПустаяСтрокаТаблицы = Новый Структура;
	
	Для Каждого Ресурс Из Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы Цикл ПустаяСтрокаТаблицы.Вставить(Ресурс.Имя, Истина); КонецЦикла;
	ПустаяСтрокаТаблицы.Вставить("Выполнение", Истина);
	ПустаяСтрокаТаблицы.Вставить("РазделениеПоРесторанам", Перечисления.ПраваДоступаПользователей.Привилегированные);
	ПустаяСтрокаТаблицы.Вставить("РазделениеПоСотрудникам", Перечисления.ПраваДоступаПользователей.Привилегированные);
	
	// Построение дерева.
	МассивИсключаемыхОбъектов = ПолучитьИсключаемыеОбъекты();
	
	// Спраовчники.
	СтрокаГруппы = ПраваДоступа.Строки.Добавить();
	СтрокаГруппы.Представление = "Справочники";
	СтрокаГруппы.ТолькоПросмотр = Истина;
	СтрокаГруппы.Картинка = БиблиотекаКартинок.Справочник;
	Для Каждого Справочник Из Метаданные.Справочники Цикл
		Если (Не МассивИсключаемыхОбъектов.Найти(Справочник) = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
		СтрокаЭлемент.Представление = Справочник.Синоним;
		СтрокаЭлемент.ОбъектДоступа = Справочники[Справочник.Имя].ПустаяСсылка();
		СтрокаЭлемент.Картинка = БиблиотекаКартинок.Справочник;
		ЗаполнитьЗначенияСвойств(СтрокаЭлемент, ПустаяСтрокаТаблицы);
	КонецЦикла;
	СтрокаГруппы.Строки.Сортировать("Представление");
	
	// Документы.
	СтрокаГруппы = ПраваДоступа.Строки.Добавить();
	СтрокаГруппы.Представление = "Документы";
	СтрокаГруппы.ТолькоПросмотр = Истина;
	СтрокаГруппы.Документ = Истина;
	СтрокаГруппы.Картинка = БиблиотекаКартинок.Документ;
	Для Каждого Документ Из Метаданные.Документы Цикл
		Если (Не МассивИсключаемыхОбъектов.Найти(Документ) = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
		СтрокаЭлемент.Представление = Документ.Синоним;
		СтрокаЭлемент.ОбъектДоступа = Документы[Документ.Имя].ПустаяСсылка();
		СтрокаЭлемент.Документ = Истина;
		СтрокаЭлемент.Картинка = БиблиотекаКартинок.Документ;
		ЗаполнитьЗначенияСвойств(СтрокаЭлемент, ПустаяСтрокаТаблицы);
	КонецЦикла;
	СтрокаГруппы.Строки.Сортировать("Представление");
	
	// Отчеты.
	Если (Не ВладелецПравДоступа = Неопределено) И (Не ТипЗнч(ВладелецПравДоступа) = Тип("СправочникСсылка.РежимыРаботы")) Тогда
		СтрокаГруппы = ПраваДоступа.Строки.Добавить();
		СтрокаГруппы.Представление = "Отчеты";
		СтрокаГруппы.ТолькоПросмотр = Истина;
		СтрокаГруппы.Отчет = Истина;
		СтрокаГруппы.Картинка = БиблиотекаКартинок.Отчет;
		Для Каждого Отчет Из Метаданные.Отчеты Цикл
			Если (Не МассивИсключаемыхОбъектов.Найти(Отчет) = Неопределено) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
			СтрокаЭлемент.Представление = Отчет.Синоним;
			СтрокаЭлемент.ОбъектДоступа = "Отчет." + Отчет.Имя;
			СтрокаЭлемент.Отчет = Истина;
			СтрокаЭлемент.Картинка = БиблиотекаКартинок.Отчет;
			ЗаполнитьЗначенияСвойств(СтрокаЭлемент, ПустаяСтрокаТаблицы);
		КонецЦикла;
		СтрокаГруппы.Строки.Сортировать("Представление");
	КонецЕсли;
	
	// Выборка данных из регистра.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиПравДоступаОбъектов.ОбъектДоступа,
	                      |	НастройкиПравДоступаОбъектов.Добавление,
	                      |	НастройкиПравДоступаОбъектов.Изменение,
	                      |	НастройкиПравДоступаОбъектов.Печать,
	                      |	НастройкиПравДоступаОбъектов.Проведение,
	                      |	НастройкиПравДоступаОбъектов.Удаление,
	                      |	ЛОЖЬ КАК Выполнение,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПравДоступаОбъектов.РазделениеПоРесторанам = ЗНАЧЕНИЕ(Перечисление.ПраваДоступаПользователей.ПустаяСсылка)
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПраваДоступаПользователей.Привилегированные)
	                      |		ИНАЧЕ НастройкиПравДоступаОбъектов.РазделениеПоРесторанам
	                      |	КОНЕЦ КАК РазделениеПоРесторанам,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПравДоступаОбъектов.РазделениеПоСотрудникам = ЗНАЧЕНИЕ(Перечисление.ПраваДоступаПользователей.ПустаяСсылка)
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПраваДоступаПользователей.Привилегированные)
	                      |		ИНАЧЕ НастройкиПравДоступаОбъектов.РазделениеПоСотрудникам
	                      |	КОНЕЦ КАК РазделениеПоСотрудникам
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПравДоступаОбъектов КАК НастройкиПравДоступаОбъектов
	                      |ГДЕ
	                      |	НастройкиПравДоступаОбъектов.ВладелецПравДоступа = &ВладелецПравДоступа
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	НастройкиПравДоступаОтчетов.ОбъектДоступа,
	                      |	NULL,
	                      |	NULL,
	                      |	NULL,
	                      |	NULL,
	                      |	NULL,
	                      |	НастройкиПравДоступаОтчетов.Выполнение,
	                      |	NULL,
	                      |	NULL
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПравДоступаОтчетов КАК НастройкиПравДоступаОтчетов
	                      |ГДЕ
	                      |	НастройкиПравДоступаОтчетов.ВладелецПравДоступа = &ВладелецПравДоступа");
	Запрос.УстановитьПараметр("ВладелецПравДоступа", ВладелецПравДоступа);
	ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	
	
	// Заполнение данных.
	Для Каждого СтрокаТаблицы Из ТаблицаРезультатаЗапроса Цикл
		
		СтрокаЭлемент = ПраваДоступа.Строки.Найти(СтрокаТаблицы.ОбъектДоступа, "ОбъектДоступа", Истина);	
		Если (Не СтрокаЭлемент = Неопределено) Тогда
			ЗаполнитьЗначенияСвойств(СтрокаЭлемент, СтрокаТаблицы);
		КонецЕсли;
		
	КонецЦикла;
	
	// Итоги.
	Для Каждого СтрокаГруппы Из ПраваДоступа.Строки Цикл
		
		Для Каждого Ресурс Из Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы Цикл Ресурс = Ресурс.Имя; СтрокаГруппы[Ресурс] = СтрокаГруппы.Строки.Итог(Ресурс) = СтрокаГруппы.Строки.Количество(); КонецЦикла;
		Ресурс = "Выполнение"; СтрокаГруппы[Ресурс] = СтрокаГруппы.Строки.Итог(Ресурс) = СтрокаГруппы.Строки.Количество();
		
		СоответсвиеРазделениеПоРесторанам = Новый Соответствие; СоответсвиеРазделениеПоСотрудникам = Новый Соответствие;
		Для Каждого СтрокаЭлемент Из СтрокаГруппы.Строки Цикл СоответсвиеРазделениеПоРесторанам.Вставить(СтрокаЭлемент.РазделениеПоРесторанам); СоответсвиеРазделениеПоСотрудникам.Вставить(СтрокаЭлемент.РазделениеПоСотрудникам); КонецЦикла;
		Если (СоответсвиеРазделениеПоРесторанам.Количество() - 1) Тогда
			СтрокаГруппы.РазделениеПоРесторанам = Неопределено;
		Иначе
			Для Каждого ЭлементСоответсвия Из СоответсвиеРазделениеПоРесторанам Цикл СтрокаГруппы.РазделениеПоРесторанам = ЭлементСоответсвия.Ключ КонецЦикла;
		КонецЕсли; 
		Если (СоответсвиеРазделениеПоСотрудникам.Количество() - 1) Тогда
			СтрокаГруппы.РазделениеПоСотрудникам = Неопределено;
		Иначе
			Для Каждого ЭлементСоответсвия Из СоответсвиеРазделениеПоСотрудникам Цикл СтрокаГруппы.РазделениеПоСотрудникам = ЭлементСоответсвия.Ключ КонецЦикла;
		КонецЕсли; 
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ПраваДоступа, Объект);	

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПолучитьПраваДоступаОбъектов()

Процедура УстановитьПраваДоступаОбъектов(Ссылка, Объект, Отказ) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если (Ссылка = Неопределено) Тогда
		ВладелецПравДоступа = Ссылка;
	Иначе
		ВладелецПравДоступа = Ссылка.Ссылка;
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		ПраваДоступа = ДанныеФормыВЗначение(Объект, Тип("ДеревоЗначений"));
		
		НаборЗаписей = РегистрыСведений.НастройкиПравДоступаОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВладелецПравДоступа.Установить(ВладелецПравДоступа);
		
		// Актуальные.
		Для Каждого СтрокаПраваДоступа Из ПраваДоступа.Строки.НайтиСтроки(Новый Структура("ТолькоПросмотр,Отчет", Ложь, Ложь), Истина) Цикл 
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаПраваДоступа);
			Запись.ВладелецПравДоступа = ВладелецПравДоступа;
		КонецЦикла; 

		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			// TODO: Регистрация ошибки.
			__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить права доступа к объектам'; uk = 'Не вдалося змінити права доступу до об'єктів'"), ,, "ПраваДоступаОбъектов", Отказ);
		КонецПопытки;
	
	КонецЕсли; 
	
	Если Не Отказ Тогда
		Если (Не ВладелецПравДоступа = Неопределено) И (Не ТипЗнч(ВладелецПравДоступа) = Тип("СправочникСсылка.РежимыРаботы")) Тогда
			
			НаборЗаписей = РегистрыСведений.НастройкиПравДоступаОтчетов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ВладелецПравДоступа.Установить(ВладелецПравДоступа);
			
			// Актуальные.
			Для Каждого СтрокаПраваДоступа Из ПраваДоступа.Строки.НайтиСтроки(Новый Структура("ТолькоПросмотр,Отчет", Ложь, Истина), Истина) Цикл 
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, СтрокаПраваДоступа);
				Запись.ВладелецПравДоступа = ВладелецПравДоступа;
			КонецЦикла; 

			Попытка
				НаборЗаписей.Записать(Истина);
			Исключение
				// TODO: Регистрация ошибки.
				__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить права доступа к отчетам и обработкам'; uk = 'Не вдалося змінити права доступу до звітів та обробок'"), ,, "ПраваДоступаОбъектов", Отказ);
			КонецПопытки;
		
		КонецЕсли; 
	КонецЕсли; 

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // УстановитьПраваДоступаОбъектов()


Функция ПолучитьПрисутсвиеПравДоступаОбъектов(Ссылка) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	// Документы.
	МассивДокументов = Новый Массив;
	Для Каждого Документ Из Метаданные.Документы Цикл
		МассивДокументов.Добавить(Документы[Документ.Имя].ПустаяСсылка());
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиПравДоступаОбъектов.ВладелецПравДоступа
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПравДоступаОбъектов КАК НастройкиПравДоступаОбъектов
	                      |ГДЕ
	                      |	НастройкиПравДоступаОбъектов.ВладелецПравДоступа = &Владелец
	                      |	И (НастройкиПравДоступаОбъектов.Добавление = ЛОЖЬ
	                      |			ИЛИ НастройкиПравДоступаОбъектов.Изменение = ЛОЖЬ
	                      |			ИЛИ НастройкиПравДоступаОбъектов.Удаление = ЛОЖЬ
	                      |			ИЛИ НастройкиПравДоступаОбъектов.ОбъектДоступа В (&Документы)
	                      |				И (НастройкиПравДоступаОбъектов.Печать = ЛОЖЬ
	                      |					ИЛИ НастройкиПравДоступаОбъектов.Проведение = ЛОЖЬ
	                      |					ИЛИ НастройкиПравДоступаОбъектов.РазделениеПоРесторанам <> ЗНАЧЕНИЕ(Перечисление.ПраваДоступаПользователей.Привилегированные)
	                      |					ИЛИ НастройкиПравДоступаОбъектов.РазделениеПоСотрудникам <> ЗНАЧЕНИЕ(Перечисление.ПраваДоступаПользователей.Привилегированные)))
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	НастройкиПравДоступаОтчетов.ВладелецПравДоступа
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПравДоступаОтчетов КАК НастройкиПравДоступаОтчетов
	                      |ГДЕ
	                      |	НастройкиПравДоступаОтчетов.ВладелецПравДоступа = &Владелец
	                      |	И НастройкиПравДоступаОтчетов.Выполнение = ЛОЖЬ");
	Запрос.УстановитьПараметр("Владелец", Ссылка.Ссылка);
	Запрос.УстановитьПараметр("Документы", МассивДокументов);
	
	Результат = Не Запрос.Выполнить().Пустой();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции // ПолучитьПрисутсвиеПравДоступаОбъектов()


Функция ПолучитьИсключаемыеОбъекты()
	
	МассивИсключаемыхОбъектов = Новый Массив;
	
	Возврат МассивИсключаемыхОбъектов;
	
КонецФункции // ПолучитьИсключаемыеОбъекты()

