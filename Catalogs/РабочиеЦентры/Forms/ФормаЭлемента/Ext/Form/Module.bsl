
&НаКлиенте
Процедура ОборудованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуМодально("РегистрСведений.ТорговоеОборудование.Форма.ФормаВыбора", Новый Структура("Вид,ТекущаяСтрока", ПредопределенноеЗначение("Перечисление.ВидыТорговогоОборудования.ПринтерыВстречек"), Объект.Оборудование), Элемент);
	
КонецПроцедуры // ОборудованиеНачалоВыбора()

&НаКлиенте
Процедура ОборудованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; Модифицированность = Истина;
	
	Объект.Оборудование = ВыбранноеЗначение.Идентификатор;
	
	ПредставлениеОборудования = ВыбранноеЗначение.Представление;
	Ненайденное = Ложь;

КонецПроцедуры // ОборудованиеОбработкаВыбора()

&НаКлиенте
Процедура ОборудованиеОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Оборудование = Неопределено;
	
	Ненайденное = Ложь;
	
КонецПроцедуры // ОборудованиеОчистка()


&НаКлиенте
Процедура ПравилаИспользованияАктуальностьПриИзменении(Элемент)

	// Актуальность.
	__РаботаСДаннымиКлиентСервер.ИзменитьПравилаАктуальностиПодчиненных(Элемент, ПравилаИспользования);
	
КонецПроцедуры // ПравилаИспользованияАктуальностьПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Правила.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииНаСервере(Объект);
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Оборудование.
	ПредставлениеОборудования = РегистрыСведений.ТорговоеОборудование.ПолучитьПредставлние(Объект.Оборудование, Ненайденное);

	// Правила.
	МассивТипов = Новый Массив;
	Если ПолучитьФункциональнуюОпцию("РежимНастройкиРабочихЦентровНоменклатурныеГруппы") Тогда
		МассивТипов.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("РежимНастройкиРабочихЦентровНоменклатура") Тогда
		МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	КонецЕсли; 
	Если МассивТипов.Количество() Тогда
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	Иначе
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы, СправочникСсылка.Номенклатура");
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ПолучитьСвойство(Параметры, "ЗначениеКопирования")) Тогда
		ОбъектЗаполнения = Параметры.ЗначениеКопирования;
	Иначе
		ОбъектЗаполнения = ТекущийОбъект;
	КонецЕсли; 
	РегистрыСведений.ПравилаИспользования.ПолучитьПравилаИспользования(ОбъектЗаполнения, ОписаниеТипов, ПравилаИспользования);
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// Правила.
	РегистрыСведений.ПравилаИспользования.УстановитьПравилаИспользования(ТекущийОбъект, ПравилаИспользования, Отказ);
	
КонецПроцедуры // ПриЗаписиНаСервере()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	__УправлениеДаннымиКлиент.ОповеститьИзмененияНастроекРабочихЦентров();
	
КонецПроцедуры // ПослеЗаписи()
