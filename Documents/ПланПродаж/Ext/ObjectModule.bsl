
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Документы.ПланПродаж.ПроверитьУникальностьДокумента(ЭтотОбъект) Тогда
		Сообщить("Документ " + СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " по ресторану " +""""+ ЭтотОбъект.Ресторан +""""+ " на " + Формат(ЭтотОбъект.ДатаПланирования, "ДФ=dd.MM.yyyy") + " уже существует.", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	ПодготовитьШапку(РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если НЕ ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел()) Тогда
		Если ЭтотОбъект.Проведен Тогда
			ДвиженияПоРегиструПланыПродаж(Отказ);
		Иначе
			Движения.ПланыПродаж.Записывать = Истина;
			Движения.ПланыПродаж.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьШапку(РежимЗаписи, РежимПроведения)
	
	// Текущая дата
	ТекущаяДата = ТекущаяДата();
	
	// Распечатан
	Распечатан = (Проведен ИЛИ (РежимЗаписи = РежимЗаписиДокумента.Проведение)) И (НЕ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения);
	
	// Состояние
	Состояние = УправлениеЗаказами.ПолучитьСостояниеДокумента(ЭтотОбъект, РежимЗаписи);
	
	// Модуль
	Модуль = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Модуль, Перечисления.МодулиИПодсистемы.Ресторан);
	
	// Ресторан
	Ресторан = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Ресторан, Справочники.Рестораны.ОсновнойРесторан());
	
	// ДатаНачалаПериода
	ДатаНачалаПериода = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(ДатаНачалаПериода, Мин(ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ДатаОкончанияПериода, ТекущаяДата), ТекущаяДата));
	
	// ДатаОкончанияПериода
	Если Распечатан ИЛИ ПометкаУдаления Тогда
		ДатаОкончанияПериода = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(ДатаОкончанияПериода,	Макс(ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ДатаНачалаПериода, ТекущаяДата), ТекущаяДата));
	КонецЕсли;
	
КонецПроцедуры // ПодготовитьШапку()

Процедура ЗаполнитьСоставПлана() Экспорт
	
	
	ОчиститьРеквизитыТабличнойЧасти();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ГруппыБлюд.Ссылка
	               |ИЗ
	               |	Справочник.ГруппыБлюд КАК ГруппыБлюд
	               |ГДЕ
	               |	ГруппыБлюд.Актуальность
	               |	И НЕ ГруппыБлюд.ЭтоГруппа";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СоставПлана.Добавить();
		НоваяСтрока.ГруппаБлюда = Выборка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКолонкиТабличнойЧасти(Колонка) Экспорт
	Если НЕ СоставПлана.Количество() Тогда
		Возврат;
	КонецЕсли;
	Если Колонка = "" Тогда
		Для Каждого СтрокаТабличнойЧасти Из СоставПлана Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ЭтотОбъект);
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТабличнойЧасти Из СоставПлана Цикл
			СтрокаТабличнойЧасти[Колонка] = ЭтотОбъект[Колонка];
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура РассчитатьПоказателиТабличнойЧасти(НомерСтроки = "") Экспорт
	Если НЕ СоставПлана.Количество() Тогда
		Возврат;
	КонецЕсли;
	Если НомерСтроки = "" Тогда
		Для Каждого СтрокаТабличнойЧасти Из СоставПлана Цикл
			РассчитатьПоказателиСтрокиТабличнойЧасти(СтрокаТабличнойЧасти);
		КонецЦикла;
	Иначе
		РассчитатьПоказателиСтрокиТабличнойЧасти(СоставПлана.Получить(НомерСтроки - 1));
	КонецЕсли;
КонецПроцедуры

Процедура РассчитатьПоказателиСтрокиТабличнойЧасти(СтрокаТабличнойЧасти) Экспорт
	СтрокаТабличнойЧасти.Количество 		= СтрокаТабличнойЧасти.КЦП * СтрокаТабличнойЧасти.КоличествоКлиентов;
	СтрокаТабличнойЧасти.СреднийЧек 		= СтрокаТабличнойЧасти.КЦП * СтрокаТабличнойЧасти.Цена;
	СтрокаТабличнойЧасти.СредняяТранзакция 	= СтрокаТабличнойЧасти.СреднийЧек * СтрокаТабличнойЧасти.КоличествоКлиентовСреднее;
	СтрокаТабличнойЧасти.Сумма 				= СтрокаТабличнойЧасти.СреднийЧек * СтрокаТабличнойЧасти.КоличествоКлиентов;
	СтрокаТабличнойЧасти.СуммаБезСкидок 	= СтрокаТабличнойЧасти.Сумма / ((100 - СтрокаТабличнойЧасти.СкидкаПроцент) / 100);
	СтрокаТабличнойЧасти.СуммаСкидки 		= СтрокаТабличнойЧасти.СуммаБезСкидок - СтрокаТабличнойЧасти.Сумма;
	СтрокаТабличнойЧасти.Себестоимость 		= СтрокаТабличнойЧасти.Сумма * (СтрокаТабличнойЧасти.СебестоимостьПроцент / 100);
	СтрокаТабличнойЧасти.ВаловыйДоход 		= СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.Себестоимость;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДвиженияПоРегистрам(РежимПроведенияДокумента.Неоперативный, Отказ);
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(РежимПроведения, Отказ)
	
	ДвиженияПоРегиструПланыПродаж(Отказ);
	
КонецПроцедуры

Процедура ДвиженияПоРегиструПланыПродаж(Отказ)
	
	Движения.ПланыПродаж.Записывать = Истина;
	Движения.ПланыПродаж.Очистить();
	Для Каждого ТекСтрокаСоставПлана Из СоставПлана Цикл
		Движение 							= Движения.ПланыПродаж.Добавить();
		Движение.Период 					= ДатаПланирования;
		Движение.Ресторан 					= Ресторан;
		Движение.ГруппаБлюда 				= ТекСтрокаСоставПлана.ГруппаБлюда;
		Движение.ДокументПланирования 		= Ссылка;
		Движение.КоличествоКлиентов 		= ТекСтрокаСоставПлана.КоличествоКлиентов;
		Движение.КоличествоКлиентовСреднее 	= ТекСтрокаСоставПлана.КоличествоКлиентовСреднее;
		Движение.Количество 				= ТекСтрокаСоставПлана.Количество;
		Движение.КЦП 						= ТекСтрокаСоставПлана.КЦП;
		Движение.Цена 						= ТекСтрокаСоставПлана.Цена;
		Движение.СреднийЧек 				= ТекСтрокаСоставПлана.СреднийЧек;
		Движение.СредняяТранзакция 			= ТекСтрокаСоставПлана.СредняяТранзакция;
		Движение.СуммаБезСкидок 			= ТекСтрокаСоставПлана.СуммаБезСкидок;
		Движение.СуммаСкидки 				= ТекСтрокаСоставПлана.СуммаСкидки;
		Движение.СкидкаПроцент 				= ТекСтрокаСоставПлана.СкидкаПроцент;
		Движение.Сумма 						= ТекСтрокаСоставПлана.Сумма;
		Движение.Себестоимость 				= ТекСтрокаСоставПлана.Себестоимость;
		Движение.СебестоимостьПроцент 		= ТекСтрокаСоставПлана.СебестоимостьПроцент;
		Движение.ВаловыйДоход 				= ТекСтрокаСоставПлана.ВаловыйДоход;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОчиститьРеквизиты();
	
КонецПроцедуры

Процедура ОчиститьРеквизиты()
	
	// Шапка.
	ОчиститьРеквизитыШапки();
	
	// Табличная часть.
	ОчиститьРеквизитыТабличнойЧасти();
	
КонецПроцедуры

Процедура ОчиститьРеквизитыШапки()
	
	ДатаНачалаПериода 		= Неопределено;
	ДатаОкончанияПериода 	= Неопределено;
	ДатаПланирования 		= Неопределено;
	Распечатан 				= Неопределено;
	
КонецПроцедуры

Процедура ОчиститьРеквизитыТабличнойЧасти()
	
	СоставПлана.Очистить();
	
КонецПроцедуры

