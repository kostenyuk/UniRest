
// Процедура производит сохранение настройки
//
// Параметры:
// Отказ 		- Тип: Булево. Признак отказа от записи.
// ИмяОбъекта 	- Тип: Строка. Имя объекта конфигурации в строковом представлении. Например, Справочник.Меню.
// Настройка 	- Тип: Строка. Наименование сохраняемой настройки.
// Дата 		- Тип: Дата. Дата сохранения настройки.
//
Процедура СохранитьНастройку(Отказ, ИмяОбъекта, Настройка, Дата) Экспорт
	
	НаборЗаписей 	= РегистрыСведений.НастройкаАктуальности.СоздатьНаборЗаписей();
	ИмяСправочника 	= СтрЗаменить(СокрЛП(ИмяОбъекта), "Справочник.", "");
	Выборка 		= Справочники[СокрЛП(ИмяСправочника)].ВыбратьИерархически();
	
	НаборЗаписейОтбор(НаборЗаписей, ИмяОбъекта, Настройка);
	
	Пока Выборка.Следующий() Цикл
		
		Запись 							= НаборЗаписей.Добавить();
		Запись.ИмяОбъекта 				= СокрЛП(ИмяОбъекта);
		Запись.НаименованиеНастройки 	= СокрЛП(Настройка); 
		Запись.Ссылка 					= Выборка.Ссылка;
		Запись.Актуальность 			= Выборка.Актуальность;
		Запись.Дата 					= Дата;
		
	КонецЦикла;
	
	Попытка
		НаборЗаписей.Записать();
		ТекстСообщения = НСтр("ru='Настройки сохранены';uk='Налаштування збережені'"); 
		Сообщить(ТекстСообщения, СтатусСообщения.Информация);
	Исключение
		Сообщить(ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

// Процедура производит восстановление ранее сохраненной настройки
//
// Параметры:
// Отказ 		- Тип: Булево. Признак отказа от записи.
// ИмяОбъекта 	- Тип: Строка. Имя объекта конфигурации в строковом представлении. Например, Справочник.Меню.
// Настройка 	- Тип: Строка. Наименование восстанавливаемой настройки.
// Владелец		- Тип: СправочникСсылка.ВидыМеню. Владелец меню.
//
Процедура ВосстановитьНастройку(Отказ, ИмяОбъекта, Настройка, Владелец) Экспорт
	
	ТаблицаМеню 	= СформироватьТаблицуПоНастройке(ИмяОбъекта, Настройка, Владелец);
	ИмяСправочника 	= СтрЗаменить(СокрЛП(ИмяОбъекта), "Справочник.", "");
	Выборка 		= Справочники[СокрЛП(ИмяСправочника)].ВыбратьИерархически();
	
	НачатьТранзакцию();
	       
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаМеню.Найти(Выборка.Ссылка);
		
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СправочникОбъект 				= Выборка.ПолучитьОбъект();
		СправочникОбъект.Актуальность 	= НайденнаяСтрока.Актуальность;
		
		Попытка
			СправочникОбъект.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
			Отказ = Истина;
		КонецПопытки;
		
		Если Отказ Тогда
			ОтменитьТранзакцию();
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
		ТекстСообщения = НСтр("ru='Настройки восстановлены';uk='Налаштування відновлені'"); 
		Сообщить(ТекстСообщения, СтатусСообщения.Информация);
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует таблицу ранее сохраненных настроек
//
// Параметры:
// ИмяОбъекта 	- Тип: Строка. Имя объекта конфигурации в строковом представлении. Например, Справочник.Меню.
// Владелец		- Тип: СправочникСсылка.ВидыМеню. Владелец меню.
//
// Возвращаемое значение:
// Результат - Тип: ТаблицаЗначений. Результат выполнения запроса.
//
Функция СформироватьТаблицуНастроек(ИмяОбъекта, Владелец = Неопределено) Экспорт
	
	ИмяСправочника = СокрЛП(СтрЗаменить(СокрЛП(ИмяОбъекта), "Справочник.", ""));
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	НастройкаАктуальности.ИмяОбъекта,
	               |	ВЫБОР
	               |		КОГДА НастройкаАктуальности.Ссылка ССЫЛКА Справочник.Меню
	               |			ТОГДА НастройкаАктуальности.НаименованиеНастройки
	               |		ИНАЧЕ NULL
	               |	КОНЕЦ КАК НаименованиеНастройки,
	               |	ВЫБОР
	               |		КОГДА НастройкаАктуальности.Ссылка ССЫЛКА Справочник.Меню
	               |			ТОГДА НастройкаАктуальности.Дата
	               |		ИНАЧЕ NULL
	               |	КОНЕЦ КАК Дата
	               |ИЗ
	               |	РегистрСведений.НастройкаАктуальности КАК НастройкаАктуальности
	               |ГДЕ
	               |	НастройкаАктуальности.ИмяОбъекта = &ИмяОбъекта
	               |	И НастройкаАктуальности.Ссылка.Владелец = &Владелец";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.Меню", СокрЛП(ИмяОбъекта));
	Если ИмяСправочника = "МодификаторыНоменклатуры" ИЛИ ИмяСправочника = "УсловияНоменклатуры" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И НастройкаАктуальности.Ссылка.Владелец = &Владелец", "");
		Запрос.Текст = ТекстЗапроса;
	Иначе
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Владелец", Владелец);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИмяОбъекта", СокрЛП(ИмяОбъекта));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

// Функция формирует таблицу настроек для указанной настройки
//
// Параметры:
// ИмяОбъекта 	- Тип: Строка. Имя объекта конфигурации в строковом представлении. Например, Справочник.Меню.
// Владелец		- Тип: СправочникСсылка.ВидыМеню. Владелец меню.
//
// Возвращаемое значение:
// Результат - Тип: ТаблицаЗначений. Результат выполнения запроса.
//
Функция СформироватьТаблицуПоНастройке(ИмяОбъекта, Настройка, Владелец = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НастройкаАктуальности.Ссылка,
	               |	НастройкаАктуальности.Актуальность
	               |ИЗ
	               |	РегистрСведений.НастройкаАктуальности КАК НастройкаАктуальности
	               |ГДЕ
	               |	НастройкаАктуальности.НаименованиеНастройки = &Настройка
	               |	И НастройкаАктуальности.Ссылка.Владелец = &Владелец
	               |	И НастройкаАктуальности.ИмяОбъекта = &ИмяОбъекта
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Если Владелец = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И НастройкаАктуальности.Ссылка.Владелец = &Владелец", "");
		Запрос.Текст = ТекстЗапроса;
	Иначе
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Владелец", Владелец);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИмяОбъекта", СокрЛП(ИмяОбъекта));
	Запрос.УстановитьПараметр("Настройка", СокрЛП(Настройка));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

// Процедура производит удаление настройки
//
// Параметры:
// Отказ 		- Тип: Булево. Признак отказа от записи.
// ИмяОбъекта 	- Тип: Строка. Имя объекта конфигурации в строковом представлении. Например, Справочник.Меню.
// Настройка 	- Тип: Строка. Наименование сохраняемой настройки.
//
Процедура УдалитьНастройкуИзРегистра(Отказ, ИмяОбъекта, Настройка) Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкаАктуальности.СоздатьНаборЗаписей();
	НаборЗаписейОтбор(НаборЗаписей, ИмяОбъекта, Настройка);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

// Процедура накладывает отбор на записи регистра по заданным измерениям
//
// Параметры:
// НаборЗаписей - Тип: РегистрСведений.НаборЗаписей.
// ИмяОбъекта 	- Тип: Строка. Имя объекта конфигурации в строковом представлении. Например, Справочник.Меню.
// Настройка 	- Тип: Строка. Наименование сохраняемой настройки.
//
Процедура НаборЗаписейОтбор(НаборЗаписей, ИмяОбъекта, Настройка) Экспорт
	
	НаборЗаписей.Отбор.ИмяОбъекта.Значение 					= СокрЛП(ИмяОбъекта);
	НаборЗаписей.Отбор.ИмяОбъекта.Использование 			= Истина;
	НаборЗаписей.Отбор.НаименованиеНастройки.Значение 		= СокрЛП(Настройка);
	НаборЗаписей.Отбор.НаименованиеНастройки.Использование 	= Истина;
	
КонецПроцедуры

