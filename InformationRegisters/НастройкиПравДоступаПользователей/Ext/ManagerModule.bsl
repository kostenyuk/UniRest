
Процедура ПолучитьПраваДоступаПользователей(Ссылка, ОписаниеТипов, Объект) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	// Деревов правил использования.
	ПраваДоступа = Новый ДеревоЗначений;
	ПраваДоступа.Колонки.Добавить("ОбъектДоступа", ОписаниеТипов);
	ПраваДоступа.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"), "Представление");
	ПраваДоступа.Колонки.Добавить("Актуальность", Новый ОписаниеТипов("Булево"), "Актуальность");
	ПраваДоступа.Колонки.Добавить("ТолькоПросмотр", Новый ОписаниеТипов("Булево"), "Только просмотр");
	ПраваДоступа.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"), "Картинка");
	
	// Заполнение данных.
	Для Каждого ДопустимыйТипы Из ОписаниеТипов.Типы() Цикл

		ОбъектМетаданных = Метаданные.НайтиПоТипу(ДопустимыйТипы);
		
		// Запрос.
		Если ОбъектМетаданных.Владельцы.Количество() Тогда
			Подчиненный = Истина;
			
			Если ОбъектМетаданных.Иерархический Тогда
				Если (ОбъектМетаданных.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияЭлементов) Тогда
					ТекстЗапроса = "ВЫБРАТЬ
					               |	Меню.Владелец,
					               |	Меню.Владелец.Представление КАК ВладелецПредставление,
					               |	Меню.Ссылка КАК ОбъектДоступа,
					               |	Меню.Представление,
					               |	ЕСТЬNULL(НастройкиПравДоступаПользователей.Актуальность, ИСТИНА) КАК Актуальность,
					               |	ВЫБОР
					               |		КОГДА Меню.ПометкаУдаления
					               |			ТОГДА 1
					               |		ИНАЧЕ 0
					               |	КОНЕЦ КАК ИндексКартинки
					               |ИЗ
					               |	Справочник.Меню КАК Меню
					               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
					               |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = Меню.Ссылка)
					               |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец)
					               |
					               |УПОРЯДОЧИТЬ ПО
					               |	Меню.Ссылка ИЕРАРХИЯ
					               |АВТОУПОРЯДОЧИВАНИЕ";
				Иначе
					ТекстЗапроса = "ВЫБРАТЬ
					               |	Меню.Владелец,
					               |	Меню.Владелец.Представление КАК ВладелецПредставление,
					               |	Меню.Ссылка КАК ОбъектДоступа,
					               |	Меню.Представление,
					               |	ЕСТЬNULL(НастройкиПравДоступаПользователей.Актуальность, ИСТИНА) КАК Актуальность,
					               |	ВЫБОР
					               |		КОГДА Меню.ЭтоГруппа
					               |			ТОГДА 2
					               |		ИНАЧЕ 0
					               |	КОНЕЦ + ВЫБОР
					               |		КОГДА Меню.ПометкаУдаления
					               |			ТОГДА 1
					               |		ИНАЧЕ 0
					               |	КОНЕЦ КАК ИндексКартинки
					               |ИЗ
					               |	Справочник.Меню КАК Меню
					               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
					               |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = Меню.Ссылка)
					               |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец)
					               |
					               |УПОРЯДОЧИТЬ ПО
					               |	Меню.Ссылка ИЕРАРХИЯ
					               |АВТОУПОРЯДОЧИВАНИЕ";
				КонецЕсли;
			Иначе
					ТекстЗапроса = "ВЫБРАТЬ
					               |	Меню.Владелец,
					               |	Меню.Владелец.Представление КАК ВладелецПредставление,
					               |	Меню.Ссылка КАК ОбъектДоступа,
					               |	Меню.Представление,
					               |	ЕСТЬNULL(ПраваДоступа.Актуальность, ИСТИНА) КАК Актуальность,
					               |	ВЫБОР
					               |		КОГДА Меню.ПометкаУдаления
					               |			ТОГДА 1
					               |		ИНАЧЕ 0
					               |	КОНЕЦ КАК ИндексКартинки
					               |ИЗ
					               |	Справочник.Меню КАК Меню
					               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
					               |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = Меню.Ссылка)
					               |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец)
					               |АВТОУПОРЯДОЧИВАНИЕ";
			КонецЕсли;
		Иначе
			Подчиненный = Ложь;
			
			Если (ОбъектМетаданных.Иерархический) Тогда
				Если (ОбъектМетаданных.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияЭлементов) Тогда
					ТекстЗапроса = "ВЫБРАТЬ
					               |	НЕОПРЕДЕЛЕНО КАК Владелец,
					               |	НЕОПРЕДЕЛЕНО КАК ВладелецПредставление,
					               |	Меню.Ссылка КАК ОбъектДоступа,
					               |	Меню.Представление,
					               |	ЕСТЬNULL(НастройкиПравДоступаПользователей.Актуальность, ИСТИНА) КАК Актуальность,
					               |	ВЫБОР
					               |		КОГДА Меню.ПометкаУдаления
					               |			ТОГДА 1
					               |		ИНАЧЕ 0
					               |	КОНЕЦ КАК ИндексКартинки
					               |ИЗ
					               |	Справочник.Меню КАК Меню
					               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
					               |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = Меню.Ссылка)
					               |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец)
					               |
					               |УПОРЯДОЧИТЬ ПО
					               |	Меню.Ссылка ИЕРАРХИЯ
					               |АВТОУПОРЯДОЧИВАНИЕ";
				Иначе
					ТекстЗапроса = "ВЫБРАТЬ
					               |	НЕОПРЕДЕЛЕНО КАК Владелец,
					               |	НЕОПРЕДЕЛЕНО КАК ВладелецПредставление,
					               |	Меню.Ссылка КАК ОбъектДоступа,
					               |	Меню.Представление,
					               |	ЕСТЬNULL(НастройкиПравДоступаПользователей.Актуальность, ИСТИНА) КАК Актуальность,
					               |	ВЫБОР
					               |		КОГДА Меню.ЭтоГруппа
					               |			ТОГДА 2
					               |		ИНАЧЕ 0
					               |	КОНЕЦ + ВЫБОР
					               |		КОГДА Меню.ПометкаУдаления
					               |			ТОГДА 1
					               |		ИНАЧЕ 0
					               |	КОНЕЦ КАК ИндексКартинки
					               |ИЗ
					               |	Справочник.Меню КАК Меню
					               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
					               |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = Меню.Ссылка)
					               |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец)
					               |
					               |УПОРЯДОЧИТЬ ПО
					               |	Меню.Ссылка ИЕРАРХИЯ
					               |АВТОУПОРЯДОЧИВАНИЕ";
				КонецЕсли;
			Иначе
					ТекстЗапроса = "ВЫБРАТЬ
					               |	НЕОПРЕДЕЛЕНО КАК Владелец,
					               |	НЕОПРЕДЕЛЕНО КАК ВладелецПредставление,
					               |	Меню.Ссылка КАК ОбъектДоступа,
					               |	Меню.Представление,
					               |	ЕСТЬNULL(НастройкиПравДоступаПользователей.Актуальность, ИСТИНА) КАК Актуальность,
					               |	ВЫБОР
					               |		КОГДА Меню.ПометкаУдаления
					               |			ТОГДА 1
					               |		ИНАЧЕ 0
					               |	КОНЕЦ КАК ИндексКартинки
					               |ИЗ
					               |	Справочник.Меню КАК Меню
					               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
					               |		ПО (НастройкиПравДоступаПользователей.ОбъектДоступа = Меню.Ссылка)
					               |			И (НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец)
					               |АВТОУПОРЯДОЧИВАНИЕ";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.Меню", "Справочник." + ОбъектМетаданных.Имя);
	
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Владелец", Ссылка.Ссылка);
		
		ПромежуточныйРезультат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		// Нисходящий обход дерева.
		КорневойРодитель = ПраваДоступа.Строки.Добавить();
		КорневойРодитель.Представление = ОбъектМетаданных.Синоним;
		КорневойРодитель.ОбъектДоступа = Справочники[ОбъектМетаданных.Имя].ПустаяСсылка();
		КорневойРодитель.ТолькоПросмотр = Истина;
		КорневойРодитель.ИндексКартинки = 5;
		КорневойРодитель = КорневойРодитель.Строки;
		
		СоответсвиеРодителей = Новый Соответствие; МассивПодчиненных = Новый Массив; МассивПодчиненных.Добавить(ПромежуточныйРезультат.Строки);

		Для Каждого РодительЭлементы Из МассивПодчиненных Цикл
			Для Каждого ПодчиненныеДанные Из РодительЭлементы Цикл
				
				Если (ПодчиненныеДанные.Родитель = Неопределено) Тогда
					Если Подчиненный Тогда
						ВладелецРодитель = СоответсвиеРодителей[ПодчиненныеДанные.Владелец];
						
						Если (ВладелецРодитель = Неопределено) Тогда
							ВладелецРодитель = КорневойРодитель.Добавить();
							ВладелецРодитель.Представление = ПодчиненныеДанные.ВладелецПредставление;
							ВладелецРодитель.ОбъектДоступа = ПодчиненныеДанные.Владелец;
							ВладелецРодитель.ТолькоПросмотр = Истина;
							ВладелецРодитель.ИндексКартинки = 4;
							ВладелецРодитель = ВладелецРодитель.Строки;
							
							СоответсвиеРодителей[ПодчиненныеДанные.Владелец] = ВладелецРодитель;
						КонецЕсли; 
						
						СтрокаДанных = ВладелецРодитель.Добавить();
					Иначе
						СтрокаДанных = КорневойРодитель.Добавить();
					КонецЕсли; 
				Иначе
					СтрокаДанных = СоответсвиеРодителей[ПодчиненныеДанные.Родитель].Добавить();
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(СтрокаДанных, ПодчиненныеДанные);
				
				ПодчиненныеДанныеЭлементы = ПодчиненныеДанные.Строки; 
				Если ПодчиненныеДанныеЭлементы.Количество() Тогда
					МассивПодчиненных.Добавить(ПодчиненныеДанныеЭлементы);
					СоответсвиеРодителей[ПодчиненныеДанные] = СтрокаДанных.Строки;
				КонецЕсли; 
			КонецЦикла;
		КонецЦикла;
			
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ПраваДоступа, Объект);	

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПолучитьПраваДоступаПользователей()

Процедура УстановитьПраваДоступаПользователей(Ссылка, Объект, Отказ) Экспорт

	Если Не Отказ Тогда

		УстановитьПривилегированныйРежим(Истина);
		
		ПраваДоступа = ДанныеФормыВЗначение(Объект, Тип("ДеревоЗначений"));
		
		НаборЗаписей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВладелецПравДоступа.Установить(Ссылка.Ссылка);
		
		// Актуальные.
		Для Каждого СтрокаПравДоступа Из ПраваДоступа.Строки.НайтиСтроки(Новый Структура("Актуальность,ТолькоПросмотр", Ложь, Ложь), Истина) Цикл 
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаПравДоступа);
			Запись.ВладелецПравДоступа = Ссылка.Ссылка;
		КонецЦикла; 

		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			// TODO: Регистрация ошибки.
			__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить права доступности'; uk = 'Не вдалося змінити права доступності'"), ,, "ПраваДоступаПользователей", Отказ);
		КонецПопытки;

		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры // УстановитьПраваДоступаПользователей()

Функция ПолучитьПрисутсвиеПравДоступаПользователей(Ссылка) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	НастройкиПравДоступаПользователей.Актуальность
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
	                      |ГДЕ
	                      |	НастройкиПравДоступаПользователей.ВладелецПравДоступа = &Владелец
	                      |	И НЕ НастройкиПравДоступаПользователей.Актуальность");
	Запрос.УстановитьПараметр("Владелец", Ссылка.Ссылка);
	
	Результат = Не Запрос.Выполнить().Пустой();

	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции // ПолучитьПрисутсвиеПравДоступаПользователей()

// механизм предотвращает установку флагов доступности для групп пользователей
// чтобы новые позиции меню по умолчанию были недоступны
Функция УстановитьПраваДоступаПоВладельцу(ОбъектДоступа, ЭтоНовый, ВладелецПравДоступа) Экспорт
	
	Если ЭтоНовый Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РежимыРаботы.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.РежимыРаботы КАК РежимыРаботы
		               |ГДЕ
		               |	НЕ РежимыРаботы.ПометкаУдаления";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РежимыРаботы", ВладелецПравДоступа);
		Выборка = Запрос.Выполнить().Выбрать();
		НаборЗаписей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектДоступа.Установить(ОбъектДоступа);
		Пока Выборка.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.ОбъектДоступа = ОбъектДоступа;
			Запись.ВладелецПравДоступа = Выборка.Ссылка;
			Запись.Актуальность = Ложь;
		КонецЦикла;
		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			// ERR
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецФункции
