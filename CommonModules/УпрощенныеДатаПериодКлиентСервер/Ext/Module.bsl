
Функция ПолучитьУпрощенныйПериод(Объект) Экспорт
	
	Если Не Найти("сейчас|день|время", НРег(Объект.ТипВремени)) Тогда
		УстановитьТолькоВремя(Объект, '00010101');
	КонецЕсли;
	
	Если Найти("сейчас", НРег(Объект.ТипВремени)) Тогда
		Результат = "Сейчас";
	ИначеЕсли Найти("день", НРег(Объект.ТипВремени)) Тогда
		Результат = Формат(ПолучитьТолькоДату(Объект), "ДФ='dd.MM.yyyy, День'; ДП=");
	Иначе
		Результат = ПолучитьМоментВремени(Объект);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьУпрощенныйПериод()

Функция ПолучитьМоментВремени(Объект) Экспорт
	
	Возврат (ПолучитьТолькоДату(Объект) + СекундОтНачалаДня(ПолучитьТолькоВремя(Объект)));
	
КонецФункции // ПолучитьМоментВремени()

Функция ПолучитьТолькоДату(Объект) Экспорт
	
	Если Не Найти("позавчера|вчера|сегодня|завтра|послезавтра|дата", НРег(Объект.ТипДаты)) Тогда
		УстановитьТолькоДату(Объект, '00010101');
	КонецЕсли;
	
	НачалоДня = НачалоДня(ТекущаяДата());
	
	Если Найти("позавчера", НРег(Объект.ТипДаты)) Тогда
		Результат = (НачалоДня - 172800);
	ИначеЕсли Найти("вчера", НРег(Объект.ТипДаты)) Тогда
		Результат = (НачалоДня - 86400);
	ИначеЕсли Найти("сегодня", НРег(Объект.ТипДаты)) Тогда
		Результат = (НачалоДня);
	ИначеЕсли Найти("завтра", НРег(Объект.ТипДаты)) Тогда
		Результат = (НачалоДня + 86400);
	ИначеЕсли Найти("послезавтра", НРег(Объект.ТипДаты)) Тогда
		Результат = (НачалоДня + 172800);
	Иначе
		Результат = НачалоДня(Объект.Период);
	КонецЕсли;
	
	Объект.Период = Результат + СекундОтНачалаДня(Объект.Период);
	
	Возврат Результат;
	
КонецФункции // ПолучитьТолькоДату()

Функция ПолучитьТолькоВремя(Объект) Экспорт
	
	Если Не Найти("сейчас|день|время", НРег(Объект.ТипВремени)) Тогда
		УстановитьТолькоВремя(Объект, '00010101');
	КонецЕсли;
	
	ТекущееВремя = ('00010101' + СекундОтНачалаДня(ТекущаяДата()));
	
	Если Найти("сейчас", НРег(Объект.ТипВремени)) Тогда
		Результат = (ТекущееВремя);
	ИначеЕсли Найти("день", НРег(Объект.ТипВремени)) Тогда
		Результат = ('00010101');
	Иначе
		Результат = ('00010101' + СекундОтНачалаДня(Объект.Период));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьТолькоВремя()


Процедура УстановитьУпрощенныйПериод(Объект, Значение = '00010101') Экспорт
	
	ОписаниеТипов = Новый ОписаниеТипов("Строка,Дата,Неопределено");
	Если ОписаниеТипов.СодержитТип(ТипЗнч(Значение)) Тогда
		
		Индекс = Найти(Значение, ",");
		Если Индекс Тогда
	
			УстановитьТолькоДату(Объект, СокрП(Лев(Значение, Индекс - 1)));
			УстановитьТолькоВремя(Объект, СокрЛ(Сред(Значение, Индекс + 1)));
		
		Иначе
			
			УстановитьТолькоДату(Объект, Значение);
			УстановитьТолькоВремя(Объект, Значение);
			
		КонецЕсли;
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(Объект, Значение);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьУпрощенныйПериод()

Процедура УстановитьМоментВремени(Объект, Значение = '00010101') Экспорт
	
	ОписаниеТипов = Новый ОписаниеТипов("Строка,Дата,Неопределено");
	Если ОписаниеТипов.СодержитТип(ТипЗнч(Значение)) Тогда
	
		УстановитьТолькоДату(Объект, Значение);
		УстановитьТолькоВремя(Объект, Значение);
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(Объект, Значение);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьМоментВремени()

Процедура УстановитьТолькоДату(Объект, Значение = '00010101') Экспорт
	
	НачалоДня = НачалоДня(ТекущаяДата());
	
	Если Найти("позавчера|позавчора", НРег(Значение)) Тогда
		Результат = (НачалоДня - 172800);
	ИначеЕсли Найти("вчера|вчора", НРег(Значение)) Тогда
		Результат = (НачалоДня - 86400);
	ИначеЕсли Найти("сейчас|сегодня|день|зараз|сьогодні|день", НРег(Значение)) Тогда
		Результат = (НачалоДня);
	ИначеЕсли Найти("завтра|завтра", НРег(Значение)) Тогда
		Результат = (НачалоДня + 86400);
	ИначеЕсли Найти("послезавтра|післязавтра", НРег(Значение)) Тогда
		Результат = (НачалоДня + 172800);
	Иначе
		
		Если (ТипЗнч(Значение) = Тип("Дата")) Тогда
			Результат = НачалоДня(Значение);
		Иначе
			Результат = НачалоДня(ПолучитьДатуИзСтроки(Значение, НачалоДня));
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = НачалоДня;
	КонецЕсли;
		
	Объект.Период = Результат + СекундОтНачалаДня(Объект.Период);
	
	Если (Результат = НачалоДня - 172800) Тогда
		Объект.ТипДаты = "позавчера"; Объект.Дата = НСтр("ru = 'Позавчера'; uk = 'Позавчора'");
	ИначеЕсли (Результат = НачалоДня - 86400) Тогда
		Объект.ТипДаты = "вчера"; Объект.Дата = Строка(ВариантСтандартногоПериода.Вчера);
	ИначеЕсли (Результат = НачалоДня) Тогда
		Объект.ТипДаты = "сегодня"; Объект.Дата = Строка(ВариантСтандартногоПериода.Сегодня);
	ИначеЕсли (Результат = НачалоДня + 86400) Тогда
		Объект.ТипДаты = "завтра"; Объект.Дата = Строка(ВариантСтандартногоПериода.Завтра);
	ИначеЕсли (Результат = НачалоДня + 172800) Тогда
		Объект.ТипДаты = "послезавтра"; Объект.Дата = НСтр("ru = 'Послезавтра'; uk = 'Післязавтра'");
	Иначе
		Объект.ТипДаты = "дата"; Объект.Дата = Результат;
	КонецЕсли;
	
	АктуализироватьВремяПоДате(Объект);
	
КонецПроцедуры // УстановитьТолькоДату()

Процедура УстановитьТолькоВремя(Объект, Значение) Экспорт
	
	Если ОбъектПринадлежитУпрощенномуПериоду(Объект) Тогда
	
		Если Найти("сейчас|зараз", НРег(Значение)) Тогда
			Результат = ('00010101'); Объект.ТипВремени = "сейчас";
		ИначеЕсли Найти("день|сегодня|день|сьогодні", НРег(Значение)) Тогда
			Результат = ('00010101'); Объект.ТипВремени = "день";
		Иначе
			
			Если (ТипЗнч(Значение) = Тип("Дата")) Тогда
				Результат = Значение; Объект.ТипВремени = "время";
			Иначе
				Результат = ПолучитьВремяИзСтроки(Значение); Объект.ТипВремени = "время";
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ТекущееВремя = ('00010101' + СекундОтНачалаДня(ТекущаяДата()));
		
		Если Найти("сейчас|зараз", НРег(Значение)) Тогда
			Результат = (ТекущееВремя); Объект.ТипВремени = "время";
		ИначеЕсли Найти("день|сегодня|день|сьогодні", НРег(Значение)) Тогда
			Результат = ('00010101'); Объект.ТипВремени = "время";
		Иначе
			
			Если (ТипЗнч(Значение) = Тип("Дата")) Тогда
				Результат = Значение; Объект.ТипВремени = "время";
			Иначе
				Результат = ПолучитьВремяИзСтроки(Значение); Объект.ТипВремени = "время";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

	Объект.Период = НачалоДня(Объект.Период) + СекундОтНачалаДня(Результат);
	
	Если ОбъектПринадлежитУпрощенномуПериоду(Объект) Тогда
		
		Если Найти("сейчас", НРег(Объект.ТипВремени)) Тогда
			Объект.Время = НСтр("ru = 'Сейчас'; uk = 'Зараз'");
		ИначеЕсли Найти("день", НРег(Объект.ТипВремени)) Тогда
			Объект.Время = НСтр("ru = 'День'; uk = 'День'");
		Иначе
			Объект.Время = Формат(Результат, "ДФ=HH:mm; ДП=");
		КонецЕсли;
			
	Иначе
		
		Объект.Время = (Результат + 86400);
		
	КонецЕсли;

	АктуализироватьДатуПоВремени(Объект);
	
КонецПроцедуры // УстановитьТолькоВремя()


Функция НаСегодня(Объект) Экспорт
	
	Если Не Найти("позавчера|вчера|сегодня|завтра|послезавтра|дата", НРег(Объект.ТипДаты)) Тогда
		УстановитьТолькоДату(Объект, '00010101');
	КонецЕсли;
	
	Возврат Булево(Найти("сегодня", НРег(Объект.ТипДаты)));
	
КонецФункции // НаСейчас()

Функция НаСейчас(Объект) Экспорт
	
	Если Не Найти("сейчас|день|время", НРег(Объект.ТипВремени)) Тогда
		УстановитьТолькоВремя(Объект, '00010101');
	КонецЕсли;
	
	Возврат Булево(Найти("сейчас", НРег(Объект.ТипВремени)));
	
КонецФункции // НаСейчас()

Функция НаДень(Объект) Экспорт
	
	Если Не Найти("сейчас|день|время", НРег(Объект.ТипВремени)) Тогда
		УстановитьТолькоВремя(Объект, '00010101');
	КонецЕсли;
	
	Возврат Булево(Найти("день", НРег(Объект.ТипВремени)));
	
КонецФункции // НаДень()


Функция ПолучитьИнтервалВыбораВремени(Объект) Экспорт
	
	МинимальныйЧас = ПолучитьМинимальныйЧасИнтервалаВыбораВремени(Объект);
	МаксимальныйЧас = ПолучитьМаксимальныйЧасИнтервалаВыбораВремени(Объект);
	
	Результат = Новый Структура;
	Результат.Вставить("МинимальныйЧас", МинимальныйЧас);
	Результат.Вставить("МаксимальныйЧас", МаксимальныйЧас);
	Результат.Вставить("МинимальноеВремя", ('00010101' + МинимальныйЧас * 3600));
	Результат.Вставить("МаксимальноеВремя", ('00010101' + МаксимальныйЧас * 3600 + 3600 - 1));
	
	Возврат Результат;
	
КонецФункции // ПолучитьИнтервалВыбораВремени()

Процедура УстановитьИнтервалВыбораВремени(Объект, МинимальныйЧас, МаксимальныйЧас) Экспорт
	
	Объект.ИнтервалВыбораВремени = Мин(Макс(Мин(МинимальныйЧас, МаксимальныйЧас), 0), 23) * 100 + Мин(Макс(Макс(МаксимальныйЧас, МинимальныйЧас), 0), 23);
	
КонецПроцедуры // УстановитьИнтервалВыбораВремени()


#Если Клиент Тогда
	
Функция ДатаПриИзменении(Объект, Элемент) Экспорт
	
	УстановитьТолькоДату(Объект, Объект.Дата);
	
	Возврат Истина;

КонецФункции // ДатаПриИзменении()

Функция ДатаНачалоВыбора(Объект, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	НачалоДня = НачалоДня(ТекущаяДата()); Дата = ПолучитьТолькоДату(Объект);
	
	СписокВыбора = Элемент.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить((НачалоДня), ВариантСтандартногоПериода.Сегодня);
	СписокВыбора.Добавить((НачалоДня + 86400), ВариантСтандартногоПериода.Завтра);
	
	Для Индекс = 2 По 6 Цикл
		ПромежуточнаяДата = (НачалоДня + Индекс * 86400); СписокВыбора.Добавить(ПромежуточнаяДата, ТРег(Формат(ПромежуточнаяДата, "ДФ='dd.MM.yyyy, ddd.'")));
	КонецЦикла;
	
	СписокВыбора.Добавить(Неопределено, НСтр("ru = 'Выбрать...'; uk = 'Вибрати...'"));
	
	ЭлементСпискаВыбора = ПолучитьРодительскийЭлемент(Элемент, Тип("УправляемаяФорма")).ВыбратьИзСписка(Элемент.СписокВыбора, , СписокВыбора.НайтиПоЗначению(Дата));
	
	Если (ЭлементСпискаВыбора = Неопределено) Тогда
		// Отмена.
		СтандартнаяОбработка = Ложь; Результат = Ложь;
	Иначе
		
		Если (ЭлементСпискаВыбора.Значение = Неопределено) Тогда
			// Продолжение выбора.
			Объект.Дата = Дата; Результат = Ложь;
		Иначе
			// Выбор.
			СтандартнаяОбработка = Ложь; Результат = Истина;
			УстановитьТолькоДату(Объект, ЭлементСпискаВыбора.Значение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ДатаНачалоВыбора()

Функция ДатаНачалоВыбораИзСписка(Объект, Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Возврат Ложь;

КонецФункции // ДатаНачалоВыбораИзСписка()

	
Функция ВремяПриИзменении(Объект, Элемент) Экспорт
	
	УстановитьТолькоВремя(Объект, Объект.Время);
	
	Возврат Истина;

КонецФункции // ВремяПриИзменении()

Функция ВремяНачалоВыбора(Объект, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если ОбъектПринадлежитУпрощенномуПериоду(Объект) Тогда
		
		СписокВыбора = Элемент.СписокВыбора;
		СписокВыбора.Очистить();
		
		СписокВыбора.Добавить("сейчас", НСтр("ru = 'Сейчас'; uk = 'Зараз'"));
		
		Для Индекс = ПолучитьМинимальныйЧасИнтервалаВыбораВремени(Объект) По ПолучитьМаксимальныйЧасИнтервалаВыбораВремени(Объект) Цикл
			ПромежуточнаяДата = '00010101' + Индекс * 3600; СписокВыбора.Добавить(Формат(ПромежуточнаяДата, "ДФ=HH:mm; ДП="));
		КонецЦикла;
		
		ЭлементСпискаВыбора = ПолучитьРодительскийЭлемент(Элемент, Тип("УправляемаяФорма")).ВыбратьИзСписка(Элемент.СписокВыбора, , СписокВыбора.НайтиПоЗначению(НРег(Объект.Время)));
		
		Если (ЭлементСпискаВыбора = Неопределено) Тогда
			// Отмена.
			СтандартнаяОбработка = Ложь; Результат = Ложь;
		Иначе
			
			// Выбор.
			СтандартнаяОбработка = Ложь; Результат = Истина;
			УстановитьТолькоВремя(Объект, ЭлементСпискаВыбора.Значение);
			
		КонецЕсли;
		
	Иначе
		СтандартнаяОбработка = Ложь; Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ВремяНачалоВыбора()

Функция ВремяНачалоВыбораИзСписка(Объект, Элемент, СтандартнаяОбработка) Экспорт
	
	Если ОбъектПринадлежитУпрощенномуПериоду(Объект) Тогда
		СтандартнаяОбработка = Ложь;
	Иначе
		
		СписокВыбора = Элемент.СписокВыбора;
		СписокВыбора.Очистить();
		
		Для Индекс = ПолучитьМинимальныйЧасИнтервалаВыбораВремени(Объект) По ПолучитьМаксимальныйЧасИнтервалаВыбораВремени(Объект) Цикл
			ПромежуточнаяДата = '00010101' + Индекс * 3600 + 86400; СписокВыбора.Добавить(ПромежуточнаяДата, Формат(ПромежуточнаяДата, "ДФ=HH:mm; ДП="));
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции // ВремяНачалоВыбораИзСписка()

#КонецЕсли


Функция ОбъектПринадлежитУпрощенномуПериоду(Объект)
	
	Возврат (ТипЗнч(Объект.Время) = Тип("Строка"));
	
КонецФункции // ОбъектПринадлежитУпрощенномуПериоду()


Процедура АктуализироватьДатуПоВремени(Объект)
	
	Если Найти("сейчас", НРег(Объект.ТипВремени)) Тогда
		Объект.ТипДаты = "сегодня"; Объект.Дата = Строка(ВариантСтандартногоПериода.Сегодня);
	КонецЕсли;
	
	ПолучитьТолькоДату(Объект);
	
КонецПроцедуры // АктуализироватьДатуПоВремени()

Процедура АктуализироватьВремяПоДате(Объект)
	
	Если Найти("сегодня", НРег(Объект.ТипДаты)) Тогда
	Иначе
		Если Найти("сейчас", НРег(Объект.ТипВремени)) Тогда
			Объект.ТипВремени = "день"; Объект.Время = НСтр("ru = 'День'; uk = 'День'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // АктуализироватьВремяПоДате()


Функция ПолучитьРодительскийЭлемент(Элемент, Тип = Неопределено)
	
	Если (Тип = Неопределено) Тогда
		Возврат Элемент.Родитель;
	КонецЕсли; 
	
	Если (ТипЗнч(Тип) = Тип("Тип")) Тогда
		ТипРодителя = Тип;
	Иначе
		ТипРодителя = Тип(Тип);
	КонецЕсли; 
	
	Родитель = Элемент.Родитель; Пока (Не Родитель = Неопределено) И (Не ТипЗнч(Родитель) = ТипРодителя) Цикл Родитель = Родитель.Родитель; КонецЦикла; 
	
	Возврат Родитель;
	
КонецФункции // ПолучитьРодительскийЭлемент()


Функция ПолучитьДатуИзСтроки(Строка, БазоваяДата = '00010101')
	
	Если (БазоваяДата = Неопределено) Тогда
		БазоваяДата = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	Дата = БазоваяДата; Стр = СтрЗаменить(Строка," ","");
	
    Если ПустаяСтрока(Стр) Тогда
        Возврат Дата;
    КонецЕсли;

    Если Найти(Стр,".") Тогда
		М = РазложитьСтрокуВМассивПодстрок(Стр,".");
    ИначеЕсли Найти(Стр,":") Тогда
		М = РазложитьСтрокуВМассивПодстрок(Стр,":");
    ИначеЕсли Найти(Стр,"/") Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,"/");
    ИначеЕсли Найти(Стр,",") Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,",");
    ИначеЕсли Найти(Стр,"-") Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,"-");
	Иначе
		
		М = Новый Массив;
		Если СтрДлина(Стр)<3 Тогда
			М.Добавить(Стр);
		ИначеЕсли СтрДлина(Стр)<5 Тогда
			М.Добавить(Лев(Стр, 2));
			М.Добавить(Сред(Стр, 3, 2));
		Иначе
			М.Добавить(Лев(Стр, 2));
			М.Добавить(Сред(Стр, 3, 2));
			М.Добавить(Сред(Стр, 5, 4));
		КонецЕсли;
		
    КонецЕсли;

    Если М.Количество()<2 Тогда
		М.Добавить(Месяц(Дата));
	КонецЕсли;
    Если М.Количество()<3 Тогда
		М.Добавить(Год(Дата));
	Иначе
		Если СтрДлина(М[2])=1 Тогда
			М[2]="200"+М[2];
		ИначеЕсли СтрДлина(М[2])=2 Тогда
			Если (М[2]<="29") Тогда
				М[2]="20"+М[2];
			Иначе
				М[2]="19"+М[2];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Дата = Дата(М[2],М[1],М[0]);
    Исключение
	КонецПопытки;

    Возврат Дата;
	
КонецФункции // ПолучитьДатуИзСтроки()

Функция ПолучитьВремяИзСтроки(Строка)
	
	Время = '00010101'; Стр = СтрЗаменить(Строка," ","");
	
    Если ПустаяСтрока(Стр) Тогда
        Возврат Время;
    КонецЕсли;
	
    Если Найти(Стр,".") Тогда
		М = РазложитьСтрокуВМассивПодстрок(Стр,".");
    ИначеЕсли Найти(Стр,":") Тогда
		М = РазложитьСтрокуВМассивПодстрок(Стр,":");
    ИначеЕсли Найти(Стр,"/") Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,"/");
    ИначеЕсли Найти(Стр,",") Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,",");
    ИначеЕсли Найти(Стр,"-") Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,"-");
	Иначе
		
		М = Новый Массив;
		Если СтрДлина(Стр)<3 Тогда
			М.Добавить(Стр);
		ИначеЕсли СтрДлина(Стр)=3 Тогда
			М.Добавить(Лев(Стр, 1));
			М.Добавить(Прав(Стр, 2));
		ИначеЕсли СтрДлина(Стр)=4 Тогда
			М.Добавить(Лев(Стр, 2));
			М.Добавить(Прав(Стр, 2));
		Иначе
			М.Добавить(Лев(Стр, 2));
			М.Добавить(Сред(Стр, 3, 2));
			М.Добавить(Сред(Стр, 5, 2));
		КонецЕсли;
		
    КонецЕсли;
	
    Если М.Количество()<2 Тогда
		М.Добавить(0);
	КонецЕсли;
    Если М.Количество()<3 Тогда
		М.Добавить(0);
	КонецЕсли;
	
	Попытка
		Время = Дата(1,1,1, М[0],М[1],М[2]);
    Исключение
	КонецПопытки;
	
	Возврат Время;

КонецФункции // ПолучитьВремяИзСтроки()


Функция РазложитьСтрокуВМассивПодстрок(Строка, Разделитель = ",")
	
	Стр = Строка;
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр, Поз - 1));
			Стр = СокрЛ(Сред(Стр, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);
			Если Поз = 0 Тогда
				Если (СокрЛП(Стр) <> "") Тогда
					МассивСтрок.Добавить(Стр);
				КонецЕсли;
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз - 1));
			Стр = Сред(Стр, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 


Функция СекундОтНачалаДня(Дата)
	
    Возврат Дата - НачалоДня(Дата);
	
КонецФункции // СекундОтНачалаДня()


Функция ПолучитьМинимальныйЧасИнтервалаВыбораВремени(Объект)
	
	Если Объект.ИнтервалВыбораВремени Тогда
		Возврат Мин(Макс(Цел(Объект.ИнтервалВыбораВремени / 100), 0), 23);
	КонецЕсли;
		
	Возврат 00;
	
КонецФункции // ПолучитьМинимальныйЧасИнтервалаВыбораВремени()

Функция ПолучитьМаксимальныйЧасИнтервалаВыбораВремени(Объект)
	
	Если Объект.ИнтервалВыбораВремени Тогда
		Возврат Мин(Макс(Цел(Объект.ИнтервалВыбораВремени % 100), 0), 23);
	КонецЕсли;
		
	Возврат 23;
	
КонецФункции // ПолучитьМаксимальныйЧасИнтервалаВыбораВремени()
