
Функция ПолучитьЗаголовокКоманды() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	МАКСИМУМ(НоменклатураМеню.Дата) КАК Дата
	                      |ИЗ
	                      |	РегистрСведений.НоменклатураМеню КАК НоменклатураМеню");
    Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
	Иначе
	    Дата = '00010101';
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НСтр("ru = 'Обновлено: '; uk = 'Оновлено: '") + Формат(Дата, НСтр("ru = 'ДЛФ=D; ДП=''не обновлялось'''; uk = 'ДЛФ=D; ДП=''не оновлювалося'''"));

КонецФункции // ПолучитьЗаголовокКоманды()

Функция ПолучитьСписокНеактуализированнойНоменклатуры() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Справочник.Ссылка КАК Номенклатура
	                      |ИЗ
	                      |	Справочник.Номенклатура КАК Справочник
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураМеню КАК НоменклатураМеню
	                      |		ПО (НоменклатураМеню.Номенклатура = Справочник.Ссылка)
	                      |ГДЕ
	                      |	НЕ Справочник.ВерсияСравнения = ЕСТЬNULL(НоменклатураМеню.ВерсияСравнения, НЕОПРЕДЕЛЕНО)");
    Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;

КонецФункции // ПолучитьСписокНеактуализированнойНоменклатуры()


Процедура АктуализорватьНоменклатуру(Номенклатура, Период, Отказ) Экспорт
	
	ПриЗаписиНоменклатуры(Номенклатура, Период, Отказ, Истина);

КонецПроцедуры // АктуализорватьНоменклатуру()

Процедура ДеактуализорватьНоменклатуру(Номенклатура, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.НоменклатураМеню.СоздатьМенеджерЗаписи();
	Запись.Номенклатура = Номенклатура;
    Запись.Прочитать();
	
	Если Запись.Выбран() Тогда
		Запись.ВерсияСравнения = Неопределено;
	
		Попытка
			Запись.Записать(Истина);
		Исключение
		    Отказ = Истина; // ERR
		КонецПопытки; 
	КонецЕсли; 

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ДеактуализорватьНоменклатуру()


Процедура ПриЗаписиНоменклатуры(Номенклатура, Период, Отказ, Принудительно = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.НоменклатураМеню.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, Номенклатура);
	РегистрыСведений.ЦеныНоменклатуры.ПолучитьЦеновыеПараметры(Номенклатура, Период, Запись.Цена, Запись.Себестоимость);	
	Запись.Организация = Номенклатура.НоменклатурнаяГруппа.Организация;
	Запись.Номенклатура = Номенклатура.Ссылка;
	Запись.Дата = ТекущаяДата();

	Попытка
		Запись.Записать(Истина);
	Исключение
	    Отказ = Истина; // ERR
	КонецПопытки; 

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПриЗаписиНоменклатуры()

//Костенюк Александр-Старт 02.12.2013
//
// Процедура обновляет меню
// 
// Параметры:
// ПолноеОбновление - Тип: Булево. Признак полного обновления меню.
// 
Процедура ОбновитьМеню(ПолноеОбновление = Истина) Экспорт
	
	Отказ = Ложь;
	
	Если НЕ ПолноеОбновление Тогда
		Номенклатура = ПолучитьСписокНеактуализированнойНоменклатуры();
	КонецЕсли;
	
	// Выборка данных.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Справочник.Ссылка КАК Номенклатура,
	               |	Справочник.ЭтоГруппа
	               |ИЗ
	               |	Справочник.Номенклатура КАК Справочник
	               |ГДЕ
	               |	Справочник.Ссылка В(&Номенклатура)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура ИЕРАРХИЯ";
	Если НЕ ПолноеОбновление Тогда
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Ссылка В(&Номенклатура)", "ИСТИНА");
	КонецЕсли;
	
	ДеревоТоваров = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	НачатьТранзакцию();
	Для Каждого СтрокаДерева ИЗ ДеревоТоваров.Строки.НайтиСтроки(Новый Структура("ЭтоГруппа", Ложь), Истина) Цикл
		РегистрыСведений.НоменклатураМеню.АктуализорватьНоменклатуру(СтрокаДерева.Номенклатура, НачалоДня(ТекущаяДата()), Отказ);
		Если Отказ Тогда
			ОтменитьТранзакцию();
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
		
КонецПроцедуры // ОбновитьМеню()
//Костенюк Александр-Финиш 02.12.2013

// Рефакторинг: Удалить поля не влияющие на ценообразование и учетную политику.
