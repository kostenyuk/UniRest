
&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	// Элементы.
	Элементы.Уточняемая.Видимость = Справочники.ТипыСкидокНаценок.ДоступностьУточняемости(Объект);
	Элементы.ВытесняющаяСкидка.Доступность = Справочники.ТипыСкидокНаценок.ДоступностьВытесняющейСкидки(Объект);
	
	Элементы.НеРаспространяетсяНаДепозитнуюКарту.Видимость = Ложь; //Костенюк Александр 05.04.2013
	Элементы.ОграничениеСкидкиНаценки.Видимость = Ложь; //Костенюк Александр 25.12.2014
	
	Если (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоДнюРождения) Тогда
		Элементы.ЗначениеУсловия.Видимость = Ложь;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Ложь;
		Элементы.ПорогДисконтнойПрограммы.Видимость = Ложь;
		Элементы.ГруппаДеньРождения.Видимость = Истина;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Истина;
		Элементы.ДекорацияЗначениеУсловия.Высота = 1;
	ИначеЕсли (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоДисконтнойПрограмме) Тогда
		Элементы.ЗначениеУсловия.Видимость = Истина;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Ложь;
		Элементы.ПорогДисконтнойПрограммы.Видимость = Истина;
		Элементы.ГруппаДеньРождения.Видимость = Ложь;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Ложь;
	ИначеЕсли (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоКоличествуТовара) Тогда
		Элементы.ЗначениеУсловия.Видимость = Истина;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Истина;
		Элементы.ПорогДисконтнойПрограммы.Видимость = Ложь;
		Элементы.ГруппаДеньРождения.Видимость = Ложь;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Ложь;
	ИначеЕсли (Объект.Условие = Перечисления.УсловияСкидкиНаценки.БезУсловий) Или
		(Объект.Условие = Перечисления.УсловияСкидкиНаценки.РучнаяСкидка) Тогда
		Элементы.ЗначениеУсловия.Видимость = Ложь;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Ложь;
		Элементы.ПорогДисконтнойПрограммы.Видимость = Ложь;
		Элементы.ГруппаДеньРождения.Видимость = Ложь;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Истина;
		Элементы.ДекорацияЗначениеУсловия.Высота = 2;
		Элементы.НеРаспространяетсяНаДепозитнуюКарту.Видимость = Истина; //Костенюк Александр 05.04.2013
	//Костенюк Александр-Старт 21.09.2012
	ИначеЕсли (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоУсловиюВидаДисконтнойКарты) Тогда
		Элементы.ЗначениеУсловия.Видимость = Истина;
		Элементы.ЗначениеУсловияДополнительное.Заголовок = "Значение условия";
		Элементы.ЗначениеУсловияДополнительное.КнопкаВыбора = Истина;
		Элементы.ЗначениеУсловияДополнительное.КнопкаОткрытия = Истина;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Истина;
		Элементы.ПорогДисконтнойПрограммы.Видимость = Ложь;
		Элементы.ГруппаДеньРождения.Видимость = Ложь;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Ложь;
	//Костенюк Александр-Финиш 21.09.2012
	//Костенюк Александр-Старт 10.12.2014
	ИначеЕсли (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуСертификата)
		ИЛИ	(Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоСертификату) Тогда
		Элементы.ЗначениеУсловия.Видимость = Истина;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Ложь;
		Элементы.ОграничениеСкидкиНаценки.Видимость = НЕ Объект.СуммоваяСкидкаНаценка;
		Элементы.ГруппаДеньРождения.Видимость = Ложь;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Ложь;
	//Костенюк Александр-Финиш 10.12.2014
	Иначе
		Элементы.ЗначениеУсловия.Видимость = Истина;
		Элементы.ЗначениеУсловияДополнительное.Видимость = Ложь;
		Элементы.ПорогДисконтнойПрограммы.Видимость = Ложь;
		Элементы.ГруппаДеньРождения.Видимость = Ложь;
		Элементы.ДекорацияЗначениеУсловия.Видимость = Истина;
		Элементы.ДекорацияЗначениеУсловия.Высота = 1;
		Если (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента) Тогда
			Элементы.ЗначениеУсловия.Заголовок = НСтр("ru = 'Сумма'; uk = 'Сума'");
			Элементы.ЗначениеУсловия.РастягиватьПоГоризонтали = Ложь;
			Элементы.ЗначениеУсловия.КнопкаВыбора = Ложь;
			Элементы.ЗначениеУсловия.КнопкаОткрытия = Ложь;
		Иначе
			Элементы.ЗначениеУсловия.Заголовок = НСтр("ru = 'Значение'; uk = 'Значення'");
			Элементы.ЗначениеУсловия.РастягиватьПоГоризонтали = Истина;
			Элементы.ЗначениеУсловия.КнопкаВыбора = Истина;
			Элементы.ЗначениеУсловия.КнопкаОткрытия = Истина;
		КонецЕсли; 
	КонецЕсли;
	
	Элементы.ЗначениеУсловия.ОграничениеТипа = Справочники.ТипыСкидокНаценок.ОипсаниеТипаЗначенияУсловия(Объект);
	Элементы.ЗначениеУсловияДополнительное.ОграничениеТипа = Справочники.ТипыСкидокНаценок.ОипсаниеТипаЗначенияУсловияДополнительное(Объект);
	
КонецПроцедуры // УстановитьВидимостьНаСервере()


&НаКлиенте
Процедура ПроцентСкидкиНаценкиПриИзменении(Элемент)
	
	Если Не Объект.СуммоваяСкидкаНаценка Тогда
		Если (Объект.ПроцентСкидкиНаценки < 0) Тогда
			Объект.ПроцентСкидкиНаценки = Макс(Объект.ПроцентСкидкиНаценки, -100);
		Иначе
			Объект.ПроцентСкидкиНаценки = Мин(Объект.ПроцентСкидкиНаценки, 100);
		КонецЕсли;
	Иначе
	    Объект.ПроцентСкидкиНаценки = Макс(Объект.ПроцентСкидкиНаценки, 0);
	КонецЕсли;
	
	ДоступностьВытесняющейСкидкиНаСервере(); //Костенюк Александр 26.11.2012
	
	// Правила.
	Если Объект.ПроцентСкидкиНаценки Тогда
		МассивПодчиненных = Новый Массив; МассивПодчиненных.Добавить(ПравилаИспользования.ПолучитьЭлементы());

		Для Каждого РодительЭлементы Из МассивПодчиненных Цикл
			Для Каждого ПодчиненныеДанные Из РодительЭлементы Цикл
				Если ПодчиненныеДанные.Актуальность И (ПодчиненныеДанные.ПроцентСкидкиНаценки = Объект.ПроцентСкидкиНаценки) Тогда
					ПодчиненныеДанные.ПроцентСкидкиНаценки = Неопределено;
					ПодчиненныеДанные.ПроцентСкидкиНаценкиИзменен = Ложь;
				КонецЕсли; 
						
				РодительЭлементы = ПодчиненныеДанные.ПолучитьЭлементы(); 
				Если РодительЭлементы.Количество() Тогда
					МассивПодчиненных.Добавить(РодительЭлементы);
				КонецЕсли; 
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьВидимостьНаСервере(); //Костенюк Александр 11.12.2014
	
КонецПроцедуры // ПроцентСкидкиНаценкиПриИзменении()

&НаКлиенте
Процедура УсловиеПриИзменении(Элемент)
	
	УсловиеПриИзмененииНаСервере();
	
КонецПроцедуры // УсловиеПриИзменении()

&НаСервере
Процедура УсловиеПриИзмененииНаСервере()
	
	// Условие.
	Объект.Условие = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Объект.Условие, ПредопределенноеЗначение("Перечисление.УсловияСкидкиНаценки.РучнаяСкидка"));
	
	// Уточняемая.
	Объект.Уточняемая = Объект.Уточняемая И Справочники.ТипыСкидокНаценок.ДоступностьУточняемости(Объект);
	
	// ВытесняющаяСкидка.
	Объект.ВытесняющаяСкидка = Объект.ВытесняющаяСкидка И Справочники.ТипыСкидокНаценок.ДоступностьВытесняющейСкидки(Объект);
	
	// ЗначениеУсловия, ЗначениеУсловияДополнительное.
	Объект.ЗначениеУсловия = Справочники.ТипыСкидокНаценок.ОипсаниеТипаЗначенияУсловия(Объект).ПривестиЗначение(Объект.ЗначениеУсловия);
	Объект.ЗначениеУсловияДополнительное = Справочники.ТипыСкидокНаценок.ОипсаниеТипаЗначенияУсловияДополнительное(Объект).ПривестиЗначение(Объект.ЗначениеУсловия);
	Если (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоДнюРождения) Тогда
		Объект.ЗначениеУсловия = Макс(Объект.ЗначениеУсловия, 1);
		Объект.ЗначениеУсловияДополнительное = Макс(Объект.ЗначениеУсловияДополнительное, 1);
	КонецЕсли;
	
	// Настройка формы.
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры // УсловиеПриИзменении()


&НаКлиенте
Процедура ПравилаИспользованияАктуальностьПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ПравилаИспользования.ТекущиеДанные;
	
	Если ТекущиеДанные.Актуальность Тогда
		Если ТекущиеДанные.ПолучитьРодителя().ТолькоПросмотр Тогда
			ТекущиеДанные.ПроцентСкидкиНаценки = Неопределено;
		Иначе
			ТекущиеДанные.ПроцентСкидкиНаценки = ТекущиеДанные.ПолучитьРодителя().ПроцентСкидкиНаценки;
		КонецЕсли; 
	Иначе
		ТекущиеДанные.ПроцентСкидкиНаценки = 0;
	КонецЕсли;
	
	ПравилаИспользованияПриИзменении();
	
КонецПроцедуры // ПравилаИспользованияАктуальностьПриИзменении()

&НаКлиенте
Процедура ПравилаИспользованияПроцентСкидкиНаценкиПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ПравилаИспользования.ТекущиеДанные;
	
	Если Не Объект.СуммоваяСкидкаНаценка Тогда
		Если (ТекущиеДанные.ПроцентСкидкиНаценки < 0) Тогда
			ТекущиеДанные.ПроцентСкидкиНаценки = Макс(ТекущиеДанные.ПроцентСкидкиНаценки, -100);
		Иначе
			ТекущиеДанные.ПроцентСкидкиНаценки = Мин(ТекущиеДанные.ПроцентСкидкиНаценки, 100);
		КонецЕсли;
	Иначе
	    ТекущиеДанные.ПроцентСкидкиНаценки = Макс(ТекущиеДанные.ПроцентСкидкиНаценки, 0);
	КонецЕсли;	

	ТекущиеДанные.Актуальность = ТекущиеДанные.ПроцентСкидкиНаценки;
	Если (ТекущиеДанные.ПроцентСкидкиНаценки = Объект.ПроцентСкидкиНаценки) Тогда
		ТекущиеДанные.ПроцентСкидкиНаценки = Неопределено;
	КонецЕсли;
	
	ПравилаИспользованияПриИзменении();
	
КонецПроцедуры // ПравилаИспользованияПроцентСкидкиНаценкиПриИзменении()

&НаКлиенте
Процедура ПравилаИспользованияПриИзменении() Экспорт

	ТекущиеДанные = Элементы.ПравилаИспользования.ТекущиеДанные;
	
	ТекущиеДанные.ПроцентСкидкиНаценкиИзменен = (Не ТекущиеДанные.Актуальность) Или (ТекущиеДанные.ПроцентСкидкиНаценки И (Не ТекущиеДанные.ПроцентСкидкиНаценки = Объект.ПроцентСкидкиНаценки));
	
	// Изменение родителей.
	РодительДанные = ТекущиеДанные.ПолучитьРодителя();
	Пока (Не РодительДанные = Неопределено) Цикл
		ПодчиненныеЭлементыРодителя = РодительДанные.ПолучитьЭлементы(); 
		
		Итог = 0; Для Каждого ПодчиненныеДанные Из ПодчиненныеЭлементыРодителя Цикл Итог = Итог + ПодчиненныеДанные.Актуальность; КонецЦикла; 
		РодительДанные.Актуальность = Итог;
		
		Если РодительДанные.Актуальность Тогда
			РодительДанные.ПроцентСкидкиНаценкиИзменен = (РодительДанные.ПроцентСкидкиНаценки И (Не РодительДанные.ПроцентСкидкиНаценки = Объект.ПроцентСкидкиНаценки));
		Иначе
			РодительДанные.ПроцентСкидкиНаценкиИзменен = Истина;
		КонецЕсли; 
		
		РодительДанные = РодительДанные.ПолучитьРодителя();
	КонецЦикла;
	
	// Изменение подчиненных.
	МассивПодчиненных = Новый Массив; МассивПодчиненных.Добавить(ТекущиеДанные.ПолучитьЭлементы());

	Для Каждого РодительЭлементы Из МассивПодчиненных Цикл
		Для Каждого ПодчиненныеДанные Из РодительЭлементы Цикл
			ЗаполнитьЗначенияСвойств(ПодчиненныеДанные, ТекущиеДанные, "Актуальность,ПроцентСкидкиНаценки,ПроцентСкидкиНаценкиИзменен");
					
			РодительЭлементы = ПодчиненныеДанные.ПолучитьЭлементы(); 
			Если РодительЭлементы.Количество() Тогда
				МассивПодчиненных.Добавить(РодительЭлементы);
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // ПравилаИспользованияПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Данные.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииНаСервере(Объект);
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// Правила.
	Если ЗначениеЗаполнено(ПолучитьСвойство(Параметры, "ЗначениеКопирования")) Тогда
		ОбъектЗаполнения = Параметры.ЗначениеКопирования;
	Иначе
		ОбъектЗаполнения = ТекущийОбъект;
	КонецЕсли; 
	РегистрыСведений.СкидкиНаценкиНоменклатуры.ПолучитьСкидкиНаценкиНоменклатуры(ОбъектЗаполнения, ПравилаИспользования);
	
	// Настройка формы.
	УстановитьВидимостьНаСервере();
	УстановитьДоступностьНаСервере(); //Костенюк Александр 05.06.2013
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// Правила.
	РегистрыСведений.СкидкиНаценкиНоменклатуры.УстановитьСкидкиНаценкиНоменклатуры(ТекущийОбъект, ПравилаИспользования, Отказ);
	
КонецПроцедуры // ПриЗаписиНаСервере()

&НаКлиенте
//Костенюк Александр-Старт 21.09.2012
Процедура ЗначениеУсловияДополнительноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Условие = ПредопределенноеЗначение("Перечисление.УсловияСкидкиНаценки.ПоУсловиюВидаДисконтнойКарты") Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Объект.ЗначениеУсловия) Тогда
			СписокВыбора = ЗаполнитьСписокВыбораНаСервере(Объект.ЗначениеУсловия);
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//Костенюк Александр-Финиш 21.09.2012

&НаСервере
//Костенюк Александр-Старт 26.11.2012
Процедура ДоступностьВытесняющейСкидкиНаСервере() 
	Объект.ВытесняющаяСкидка 				= Справочники.ТипыСкидокНаценок.ДоступностьВытесняющейСкидки(Объект);
	Элементы.ВытесняющаяСкидка.Доступность 	= Справочники.ТипыСкидокНаценок.ДоступностьВытесняющейСкидки(Объект);
КонецПроцедуры
//Костенюк Александр-Финиш 26.11.2012

&НаСервере
//Костенюк Александр-Старт 26.11.2012
Функция ЗаполнитьСписокВыбораНаСервере(ЗначениеУсловия)
	СписокВыбора = Новый СписокЗначений;
	Выборка = Справочники.УсловияСкидок.Выбрать(, ЗначениеУсловия);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		СписокВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	Возврат СписокВыбора;
КонецФункции
//Костенюк Александр-Финиш 26.11.2012

&НаСервере
//Костенюк Александр-Старт 05.06.2013
Процедура УстановитьДоступностьНаСервере()
	
	Элементы.РасчетПериодаДействияПриДобавленииБлюда.Доступность = ЗначениеЗаполнено(Объект.ПериодДействия);
	
КонецПроцедуры
//Костенюк Александр-Финиш 05.06.2013

&НаКлиенте
//Костенюк Александр-Старт 05.06.2013
Процедура ПериодДействияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ПериодДействия) Тогда
		Объект.РасчетПериодаДействияПриДобавленииБлюда = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьНаСервере();
	
КонецПроцедуры
//Костенюк Александр-Финиш 05.06.2013
