
Функция ПолучитьНаименование()

	//Возврат НСтр("ru = 'Регистрационная № '; uk = 'Реєстраційна № '") + КодКарты;
	
	Возврат "№" + КодКарты; //Костенюк Александр 17.06.2014
		
КонецФункции // ПолучитьНаименование()


Процедура ОбработкаЗаполнения(Основание)
	
	// Контрагенты.
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Если Основание.ЭтоГруппа Тогда
			ВладелецКарты = Справочники.Контрагенты.ПустаяСсылка();
		Иначе
			ВладелецКарты = Основание.Ссылка;
		КонецЕсли;
		
	КонецЕсли;

	// Пользователи.
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Пользователи") Тогда
		Если Основание.ЭтоГруппа Тогда
			Возврат;
		КонецЕсли;
		
		Если Основание.ЭтоГруппа Тогда
			ВладелецКарты = Справочники.Пользователи.ПустаяСсылка();
		Иначе
			ВладелецКарты = Основание.Ссылка;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка.
	Если Не ЭтоГруппа Тогда
		
		Если ПустаяСтрока(Наименование) Тогда
			Наименование = ПолучитьНаименование();
		КонецЕсли; 
		
		Если Не __УправлениеДаннымиСервер.ПроверитьУникальностьРеквизитаСправочника(ЭтотОбъект, "КодКарты") Тогда
			__ОбщегоНазначенияСервер.СообщитьОбНеуникальностиРеквизитаСправочника(ЭтотОбъект, "КодКарты", , Отказ);
		КонецЕсли; 
		
		Если (ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая) Тогда
			__ОбщегоНазначенияСервер.ИзменитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты, "ТипШтрихкода");
		КонецЕсли; 
		Если ЗначениеЗаполнено(ВладелецКарты) Тогда
			__ОбщегоНазначенияСервер.ИзменитьПроверяемыеРеквизиты(ПроверяемыеРеквизиты, "ГруппаПользователей");
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ПриКопировании(ОбъектКопирования)
	
	Если Не ЭтоГруппа Тогда
		КодКарты = Неопределено;
		ПоследнееПоздравление = Неопределено;
		ДатаНачалаПериода = Неопределено;
		ДатаОкончанияПериода = Неопределено;
		
		//Костенюк Александр-Старт 18.10.2012
		ОчиститьКонтактнуюИнформацию();
		//Костенюк Александр-Финиш 18.10.2012
		
		Если ПустаяСтрока(Наименование) Тогда
			Наименование = ПолучитьНаименование();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры // ПриКопировании()

Процедура ПередЗаписью(Отказ)
	    
	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не ЭтоГруппа Тогда
		
		// Наименование.
		Если ПустаяСтрока(Наименование) Тогда
			Наименование = ПолучитьНаименование();
		КонецЕсли; 
		
		// Зависимые.
		ВидДисконтнойКарты = Неопределено;
		ПроцентУточняемый = Неопределено;
		ДатаРождения = Неопределено;
		ПоследнееПоздравление = Неопределено;
		Комментарий = Неопределено;
		Если ПометкаУдаления Тогда
			ВладелецКарты = Справочники.Пользователи.ПустаяСсылка();
			ГруппаПользователей = Неопределено;
		КонецЕсли; 
		
		// Период.
		ДатаНачалаПериода = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ДатаНачалаПериода);
		Если ПометкаУдаления Тогда
			ДатаОкончанияПериода = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ДатаОкончанияПериода);
		Иначе
			ДатаОкончанияПериода = Неопределено;
		КонецЕсли; 
	
	КонецЕсли; 
		
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	    
	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	// Штрих-код.
	Если (ВидКарты = Перечисления.ВидыИнформационныхКарт.Штриховая) Тогда
		РегистрыСведений.Штрихкоды.УстановитьШтрихКод(ЭтотОбъект, ТипШтрихкода, КодКарты, Отказ);
	Иначе
		РегистрыСведений.Штрихкоды.УстановитьШтрихКод(ЭтотОбъект, Неопределено, Неопределено, Отказ);
	КонецЕсли;
	
	// Регистрационные карты связываем с регистром
	Если ПометкаУдаления Тогда
		РегистрыСведений.РегистрационныеКарты.УдалитьЗапись(Отказ, Ссылка);
	Иначе
		РегистрыСведений.РегистрационныеКарты.ДобавитьЗапись(Отказ, Ссылка);
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

//Костенюк Александр-Старт 18.10.2012
// Процедура заполняет реквизиты, относящиеся к контактной информации
//
// Параметры:
// ВладелецКарты - Тип: СправочникСсылка.Контрагенты. Владелец карты
//
Процедура ЗаполнитьКонтактнуюИнформацию(ВладелецКарты) Экспорт
	
	ТабКонтактнаяИнформация = УправлениеКонтактнойИнформацией.ПрочитатьНаборЗаписейКонтактнойИнформации(ВладелецКарты);
	
	ТелефонКонтрагента 					= Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
	АдресЭлектроннойПочтыКонтрагента 	= Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагента;
	ФакттическийАдресКонтрагента 		= Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
	
	Для Каждого СтрокаТаблицы Из ТабКонтактнаяИнформация Цикл
		
		Если СтрокаТаблицы.Вид = ТелефонКонтрагента Тогда
			Телефон = СтрокаТаблицы.Представление;
		ИначеЕсли СтрокаТаблицы.Вид = АдресЭлектроннойПочтыКонтрагента Тогда
			EMail = СтрокаТаблицы.Представление;
		ИначеЕсли СтрокаТаблицы.Вид = ФакттическийАдресКонтрагента Тогда
			Адресс = СтрокаТаблицы.Представление;
		Иначе
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
//Костенюк Александр-Финиш 18.10.2012

//Костенюк Александр-Старт 18.10.2012
// Процедура очищает реквизиты, относящиеся к контактной информации
//
// Параметры:
// Нет.
//
Процедура ОчиститьКонтактнуюИнформацию() Экспорт
	
	Телефон = "";
	Адресс 	= "";
	EMail 	= "";
	
КонецПроцедуры
//Костенюк Александр-Финиш 18.10.2012



// Рефакторинг:
//	1. Удалить "ДатаРегистрации";
//	2. Контактная информация.