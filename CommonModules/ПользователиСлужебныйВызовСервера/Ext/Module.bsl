////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Только для внутреннего использования.
Функция ПроверитьВозможностьЗапускаСПустымСпискомПользователейИБ(ВернутьТекстОшибки = Ложь) Экспорт
	
	Возврат ПользователиСлужебный.ПроверитьВозможностьЗапускаСПустымСпискомПользователейИБ(
		ВернутьТекстОшибки);
	
КонецФункции

// Только для внутреннего использования.
Процедура СоздатьПервогоАдминистратораСистемы() Экспорт
	
	ТекстОшибки = ПользователиСлужебный.ПроверитьВозможностьЗапускаСПустымСпискомПользователейИБ(Истина);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		УстановитьПривилегированныйРежим(Истина);
		
		Администратор = ПользователиИнформационнойБазы.СоздатьПользователя();
		Администратор.Имя = "Администратор";
		Администратор.ПолноеИмя = Администратор.Имя;
		Администратор.АутентификацияСтандартная = Истина;
		Администратор.ПоказыватьВСпискеВыбора = Истина;
		Администратор.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
		Администратор.Роли.Добавить(Метаданные.Роли.НастройкаСинхронизацииДанных);
		Администратор.Роли.Добавить(Метаданные.Роли.ВыполнениеСинхронизацииДанных);
		Администратор.ОсновнойИнтерфейс = Метаданные.Интерфейсы.Основной;
		Администратор.РежимЗапуска = РежимЗапускаКлиентскогоПриложения.Авто;
		Администратор.Записать();
		
		Front = ПользователиИнформационнойБазы.СоздатьПользователя();
		Front.Имя = "FrontOffice";
		Front.ПолноеИмя = Front.Имя;
		Front.АутентификацияСтандартная = Истина;
		Front.ПоказыватьВСпискеВыбора = Истина;
		Front.Роли.Добавить(Метаданные.Роли.FrontOffice);
		Front.ОсновнойИнтерфейс = Метаданные.Интерфейсы.FrontOffice;
		Front.РежимЗапуска = РежимЗапускаКлиентскогоПриложения.Авто;
		Front.Записать();
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Только для внутреннего использования.
Процедура ПолучитьСлужебногоПользователяДляПодключенияКВебСервису() Экспорт
	
	Если ПользователиИнформационнойБазы.НайтиПоИмени("ws") = Неопределено Тогда
		УстановитьПривилегированныйРежим(Истина);
		
		Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
		Пользователь.Имя = "ws";
		Пользователь.ПолноеИмя = "ws";
		Пользователь.АутентификацияСтандартная = Истина;
		Пользователь.ПоказыватьВСпискеВыбора   = Ложь;
		Пользователь.Пароль = "ws";
		Пользователь.Роли.Добавить(Метаданные.Роли.ВыполнениеСинхронизацииДанных);
		Пользователь.Роли.Добавить(Метаданные.Роли.НастройкаСинхронизацииДанных);
		Пользователь.Записать();
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры
