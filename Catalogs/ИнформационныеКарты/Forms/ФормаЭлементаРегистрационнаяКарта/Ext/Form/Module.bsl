
&НаКлиенте
Функция ПолучитьНаименование()

	Если (Объект.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыИнформационныхКарт.Регистрационная")) Тогда
		Возврат НСтр("ru = 'Регистрационная № '; uk = 'Реєстраційна № '") + Объект.КодКарты;
	КонецЕсли; 
	Если (Объект.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыИнформационныхКарт.Дисконтная")) Тогда
		Если ЗначениеЗаполнено(Объект.ВидДисконтнойКарты) И (Не ПустаяСтрока(Объект.КодКарты)) Тогда
			Возврат Шаблон("[ВидДисконтнойКарты] № [КодКарты]", 
				Новый Структура("ВидДисконтнойКарты,КодКарты", Объект.ВидДисконтнойКарты, Объект.КодКарты));
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат "№ " + Объект.КодКарты; 
		
КонецФункции // ПолучитьНаименование()

&НаСервере
Функция ПолучитьНаименованиеНаСервере()

	Если (Объект.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыИнформационныхКарт.Регистрационная")) Тогда
		Возврат НСтр("ru = 'Регистрационная № '; uk = 'Реєстраційна № '") + Объект.КодКарты;
	КонецЕсли; 
	Если (Объект.ТипКарты = ПредопределенноеЗначение("Перечисление.ТипыИнформационныхКарт.Дисконтная")) Тогда
		Если ЗначениеЗаполнено(Объект.ВидДисконтнойКарты) И (Не ПустаяСтрока(Объект.КодКарты)) Тогда
			Возврат Шаблон("[ВидДисконтнойКарты] № [КодКарты]", 
				Новый Структура("ВидДисконтнойКарты,КодКарты", Объект.ВидДисконтнойКарты, Объект.КодКарты));
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат "№ " + Объект.КодКарты; 
		
КонецФункции // ПолучитьНаименованиеНаСервере()


&НаКлиенте
Процедура ВидКартыПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.ВидКарты) Тогда
		Объект.ВидКарты = ПредопределенноеЗначение("Перечисление.ВидыИнформационныхКарт.Магнитная");
	КонецЕсли; 
	
	Если (Объект.ВидКарты = ПредопределенноеЗначение("Перечисление.ВидыИнформационныхКарт.Штриховая")) Тогда
		Элементы.ГруппаГруппаКодКартыВидКартыСтраници.ТекущаяСтраница = Элементы.ГруппаКодКартыШтриховая;
	Иначе
		Элементы.ГруппаГруппаКодКартыВидКартыСтраници.ТекущаяСтраница = Элементы.ГруппаКодКартыМагнитная;
	КонецЕсли; 
	
КонецПроцедуры // ВидКартыПриИзменении()

&НаКлиенте
Процедура ТипШтрихкодаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.ТипШтрихкода) Тогда
		Объект.ТипШтрихкода = ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыШтрихкодов.EAN13");
	КонецЕсли; 
	
КонецПроцедуры // ТипШтрихкодаПриИзменении()

&НаКлиенте
Процедура ШтрихкодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ШтрихкодНачалоВыбораСервер();
	
	КодКартыПриИзменении(Элемент);
	
КонецПроцедуры // ШтрихкодНачалоВыбора()

&НаСервере
Процедура ШтрихкодНачалоВыбораСервер()
	
	Объект.КодКарты = РегистрыСведений.Штрихкоды.СформироватьШтрихКод(Неопределено, Объект.ТипШтрихкода);
	
КонецПроцедуры // ШтрихкодНачалоВыбораСервер()

&НаКлиенте
Процедура КодКартыПриИзменении(Элемент)
	
	// Автоматическое формирование наименования.
	__РаботаСДиалогамиКлиентСервер.ФормаНаименованиеАвтоматическоеФормированиеСформировать(ФормироватьНаименованиеАвтоматически, Объект.Наименование, ПолучитьНаименование(), Элементы.Наименование);
	
КонецПроцедуры // КодКартыПриИзменении()

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	// Автоматическое формирование наименования.
	__РаботаСДиалогамиКлиентСервер.ФормаНаименованиеАвтоматическоеФормированиеУстановитьПризнак(ФормироватьНаименованиеАвтоматически, Объект.Наименование, ПолучитьНаименование(), Элементы.Наименование);
	
КонецПроцедуры // НаименованиеПриИзменении()

&НаКлиенте
Процедура ВладелецКартыПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.ВладелецКарты) Тогда
		Объект.ВладелецКарты = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Объект.ВладелецКарты, ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));
	КонецЕсли;
	
	// Настройка формы.	
	ГруппаПользователейПриИзменении(Неопределено);
	
КонецПроцедуры // ВладелецКартыПриИзменении()

&НаКлиенте
Процедура ГруппаПользователейПриИзменении(Элемент)
	
	// Настройка формы.	
	Элементы.ГруппаПользователей.ОтметкаНезаполненного = ЗначениеЗаполнено(Объект.ВладелецКарты) И (Не ЗначениеЗаполнено(Объект.ГруппаПользователей));
	
КонецПроцедуры // ГруппаПользователейПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ВладелецаКарты.
	ТипВладелецаКарты = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
	
	// Данные.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииНаСервере(Объект);	
	КонецЕсли;
	
	// Отказ.
	Отказ = (Не Объект.ТипКарты = Перечисления.ТипыИнформационныхКарт.Регистрационная);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройка формы.	
	ВидКартыПриИзменении(Неопределено);
	ВладелецКартыПриИзменении(Неопределено);

КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ТипШтрихкода) Тогда
		Объект.ТипШтрихкода = ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыШтрихкодов.EAN13");
	КонецЕсли; 
	
	// Автоматическое формирование наименования.
	__РаботаСДиалогамиКлиентСервер.ФормаНаименованиеАвтоматическоеФормированиеУстановитьПризнак(ФормироватьНаименованиеАвтоматически, Объект.Наименование, ПолучитьНаименованиеНаСервере(), Элементы.Наименование);
	
КонецПроцедуры // ПриЧтенииНаСервере()
