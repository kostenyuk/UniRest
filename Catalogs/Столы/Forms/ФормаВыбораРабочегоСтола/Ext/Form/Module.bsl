
&НаКлиенте
Процедура Выбрать(Команда)
	
	Если МножественныйВыбор Тогда
		ОповеститьОВыборе(ВыбранныеЗначения.ВыгрузитьЗначения());
	Иначе

		ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;

		Если (Не ТекущиеДанные = Неопределено) Тогда
			Если ВыборГрупп Или (Не ТекущиеДанные.ЭтоГруппа) Тогда
				ОповеститьОВыборе(ТекущиеДанные.Ссылка);
			Иначе
				ОповеститьОВыборе(ТекущаяСтрока);
			КонецЕсли;
		Иначе
			ОповеститьОВыборе(Неопределено);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // Выбрать()


&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка Тогда
		ВыбранныеЗначения.Добавить(ТекущиеДанные.Ссылка);
	Иначе
		ВыбранныеЗначения.Удалить(ВыбранныеЗначения.НайтиПоЗначению(ТекущиеДанные.Ссылка));
	КонецЕсли;
	
КонецПроцедуры // ПометкаПриИзменении()

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если МножественныйВыбор Тогда
		СтандартнаяОбработка = Ложь;
	Иначе
		Выбрать(Неопределено);
	КонецЕсли;
	
КонецПроцедуры // ДеревоВыбор()

&НаКлиенте
Процедура МножественныйВыборПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если МножественныйВыбор Тогда
		Если (Не ТекущиеДанные = Неопределено) И (Не ТекущиеДанные.Пометка) И (ВыборГрупп Или (Не ТекущиеДанные.ЭтоГруппа)) Тогда
			ВыбранныеЗначения.Добавить(ТекущиеДанные.Ссылка);
			ТекущиеДанные.Пометка = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // МножественныйВыборПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Параметры.
	ТекущаяСтрока = Параметры.ТекущаяСтрока;
	МножественныйВыбор = (Не Параметры.ВыбранныеЗначения = Неопределено);
	ВыборГрупп = (Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы) Или (Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	ВыбранныеЗначения.ЗагрузитьЗначения(ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Параметры.ВыбранныеЗначения, Новый Массив));
	
	// Данные.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Справочник.Ссылка КАК Ссылка,
	                      |	Справочник.Код,
	                      |	Справочник.Наименование,
	                      |	Справочник.ПометкаУдаления,
	                      |	Справочник.ЭтоГруппа,
	                      |	ВЫБОР
	                      |		КОГДА Справочник.Ссылка В (&ВыбранныеЗначения)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК Пометка,
	                      |	ВЫБОР
	                      |		КОГДА Справочник.ЭтоГруппа
	                      |			ТОГДА 0
	                      |		ИНАЧЕ 2
	                      |	КОНЕЦ + ВЫБОР
	                      |		КОГДА Справочник.ПометкаУдаления
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК ИндексКартинки
	                      |ИЗ
	                      |	Справочник.Столы КАК Справочник
	                      |ГДЕ
	                      |	Справочник.Актуальность
	                      |	И НЕ Справочник.ПометкаУдаления
	                      |	И Справочник.ЭтоГруппа = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Справочник.Номер ИЕРАРХИЯ
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если (Параметры.ВыборГруппИЭлементов = Неопределено) Или (Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы) Или (Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.ЭтоГруппа = ИСТИНА", "ИСТИНА");
	КонецЕсли;
	Запрос.УстановитьПараметр("ВыбранныеЗначения", ВыбранныеЗначения);

	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), "Дерево");
	
	// Настройка формы.
	Если ВыбранныеЗначения.Количество() Тогда
		ОбщегоНазначенияКлиентСервер.ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля("Ссылка", Элементы.Дерево.ТекущаяСтрока, Дерево.ПолучитьЭлементы(), ВыбранныеЗначения[0].Значение);
	Иначе
		ОбщегоНазначенияКлиентСервер.ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля("Ссылка", Элементы.Дерево.ТекущаяСтрока, Дерево.ПолучитьЭлементы(), ТекущаяСтрока);
	КонецЕсли;
	Элементы.МножественныйВыбор.Видимость = Параметры.МножественныйВыбор;
	
КонецПроцедуры // ПриСозданииНаСервере()

