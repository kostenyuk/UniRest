//****************************************************************************

Процедура СформироватьФайл(Кодировка) Экспорт
	Отказ = Ложь;
	ТаблицаДанных = ПолучитьДанныеДляФормированияФайла(Отказ);
	
	#Если не НаСервере Тогда
		Ответ = Вопрос("Подтвердите формирование файла!", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет ТОгда
			Возврат;
		КонецЕсли;   	
		
		Если Отказ Тогда
			Ответ = Вопрос("Обнаружены незаполненные данные. Прервать формирование файла?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
			Если Ответ = КодВозвратаДиалога.Да Тогда		
				Возврат;
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
	Если Отказ Тогда
	 	Возврат;
	КонецЕсли;
	
	Попытка	
		Файл1 = Новый XBase;
		Файл1.Поля.Добавить("UNI" , "N", 11, 0);    
		//Файл1.Поля.Добавить("DATE" , "D", 8 );   
		//Костенюк Александр-Старт 16.07.2012
		Файл1.Поля.Добавить("DATE" , "S", 10);
		//Костенюк Александр-Финиш 16.07.2012
		Файл1.Поля.Добавить("CNUM" ,"N",  11, 0);
		Файл1.Поля.Добавить("CARDCODE", "N",  20, 4);
		//Файл1.Поля.Добавить("REST", "N", 11, 0);
		//Костенюк Александр-Старт 12.07.2012
		Файл1.Поля.Добавить("REST", "N", 10, 0);
		//Костенюк Александр-Финиш 12.07.2012
		Файл1.Поля.Добавить("SUM"  ,  "N",  12 , 2);
		Файл1.Поля.Добавить("SUM1",  "N",  12, 2);	
		Файл1.СоздатьФайл(ПолноеИмяФайла1);	
		Файл1.АвтоСохранение = Истина;		
		Файл1.Кодировка =  Кодировка;
		
		Файл2 = Новый XBase;
		//Файл2.Поля.Добавить("DATE" , "D", 8);    
		//Костенюк Александр-Старт 16.07.2012
		Файл2.Поля.Добавить("DATE" , "S", 10);
		//Костенюк Александр-Финиш 16.07.2012
		Файл2.Поля.Добавить("CNUM" , "N", 11 , 0);   
		Файл2.Поля.Добавить("GNUM" ,"N",  6, 0);
		Файл2.Поля.Добавить("GNAME", "S",  50, 0);
		Файл2.Поля.Добавить("QUANT", "N", 10 , 1);
		Файл2.Поля.Добавить("RNUM" , "N",  10, 0);
		//Файл2.Поля.Добавить("PRICE", "N",  10, 0);
		//Костенюк Александр-Старт 08.06.2012
		Файл2.Поля.Добавить("PRICE", "N",  10, 2);
		//Костенюк Александр-Финиш 08.06.2012
		Файл2.Поля.Добавить("SUM"  ,  "N",  10, 2);
		Файл2.Поля.Добавить("SUM1",  "N",  10, 2);
		Файл2.Поля.Добавить("UNIT" , "S",  20, 0);	
		Файл2.СоздатьФайл(ПолноеИмяФайла2);	
		Файл2.АвтоСохранение = Истина;		
		Файл2.Кодировка =  Кодировка;
		
		Для каждого Стр Из ТаблицаДанных Цикл
			Файл1.Добавить();
			Файл1.UNI = Число(Стр.ИнформационнаяКарта.Код);
			//Файл1.DATE = Формат(Стр.ИнформационнаяКарта.ДатаРегистрации, "ДФ=dd.MM.yyyy");
			//Костенюк Александр-Старт 16.07.2012
			Дата = СтрЗаменить(Формат(Стр.Период, "ДФ=yyyy-MM-dd"), "-", "");
			Файл1.DATE = Дата;
			//Костенюк Александр-Финиш 16.07.2012
			Файл1.CNUM = Число(Формат(Стр.Регистратор.Номер, "ЧЦ=11; ЧДЦ=0"));
			Файл1.CARDCODE = Число(Формат(Стр.ИнформационнаяКарта.КодКарты, "ЧЦ=20; ЧДЦ=4; ЧГ="));
			//Файл1.REST = Число(Формат(Стр.Регистратор.Ресторан.Код, "ЧЦ=11; ЧДЦ=0; ЧГ="));                 
			//Костенюк Александр-Старт 12.07.2012
			Файл1.REST = Число(Формат(Константы.КодРесторана.Получить(), "ЧЦ=10; ЧДЦ=0; ЧГ="));
			//Костенюк Александр-Финиш 12.07.2012
			//Файл1.SUM = Число(Формат(Стр.Регистратор.СуммаДокументаБезСкидок, "ЧЦ=12; ЧДЦ=2; ЧГ="));
			//Файл1.SUM1 = Число(Формат(Стр.Регистратор.СуммаДокумента, "ЧЦ=12; ЧДЦ=2; ЧГ="));
			//Костенюк Александр-Старт 08.06.2012
			Файл1.SUM = ?(Стр.Регистратор.СуммаДокументаБезСкидок = 0, Стр.Регистратор.СуммаДокументаБезСкидок, Число(Формат(Стр.Регистратор.СуммаДокументаБезСкидок, "ЧЦ=12; ЧДЦ=2; ЧГ=")));
			Файл1.SUM1 = ?(Стр.Регистратор.СуммаДокумента = 0, Стр.Регистратор.СуммаДокумента, Число(Формат(Стр.Регистратор.СуммаДокумента, "ЧЦ=12; ЧДЦ=2; ЧГ=")));
			//Костенюк Александр-Финиш 08.06.2012
			Файл2.Добавить();
			//Файл2.DATE = Формат(Стр.ИнформационнаяКарта.ДатаРегистрации, "ДФ=dd.MM.yyyy");
			//Костенюк Александр-Старт 16.07.2012
			Дата = СтрЗаменить(Формат(Стр.Период, "ДФ=yyyy-MM-dd"), "-", ""); 
			Файл2.DATE = Дата;
			//Костенюк Александр-Финиш 16.07.2012
			Файл2.CNUM = Формат(Стр.Регистратор.Номер, "ЧЦ=11; ЧДЦ=0; ЧГ=");
			Для каждого СтрТабличнойЧасти Из Стр.Регистратор.Товары  Цикл
				Файл2.GNUM = Число(Формат(СтрТабличнойЧасти.Номенклатура.Код, "ЧЦ=6; ЧДЦ=0; ЧГ="));
				Файл2.GNAME = СокрЛП(СтрТабличнойЧасти.Номенклатура.Наименование);
				//Файл2.QUANT = Число(Формат(СтрТабличнойЧасти.Количество,  "ЧЦ=10; ЧДЦ=1; ЧГ="));
				//Файл2.PRICE = Число(Формат(СтрТабличнойЧасти.Цена,  "ЧЦ=10; ЧДЦ=0; ЧГ=" ));
				//Файл2.SUM = Число(Формат(СтрТабличнойЧасти.СуммаБезСкидок,  "ЧЦ=10; ЧДЦ=2; ЧГ=" ));
				//Файл2.SUM1 = Число(Формат(СтрТабличнойЧасти.Сумма,  "ЧЦ=10; ЧДЦ=2; ЧГ=" ));
				//Костенюк Александр-Старт 08.06.2012
				Файл2.QUANT = ?(СтрТабличнойЧасти.Количество = 0, СтрТабличнойЧасти.Количество, Число(Формат(СтрТабличнойЧасти.Количество,  "ЧЦ=10; ЧДЦ=1; ЧГ=")));
				Файл2.PRICE = ?(СтрТабличнойЧасти.Цена = 0, СтрТабличнойЧасти.Цена, Число(Формат(СтрТабличнойЧасти.Цена,  "ЧЦ=10; ЧДЦ=2; ЧГ=" )));
				Файл2.SUM = ?(СтрТабличнойЧасти.СуммаБезСкидок = 0, СтрТабличнойЧасти.СуммаБезСкидок, Число(Формат(СтрТабличнойЧасти.СуммаБезСкидок,  "ЧЦ=10; ЧДЦ=2; ЧГ=" )));
				Файл2.SUM1 = ?(СтрТабличнойЧасти.Сумма = 0, СтрТабличнойЧасти.Сумма, Число(Формат(СтрТабличнойЧасти.Сумма,  "ЧЦ=10; ЧДЦ=2; ЧГ=" )));
				//Костенюк Александр-Финиш 08.06.2012
				Файл2.UNIT = СокрЛП(СтрТабличнойЧасти.ЕдиницаИзмерения);
			КонецЦикла; 
			//Файл2.RNUM =  Число(Формат(Стр.Регистратор.Ресторан.Код,  "ЧЦ=10; ЧДЦ=0; ЧГ=")); 
			//Костенюк Александр-Старт 16.07.2012
			Файл2.RNUM = Число(Формат(Константы.КодРесторана.Получить(), "ЧЦ=10; ЧДЦ=0; ЧГ="));
			//Костенюк Александр-Финиш 16.07.2012
			УстановитьОтметкуВыгруженоВРегистре(Стр.Регистратор.ссылка);
		КонецЦикла;	
		
		Файл1.Записать();
		Файл1.ЗакрытьФайл();	
		
		Файл2.Записать();
		Файл2.ЗакрытьФайл();
		
	Исключение
		  Сообщить(НСтр("ru = '"+ОписаниеОшибки()+"'"), СтатусСообщения.Внимание);
	КонецПопытки;
	
	Сообщить("Данные выгружены в файл " + ПолноеИмяФайла1);			
	Сообщить("Данные выгружены в файл " + ПолноеИмяФайла2);
	
КонецПроцедуры

Функция ПолучитьДанныеДляФормированияФайла(Отказ) Экспорт
	СхемаСКД = ЭтотОбъект.ПолучитьМакет("Макет");
	ТаблицаВозврата = Новый ТаблицаЗначений;
	настройки = СхемаСКД.НастройкиПоУмолчанию;
	//РаботаСКДДСписокСервер.УстановитьЗначениеПараметраНастроек(настройки,"ДатаНачало", ДатаНачала);
	//РаботаСКДДСписокСервер.УстановитьЗначениеПараметраНастроек(настройки,"ДатаКонец", ДатаКонец);
	
	РаботаСКДДСписокСервер.УстановитьЗначениеПараметраНастроек(настройки,"ДатаНач", ДатаНачала);
	РаботаСКДДСписокСервер.УстановитьЗначениеПараметраНастроек(настройки,"ДатаКон", ДатаКонец);

	РаботаСКДДСписокСервер.ВозвратРезультатаКомпановкиКоллекцииЗначений(ТаблицаВозврата, СхемаСКД, настройки);	
	//Отказ = (ТаблицаВозврата.Количество() = 0) Или ТаблицаВозврата = Новый ТаблицаЗначений;;
	Возврат ТаблицаВозврата;	
КонецФункции // ПолучитьДанныеДляФормированияФайла()

Функция УстановитьФильтр() Экспорт
	Возврат "Таблица dbf (*.dbf)|*.dbf";
КонецФункции // ()

Функция  ЗаполнитьКодировку()  Экспорт
	СписокВозврата = Новый Массив;
	СписокВозврата.Добавить("ANSI");
	СписокВозврата.Добавить("OEM");	
	Возврат СписокВозврата;
КонецФункции // ЗаполнитьКодировку()

Функция DBFвТаблицу(ПутьКDBF, Кодировка= "ANSI") Экспорт  
	ТаблицаДанных = Новый ТаблицаЗначений();
	ФайлDBF=Новый XBase;
	ФайлDBF.ОткрытьФайл(ПутьКDBF,,Истина);
	Если Кодировка = "ANSI" Тогда
		ФайлDBF.Кодировка = КодировкаXBase.ANSI;
	Иначе
		ФайлDBF.Кодировка = КодировкаXBase.OEM;
	КонецЕсли;
	Для Каждого ПолеDBF Из ФайлDBF.Поля Цикл
		ТаблицаДанных.Колонки.Добавить(ПолеDBF.Имя,ИсправитьТип(ПолеDBF.Тип,ПолеDBF.Длина,ПолеDBF.Точность),ПолеDBF.Имя,ПолеDBF.Длина+ПолеDBF.Точность);
	КонецЦикла;
	ФайлDBF.Первая();
	Пока НЕ ФайлDBF.ВКонце() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДанных.Добавить(),ФайлDBF);
		ФайлDBF.Следующая();
	КонецЦикла;
	ФайлDBF.ЗакрытьФайл();
	Возврат ТаблицаДанных;
КонецФункции

Функция ИсправитьТип(ТипСимвол,Длина,Точность);
	Если ТипСимвол="S" тогда 
		КС = Новый КвалификаторыСтроки(Длина);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
		Возврат  ОписаниеТиповС
	ИначеЕсли ТипСимвол="N" тогда
		КЧ = Новый КвалификаторыЧисла(Длина,Точность);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , КЧ);
		Возврат  ОписаниеТиповЧ
	ИначеЕсли ТипСимвол="D" тогда 
		КД = Новый КвалификаторыДаты(ЧастиДаты.Дата);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Дата"));
		ОписаниеТиповД = Новый ОписаниеТипов(Массив, , КД);
		Возврат  ОписаниеТиповД
		
	КонецЕсли;
	
КонецФункции

Процедура УстановитьОтметкуВыгруженоВРегистре(РегистраторСсылка)
	
	НаборЗаписей = РегистрыСведений.РегистрРегистрацииАвтоматическихСкидок.СоздатьНаборЗаписей();
	// структура отбора записей регистра  
	НаборЗаписей.Отбор.регистратор.Установить(РегистраторСсылка);	
	НаборЗаписей.Прочитать();	
	
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей[0].Выгружалась = Истина;
		Попытка
			НаборЗаписей.Записать();
		Исключение
			//ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, Заголовок, , НаборЗаписей, ЭтотОбъект);
		КонецПопытки;		
	КонецЕсли;				
	
КонецПроцедуры

//****************************************************************************   