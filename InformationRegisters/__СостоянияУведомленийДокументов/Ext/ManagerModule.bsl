
Процедура ПодтвердитьУведомление(Документ) Экспорт
	
	Запись = РегистрыСведений.__СостоянияУведомленийДокументов.СоздатьМенеджерЗаписи();
	Запись.Документ = Документ;
	Запись.Прочитать();
	
	Если Запись.Выбран() И (Не Запись.Прочитано) Тогда
		Запись.Прочитано = Истина;
		Попытка
			Запись.Записать();
		Исключение
			// TODO
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры // ПодтвердитьУведомление()


Функция ПолучитьУведомления() Экспорт
	
	ТаблицаРезультата = Новый ТаблицаЗначений;
	ТаблицаРезультата.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	ТаблицаРезультата.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	ТаблицаРезультата.Колонки.Добавить("Событие", Новый ОписаниеТипов("Строка"));
	ТаблицаРезультата.Колонки.Добавить("Дата", Новый ОписаниеТипов("Строка"));
	ТаблицаРезультата.Колонки.Добавить("Выполненн", Новый ОписаниеТипов("Булево,Число"));
	ТаблицаРезультата.Колонки.Добавить("Распечатан", Новый ОписаниеТипов("Булево,Число"));
	ТаблицаРезультата.Колонки.Добавить("Проведен", Новый ОписаниеТипов("Булево,Число"));
	
	// Получение данных.
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	__СостоянияУведомленийДокументов.Выполненн,
	                      |	__СостоянияУведомленийДокументов.Распечатан,
	                      |	__СостоянияУведомленийДокументов.Проведен,
	                      |	__СостоянияУведомленийДокументов.Получено,
	                      |	__СостоянияУведомленийДокументов.ДатаНачалаПериода КАК ДатаНачалаПериода,
	                      |	__СостоянияУведомленийДокументов.Документ КАК Ссылка,
	                      |	__СостоянияУведомленийДокументов.Документ.Модуль КАК Модуль,
	                      |	__СостоянияУведомленийДокументов.Документ.Номер КАК Номер,
	                      |	__СостоянияУведомленийДокументов.Документ.Дата КАК Дата,
	                      |	__СостоянияУведомленийДокументов.Документ.ПолныйНомерСтола КАК ПолныйНомерСтола
	                      |ИЗ
	                      |	РегистрСведений.__СостоянияУведомленийДокументов КАК __СостоянияУведомленийДокументов
	                      |ГДЕ
	                      |	(НЕ __СостоянияУведомленийДокументов.Прочитано)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаНачалаПериода");
	РузультатЗапроса = Запрос.Выполнить();
	
	Если Не РузультатЗапроса.Пустой() Тогда
		
		// Запись данных.
		НачатьТранзакцию();
		
		Запись = РегистрыСведений.__СостоянияУведомленийДокументов.СоздатьМенеджерЗаписи();
		
		Выборка = РузультатЗапроса.Выбрать(); Пока Выборка.Следующий() Цикл
			
			// Установка признака получения.
			Если Не Выборка.Получено Тогда
				Запись.Документ = Выборка.Ссылка;
				Запись.Прочитать();
				Если Запись.Выбран() Тогда
					Попытка
						Запись.Получено = Истина;
						Запись.Записать();
					Исключение
						ОтменитьТранзакцию(); ВызватьИсключение;
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
			// Выборка данных.
			СтрокаТаблицы = ТаблицаРезультата.Добавить();
			СтрокаТаблицы.Документ = Выборка.Ссылка;
			СтрокаТаблицы.Представление = __ПередачаДанныхСервер.ПолучитьПредставлениеДокумента(Выборка);
			СтрокаТаблицы.Выполненн = Выборка.Выполненн;
			СтрокаТаблицы.Распечатан = Выборка.Распечатан;
			СтрокаТаблицы.Проведен = Выборка.Проведен;
			СтрокаТаблицы.Дата = __ПередачаДанныхСервер.ПолучитьПредставлениеДаты(Выборка.ДатаНачалаПериода);
			Если (Не Выборка.Выполненн = Неопределено) Тогда
				Если Выборка.Выполненн Тогда
					Текст = "Выполнен";
				Иначе
					Текст = "Выполннение отменено";
				КонецЕсли;
				СтрокаТаблицы.Событие = Текст;
			КонецЕсли;
			Если (Не Выборка.Распечатан = Неопределено) Тогда
				Если Выборка.Распечатан Тогда
					Текст = "Распечатан";
				Иначе
					Текст = "Печать отменена";
				КонецЕсли;
				Если ПустаяСтрока(СтрокаТаблицы.Событие) Тогда
					СтрокаТаблицы.Событие = Текст;
				Иначе
					СтрокаТаблицы.Событие = СтрокаТаблицы.Событие + ", " + Текст;
				КонецЕсли;
			КонецЕсли;
			Если (Не Выборка.Проведен = Неопределено) Тогда
				Если Выборка.Проведен Тогда
					Текст = "Оплачен";
				Иначе
					Текст = "Оплата отменена";
				КонецЕсли;
				Если ПустаяСтрока(СтрокаТаблицы.Событие) Тогда
					СтрокаТаблицы.Событие = Текст;
				Иначе
					СтрокаТаблицы.Событие = СтрокаТаблицы.Событие + ", " + Текст;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;
	
	// Результат.
	Возврат ТаблицаРезультата;
	
КонецФункции // ПолучитьУведомления()

Процедура УдалитьУведомления() Экспорт
	
КонецПроцедуры // УдалитьУведомления()


Процедура ПередЗаписьюДокумента(Документ, Отказ, РежимЗаписи) Экспорт
	
Если Не Документ.ЭтоНовый() Тогда
		
	Если Не Отказ Тогда
		
		// Оригинал.
		Если Не Документ.ЭтоНовый() Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	РеализацияТоваровУслуг.Проведен,
			                      |	РеализацияТоваровУслуг.Распечатан,
			                      |	РеализацияТоваровУслуг.Товары.(
			                      |		Идентификатор,
			                      |		Выполненн
			                      |	)
			                      |ИЗ
			                      |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			                      |ГДЕ
			                      |	РеализацияТоваровУслуг.Ссылка = &Ссылка");
			Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
			Оригинал = Запрос.Выполнить().Выгрузить(); Для Каждого Оригинал Из Оригинал Цикл Прервать; КонецЦикла;
		Иначе
			Оригинал = Новый Структура("Проведен,Распечатан,Товары", Ложь, Ложь, Новый ТаблицаЗначений); Оригинал.Товары.Колонки.Добавить("Идентификатор");
		КонецЕсли;
			
		// Уведомление: Выполнен.
		СостоянияУведомлений = Новый Структура("Выполненн,Распечатан,Проведен"); СостояниеИзменено = Ложь;
		Для Каждого СтрокаТабличнойЧасти Из Документ.Товары Цикл
			СтрокаТабличнойЧастиОригинала = Оригинал.Товары.Найти(СтрокаТабличнойЧасти.Идентификатор, "Идентификатор");
			Если (Не СтрокаТабличнойЧастиОригинала = Неопределено) И (Не СтрокаТабличнойЧасти.Выполненн = СтрокаТабличнойЧастиОригинала.Выполненн) Тогда // Автоматически выполньнные позиции игнорируются.
				Если СтрокаТабличнойЧасти.Выполненн Тогда
					СостоянияУведомлений.Выполненн = Истина; СостояниеИзменено = Истина; Прервать; // Выполнение имеет высший приоритет, чем отмена выполнения.
				Иначе
					СостоянияУведомлений.Выполненн = Ложь; СостояниеИзменено = Истина; 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		// Уведомление: Распечатан.
		Если (Не Документ.Распечатан = Оригинал.Распечатан) Тогда
			СостоянияУведомлений.Распечатан = Документ.Распечатан; СостояниеИзменено = Истина; 
		КонецЕсли;
		// Уведомление: Проведен.
		Если (РежимЗаписи = РежимЗаписиДокумента.Проведение) И (Не Оригинал.Проведен) Тогда // Возможно перепроведение.
			СостоянияУведомлений.Проведен = Истина; СостояниеИзменено = Истина; 
		КонецЕсли;
		Если (РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения) Тогда
			СостоянияУведомлений.Проведен = Ложь; СостояниеИзменено = Истина; 
		КонецЕсли;
		
		// Запись данных.
		Если СостояниеИзменено Тогда
			Запись = РегистрыСведений.__СостоянияУведомленийДокументов.СоздатьМенеджерЗаписи();
			Запись.Документ = Документ.Ссылка;
			Если Не Документ.ЭтоНовый() Тогда
				Запись.Прочитать(); Запись.Документ = Документ.Ссылка; // Возможно отсутсвия записи.
			КонецЕсли;
			
			// Внесение изменений.
			Если Запись.Прочитано Тогда
				ЗаполнитьЗначенияСвойств(Запись, СостоянияУведомлений);
				Запись.ДатаНачалаПериода = Неопределено;
			Иначе
				Если (Не СостоянияУведомлений.Выполненн = Неопределено) Тогда
					Запись.Выполненн = СостоянияУведомлений.Выполненн;
				КонецЕсли;
				Если (Не СостоянияУведомлений.Распечатан = Неопределено) Тогда
					Запись.Распечатан = СостоянияУведомлений.Распечатан;
				КонецЕсли;
				Если (Не СостоянияУведомлений.Проведен = Неопределено) Тогда
					Запись.Проведен = СостоянияУведомлений.Проведен;
				КонецЕсли;
			КонецЕсли;
			Запись.Получено = Неопределено;
			Запись.Прочитано = Неопределено;
			Запись.Сотрудник = Документ.Сотрудник;
			
			Попытка
				Запись.Записать();
			Исключение
				Отказ = Истина; // TDOD
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;
	
КонецПроцедуры // ПередЗаписьюДокумента()
