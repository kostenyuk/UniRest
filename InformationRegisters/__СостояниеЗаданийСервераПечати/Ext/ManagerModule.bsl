
Процедура Напечатать(ТабличныйДокумент, Вид = Неопределено) Экспорт 
	
	// Проверка.
	Если (Не ТабличныйДокумент = Неопределено) И (Не Булево(ТабличныйДокумент.ВысотаТаблицы + ТабличныйДокумент.ШиринаТаблицы)) Тогда 
		Возврат; 
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Запись задания.
	Запись = РегистрыСведений.__СостояниеЗаданийСервераПечати.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Новый УникальныйИдентификатор;
	Запись.ТабличныйДокумент = Новый ХранилищеЗначения(ТабличныйДокумент);
	Запись.ИмяПринтера = ТабличныйДокумент.ИмяПринтера;
	Запись.Вид = Вид;
	Запись.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // Напечатать()


Функция ПолучитьЗадания() Экспорт 
	
	Результат = Новый Массив; МустойМассив = Новый Массив;

	НачатьТранзакцию();
	
	// Выборка данных.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	__СостояниеЗаданийСервераПечати.Идентификатор
	                      |ИЗ
	                      |	РегистрСведений.__СостояниеЗаданийСервераПечати КАК __СостояниеЗаданийСервераПечати
	                      |ГДЕ
	                      |	(НЕ __СостояниеЗаданийСервераПечати.Распечатан)
	                      |
	                      |ДЛЯ ИЗМЕНЕНИЯ
	                      |	РегистрСведений.__СостояниеЗаданийСервераПечати");
	РузультатЗапроса = Запрос.Выполнить();
	
	Если РузультатЗапроса.Пустой() Тогда
		ОтменитьТранзакцию();
	Иначе
	
		УстановитьПривилегированныйРежим(Истина);
		
		// Запись данных.
		Выборка = РузультатЗапроса.Выбрать(); Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.__СостояниеЗаданийСервераПечати.СоздатьМенеджерЗаписи();
			Запись.Идентификатор = Выборка.Идентификатор;
			Попытка
				Запись.Прочитать();
				Запись.Распечатан = Истина;
				Запись.Записать();
			Исключение
				// TODO
				ОтменитьТранзакцию(); Возврат МустойМассив;
			КонецПопытки;
			
			// Выборка данных.
			ТабличныйДокумент = Запись.ТабличныйДокумент.Получить();
			Если (Не ТабличныйДокумент = Неопределено) И (ТабличныйДокумент.ВысотаТаблицы + ТабличныйДокумент.ШиринаТаблицы) Тогда 
				Результат.Добавить(ТабличныйДокумент);
			КонецЕсли;
		КонецЦикла;
		Попытка
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию(); Возврат МустойМассив;
		КонецПопытки;
		
		// Статистика.
		Запись = РегистрыСведений.__СостояниеСервераПечати.СоздатьМенеджерЗаписи();
		Запись.КоличествоВыполненныхЗаданий = Запись.КоличествоВыполненныхЗаданий + Результат.Количество(); 
		Попытка
			Запись.Записать();
		Исключение КонецПопытки; // Потеряли статистику, но не критично.
	
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	// Результат.
	Возврат Результат;
	
КонецФункции // ПолучитьЗадания()

Процедура ОчиститьЗадания() Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);

	// Выборка данных.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	__СостояниеЗаданийСервераПечати.Идентификатор
	                      |ИЗ
	                      |	РегистрСведений.__СостояниеЗаданийСервераПечати КАК __СостояниеЗаданийСервераПечати
	                      |ГДЕ
	                      |	__СостояниеЗаданийСервераПечати.ДатаНачалаПериода < &ДатаНачалаПериода
	                      |
	                      |ДЛЯ ИЗМЕНЕНИЯ
	                      |	РегистрСведений.__СостояниеЗаданийСервераПечати");
	Запрос.УстановитьПараметр("ДатаНачалаПериода", РегистрыСведений.__НастройкиВебСервиса.ПолучитьГраницуХраненияЗаданий());
	РузультатЗапроса = Запрос.Выполнить();
	
	Если Не РузультатЗапроса.Пустой() Тогда
		
		// Удаление данных.
		Запись = РегистрыСведений.__СостояниеЗаданийСервераПечати.СоздатьМенеджерЗаписи();
		
		Выборка = РузультатЗапроса.Выбрать(); Пока Выборка.Следующий() Цикл
			Запись.Идентификатор = Выборка.Идентификатор;
			Попытка
				Запись.Удалить();
			Исключение
				// TODO
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ОчиститьЗадания()
