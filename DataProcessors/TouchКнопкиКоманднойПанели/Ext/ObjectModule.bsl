
//	1С:Touch. Touch-ориентированные элементы управления и диалоговые формы, 
//	построенные с использованием только стандартных элементов управления платформы.
//	Copyright (C) 2008-2010 Переверзев Александр Владимирович.
//
//	Это программа является свободным программным обеспечением. Вы можете 
//	распространять и/или модифицировать её согласно условиям Стандартной 
//	Общественной Лицензии GNU, опубликованной Фондом Свободного Программного 
//	Обеспечения, версии 3 или, по Вашему желанию, любой более поздней версии. 
//
//	Эта программа распространяется в надежде, что она будет полезной, но БЕЗ 
//	ВСЯКИХ ГАРАНТИЙ, в том числе подразумеваемых гарантий ТОВАРНОГО СОСТОЯНИЯ ПРИ 
//	ПРОДАЖЕ и ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО ПРИМЕНЕНИЯ. Смотрите Стандартную 
//	Общественную Лицензию GNU для получения дополнительной информации. 
//
//	Вы должны были получить копию Стандартной Общественной Лицензии GNU вместе 
//	с программой. В случае её отсутствия, посмотрите <http://www.gnu.org/licenses/>.


// Зависимости:
//	Обработки.TouchКнопкаКоманднойПанели.

#Если Клиент Тогда
	
Перем мКнопки;	
Перем мИменаКнопок, мИндексыКнопок;

Перем мТипСтроки, мТипЧисла;


// Функция вставляет новый объект в указанную позицию коллекции.
//
// Параметры:
//	Индекс - Число. Позиция в коллекции, в которую необходимо вставить новый объект;
//	Имя - Строка. Имя - должно соответствовать правилам имен. Уникально в пределах коллекции;
//	Тип - Неопределено. Не поддерживается;
//	Текст - Строка. Текст, который будет выводиться на кнопке;
//	Действие - Строка. Имя процедуры обработчика события, которую необходимо выполнить при нажатии на данную кнопку.
//		Процедура должна быть экспортируемой, в противном случае процедура не будет доступна для выполнена.
//
// Возвращаемое значение:
//	ОбработкаОбъект.TouchКнопкаКоманднойПанели. Новый объект коллекции.
//
Функция Вставить(Индекс, Знач Имя = "", Тип = Неопределено, Текст = "", Действие = "") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Добавление кнопки.
	Кнопка = Добавить(Имя, Неопределено, Текст, Действие); 
	Если (Кнопка = Неопределено) Тогда
		Возврат Неопределено;
	КонецЕсли;
	// Смещение кнопки.
	Сдвинуть(Кнопка, Индекс - Индекс(Кнопка));
	
	Возврат Кнопка;
	
КонецФункции // Вставить()
	
// Функция добавлет новый объект в конец коллекции.
//
// Параметры:
//	Имя - Строка. Имя - должно соответствовать правилам имен. Уникально в пределах коллекции;
//	Тип - Неопределено. Не поддерживается;
//	Текст - Строка. Текст, который будет выводиться на кнопке;
//	Действие - Строка. Имя процедуры обработчика события, которую необходимо выполнить при нажатии на данную кнопку.
//		Процедура должна быть экспортируемой, в противном случае процедура не будет доступна для выполнена.
//
// Возвращаемое значение:
//	ОбработкаОбъект.TouchКнопкаКоманднойПанели. Новый объект коллекции.
//
Функция Добавить(Знач Имя = "", Тип = Неопределено, Текст = "", Действие = "") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Поиск кнопки.
	Кнопка = мКнопки.Получить(мИменаКнопок.Получить(Имя));
	Если (Кнопка = Неопределено) Тогда
		ПриведенноеИмя = Строка(Имя);
		
		// -- Получение имени кнопки.
		Если ПустаяСтрока(ПриведенноеИмя) Тогда
			ПриведенноеИмя = "Действие" + Формат(Количество());
		КонецЕсли;
		
		Параметры = Новый Структура("ИменаКнопок,ИндексыКнопок,Имя,Идентификатор",
			мИменаКнопок,
			мИндексыКнопок,
			ПриведенноеИмя);
		
		// -- Создание новой кнопки (хитрая процедура инициализации).
		Кнопка = Обработки.TouchКнопкаКоманднойПанели.Создать();
		Кнопка.Имя(Параметры);
		
		// -- Добавление кнопки в именах и индексах.
		мКнопки.Вставить(Параметры.Идентификатор, Кнопка);
		мИменаКнопок.Вставить(ПриведенноеИмя, Параметры.Идентификатор);
		мИндексыКнопок.Добавить(Параметры.Идентификатор);
	КонецЕсли;
	
	// Изменение праметров колонки.
	Кнопка.Текст = Текст;
	Кнопка.Действие = Действие;
	
	Возврат Кнопка;
	
КонецФункции // Добавить()

// Функция получает индекс объекта в коллекции.
//
// Параметры:
//	Индекс - ОбработкаОбъект.TouchКнопкаКоманднойПанели. Объект коллекции порядковую позицию которого требуется получить.
//
// Возвращаемое значение:
//	Число. Индекс объекта коллекции. Если такого объекта не найдено, возвращается -1.
//
Функция Индекс(Кнопка) Экспорт
	
	Элемент = мИндексыКнопок.НайтиПоЗначению(Идентификатор(Кнопка));
	Если (Не Элемент = Неопределено) Тогда
		Возврат мИндексыКнопок.Индекс(Элемент);
	КонецЕсли;
	
	Возврат -1;
	
КонецФункции // Индекс()

// Функция получает количество объектов в коллекции.
//
Функция Количество() Экспорт
	
	// Количество кнопок.
	Возврат мКнопки.Количество();
	
КонецФункции // Количество()

// Процедура удаляет все объекты из коллекции.
//
Процедура Очистить() Экспорт
	
	// Очистка кнопок.
	Для Каждого Элемент Из мКнопки Цикл
		Элемент.Значение.Высвободить();
	КонецЦикла;
	
	мКнопки.Очистить();
	мИменаКнопок.Очистить();
	мИндексыКнопок.Очистить();
	
КонецПроцедуры // Очистить()

// Функция получает объект коллекции по индексу или имени.
//
// Параметры:
//	Индекс - Число, Строка. Позиция или имя объекта в коллекции.
//
// Возвращаемое значение:
//	ОбработкаОбъект.TouchКнопкаКоманднойПанели. Требуемый объект коллекции.
//
// Описание:
//	Функция совмещает в себе функционал типовых функций коллекций "Получить" и "Найти", 
//	в связи с тем что последняя является функцией встроенного языка.
//
Функция Получить(Индекс) Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Поиск кнопки.
	Если (ТипЗнч(Индекс) = мТипСтроки) Тогда
		// -- Поиск по имени.
		Возврат мКнопки.Получить(мИменаКнопок.Получить(Индекс));
	Иначе
		// -- Поиск по индексу.
		Возврат мКнопки.Получить(мИндексыКнопок.Получить(Индекс).Значение);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // Получить()

// Процедура сдвигает объект на указанное количество позиций.
//
// Параметры:
//	Индекс - Число, ОбработкаОбъект.TouchКнопкаКоманднойПанели. Позиция объекта в коллекции или сам объект;
//	Смещение - Число. Количество позиций, на которое необходимо сдвинуть данную. Положительное значение 
//		соответствует смещению кнопки в сторону конца коллекции, отрицательное - к началу.
//
Процедура Сдвинуть(Кнопка, Смещение) Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	Если (ТипЗнч(Кнопка) = мТипЧисла) Тогда
		Индекс = Кнопка;
	Иначе
		Индекс = Индекс(Кнопка);
	КонецЕсли;
	
	мИндексыКнопок.Сдвинуть(Индекс, Смещение);
	
КонецПроцедуры // Сдвинуть()

// Процедура удаляет объект из коллекции.
//
// Параметры:
//	Индекс - Число, ОбработкаОбъект.TouchКнопкаКоманднойПанели. Позиция объекта в коллекции или сам объект.
//
Процедура Удалить(Индекс) Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	Если (ТипЗнч(Индекс) = Тип("Число")) Тогда
		Кнопка = Получить(Индекс);
	Иначе
		Кнопка = Индекс;
	КонецЕсли;
	
	Идентификатор = Идентификатор(Кнопка);	
	Если (Идентификатор = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	мКнопки.Удалить(Идентификатор);
	мИменаКнопок.Удалить(Идентификатор);
	мИндексыКнопок.Удалить(мИндексыКнопок.НайтиПоЗначению(Идентификатор));
	
КонецПроцедуры // Удалить()


Процедура Высвободить() Экспорт
	
	// Высвобождение ссылок.
	Для Каждого Элемент Из мКнопки Цикл
		Элемент.Значение.Высвободить();
	КонецЦикла;
	
	мКнопки = Неопределено;
	мИменаКнопок = Неопределено;
	мИндексыКнопок = Неопределено;
	
КонецПроцедуры // Высвободить()


Функция Идентификатор(Кнопка)
	
	Если (Кнопка = Неопределено) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого Элемент Из мКнопки Цикл
		Если (Элемент.Значение = Кнопка) Тогда
			Возврат Элемент.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции // Идентификатор()


// Инициализация переменных.
мКнопки = Новый Соответствие;
мИменаКнопок = Новый Соответствие;
мИндексыКнопок = Новый СписокЗначений;

мТипСтроки = Тип("Строка");
мТипЧисла = Тип("Число");

#КонецЕсли
