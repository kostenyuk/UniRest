
Функция ДобавитьСеанс(Параметры, Восстановление) Экспорт
	
	// Запись сеанса.
	Запись = РегистрыСведений.__СостояниеСеансовВебСервиса.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Новый УникальныйИдентификатор;
	
	// Параметры.
	ЗаполнитьЗначенияСвойств(Запись, Параметры);
	Запись.Восстановление = Восстановление;
	
	// Поиск сеанса.
	Если Восстановление Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	__СостояниеСеансовВебСервиса.Идентификатор
		                      |ИЗ
		                      |	РегистрСведений.__СостояниеСеансовВебСервиса КАК __СостояниеСеансовВебСервиса
		                      |ГДЕ
		                      |	__СостояниеСеансовВебСервиса.ГруппаПользователей = &ГруппаПользователей
		                      |	И __СостояниеСеансовВебСервиса.Пользователь = &Пользователь
		                      |	И __СостояниеСеансовВебСервиса.Восстановление
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	__СостояниеСеансовВебСервиса.ДатаОкончанияПериода УБЫВ,
		                      |	__СостояниеСеансовВебСервиса.ДатаНачалаПериода УБЫВ");
		Запрос.УстановитьПараметр("Пользователь", Запись.Пользователь);					  
		Запрос.УстановитьПараметр("ГруппаПользователей", Запись.ГруппаПользователей);					  
		Выборка = Запрос.Выполнить().Выбрать();
	КонецЕсли; 
	
	// Запись сеанса.
	Запись.Записать(Истина);
	
	// Восстаовление сеанса.
	Если Восстановление Тогда
		Если Выборка.Следующий() Тогда
			
			РегистрыСведений.__ЗначенияСеансовВебСервиса.ПередатьЗначенияСеансов(Выборка.Идентификатор, Запись.Идентификатор);
			УдалитьСеанс(Выборка.Идентификатор);
		
		КонецЕсли;
	КонецЕсли;
	
	// ERR.
	
	Возврат Запись.Идентификатор;
	
КонецФункции // ДобавитьСеанс()

Функция ПолучитьСеанс(Идентификатор, АвтоматическоеПродление = Ложь) Экспорт 
	
	// Получение сеанса.
	Запись = РегистрыСведений.__СостояниеСеансовВебСервиса.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Идентификатор;
	Запись.Прочитать();
	
	// Проверка сеанса.
	Если Не Запись.Выбран() Тогда
		ВызватьИсключение __ЛокализацияКлиентСервер.ИсключениеСеансНеНайден();
	КонецЕсли;
	
	// Продление сеанса.
	Если АвтоматическоеПродление Тогда
		Запись.Записать(Истина);
	КонецЕсли;
	
	Возврат Запись;
	
КонецФункции // ПолучитьСеанс()

Процедура ИзменитьСеанс(Идентификатор, Параметры) Экспорт
	
	// Получение сеанса.
	Запись = РегистрыСведений.__СостояниеСеансовВебСервиса.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Идентификатор;
	Запись.Прочитать();
	
	// Проверка сеанса.
	Если Не Запись.Выбран() Тогда
		ВызватьИсключение __ЛокализацияКлиентСервер.ИсключениеСеансНеНайден();
	КонецЕсли;
	
	// Параметры.
	ЗаполнитьЗначенияСвойств(Запись, Параметры);
	
	Запись.Записать(Истина);
	
КонецПроцедуры // ИзменитьСеанс()

Процедура ПродлитьСеанс(Идентификатор) Экспорт
	
	// Продление сеанса.
	Запись = РегистрыСведений.__СостояниеСеансовВебСервиса.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Идентификатор;
	Запись.Прочитать();
	
	// Проверка сеанса.
	Если Не Запись.Выбран() Тогда
		ВызватьИсключение __ЛокализацияКлиентСервер.ИсключениеСеансНеНайден();
	КонецЕсли;
	
	Запись.Записать(Истина);
	
КонецПроцедуры // ПродлитьСеанс()

Процедура УдалитьСеанс(Идентификатор) Экспорт
	
	// Продление сеанса.
	Запись = РегистрыСведений.__СостояниеСеансовВебСервиса.СоздатьМенеджерЗаписи();
	Запись.Идентификатор = Идентификатор;
	Запись.Удалить();
	
	// Удаление связанных данных.
	РегистрыСведений.__ЗначенияСеансовВебСервиса.ОчиститьЗначенияСеансов(Идентификатор, Истина);
	
КонецПроцедуры // УдалитьСеанс()


Процедура ОчиститьСеансы(Полностью = Ложь) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);

	// Выборка данных.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	__СостояниеСеансовВебСервиса.Идентификатор
	                      |ИЗ
	                      |	РегистрСведений.__СостояниеСеансовВебСервиса КАК __СостояниеСеансовВебСервиса
	                      |ГДЕ
	                      |	(&Полностью
	                      |			ИЛИ __СостояниеСеансовВебСервиса.ДатаОкончанияПериода < &ДатаОкончанияПериода)");
	Запрос.УстановитьПараметр("Полностью", Полностью);
	Запрос.УстановитьПараметр("ДатаОкончанияПериода", РегистрыСведений.__НастройкиВебСервиса.ПолучитьГраницуХраненияНеактивнныхСенасов());
	РузультатЗапроса = Запрос.Выполнить();
	
	Если Не РузультатЗапроса.Пустой() Тогда
		
		// Удаление данных.
		Запись = РегистрыСведений.__СостояниеСеансовВебСервиса.СоздатьМенеджерЗаписи();
		
		Выборка = РузультатЗапроса.Выбрать(); Пока Выборка.Следующий() Цикл
			Запись.Идентификатор = Выборка.Идентификатор;
			Попытка
				Запись.Удалить();
			Исключение
				// ERR
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
	// Удаление связанных данных.
	РегистрыСведений.__ЗначенияСеансовВебСервиса.ОчиститьЗначенияСеансов(Неопределено, Полностью);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ОчиститьСеансы()
