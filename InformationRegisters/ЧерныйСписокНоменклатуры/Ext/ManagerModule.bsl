
Функция ПолучитьВхождениеНоменклатуры(Номенклатура, Ресторан = Неопределено, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	                      |	ЧерныйСписокНоменклатуры.Номенклатура,
	                      |	ЧерныйСписокНоменклатуры.Ресторан
	                      |ИЗ
	                      |	РегистрСведений.ЧерныйСписокНоменклатуры КАК ЧерныйСписокНоменклатуры
	                      |ГДЕ
	                      |	ЧерныйСписокНоменклатуры.Номенклатура = &Номенклатура
	                      |	И (&Ресторан = НЕОПРЕДЕЛЕНО
	                      |			ИЛИ ЧерныйСписокНоменклатуры.Ресторан = &Ресторан)");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура.Ссылка);
	Запрос.УстановитьПараметр("Ресторан", Ресторан);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ЧерныйСписокНоменклатуры", "РегистрСведений." + Регистр);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции // ПолучитьВхождениеНоменклатуры()


Функция ПолучитьСписокНоменклатуры(Ресторан = Неопределено, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	ЧерныйСписокНоменклатуры.Номенклатура
	                      |ИЗ
	                      |	РегистрСведений.ЧерныйСписокНоменклатуры КАК ЧерныйСписокНоменклатуры
	                      |ГДЕ
	                      |	(&Ресторан = НЕОПРЕДЕЛЕНО
	                      |			ИЛИ ЧерныйСписокНоменклатуры.Ресторан = &Ресторан)");
	Запрос.УстановитьПараметр("Ресторан", Ресторан);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ЧерныйСписокНоменклатуры", "РегистрСведений." + Регистр);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
	
КонецФункции // ПолучитьСписокНоменклатуры()

Процедура ОчиститьСписокНоменклатуры(Ресторан = Неопределено, Полностью = Ложь, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ЧерныйСписокНоменклатуры.Номенклатура,
	                      |	ЧерныйСписокНоменклатуры.Ресторан
	                      |ИЗ
	                      |	РегистрСведений.ЧерныйСписокНоменклатуры КАК ЧерныйСписокНоменклатуры
	                      |ГДЕ
	                      |	(&Ресторан = НЕОПРЕДЕЛЕНО
	                      |			ИЛИ ЧерныйСписокНоменклатуры.Ресторан = &Ресторан)");
	Запрос.УстановитьПараметр("Ресторан", Ресторан);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ЧерныйСписокНоменклатуры", "РегистрСведений." + Регистр);
	
	РузультатЗапроса = Запрос.Выполнить();
	
	Если Не РузультатЗапроса.Пустой() Тогда
		
		НачатьТранзакцию();
		
		// Удаление данных.
		Запись = РегистрыСведений[Регистр].СоздатьМенеджерЗаписи();
		
		Выборка = РузультатЗапроса.Выбрать(); Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Попытка
				Запись.Удалить();
			Исключение
				ОтменитьТранзакцию(); // ERR
				Прервать;
				// TODO
			КонецПопытки;
		КонецЦикла;
		
		Если ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОчиститьИсториюНоменклатуры()


Функция ПолучитьКоличествоНоменклатуры(Ресторан = Неопределено, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ЧерныйСписокНоменклатуры.Номенклатура КАК Номенклатура,
	                      |	СУММА(ЧерныйСписокНоменклатуры.Количество) КАК Количество
	                      |ИЗ
	                      |	РегистрСведений.ЧерныйСписокНоменклатуры КАК ЧерныйСписокНоменклатуры
	                      |ГДЕ
	                      |	(&Ресторан = НЕОПРЕДЕЛЕНО
	                      |			ИЛИ ЧерныйСписокНоменклатуры.Ресторан = &Ресторан)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЧерныйСписокНоменклатуры.Номенклатура
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ЧерныйСписокНоменклатуры.Номенклатура.Наименование");
	Запрос.УстановитьПараметр("Ресторан", Ресторан);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ЧерныйСписокНоменклатуры", "РегистрСведений." + Регистр);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьКоличествоНоменклатуры()


Функция ПолучитьТаблицуВхожденийНоменклатуры(Номенклатура, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	Рестораны.Ссылка КАК Ресторан,
	                      |	ВЫБОР
	                      |		КОГДА ЧерныйСписокНоменклатуры.Номенклатура ЕСТЬ NULL 
	                      |			ТОГДА ЛОЖЬ
	                      |		ИНАЧЕ ИСТИНА
	                      |	КОНЕЦ КАК Актуальность,
	                      |	ЕСТЬNULL(ЧерныйСписокНоменклатуры.Количество, 0) КАК Количество,
	                      |	ВЫБОР
	                      |		КОГДА Рестораны.ПометкаУдаления
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК ИндексКартинки
	                      |ИЗ
	                      |	Справочник.Рестораны КАК Рестораны
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЧерныйСписокНоменклатуры КАК ЧерныйСписокНоменклатуры
	                      |		ПО (ЧерныйСписокНоменклатуры.Ресторан = Рестораны.Ссылка)
	                      |			И (ЧерныйСписокНоменклатуры.Номенклатура = &Номенклатура)
	                      |ГДЕ
	                      |	Рестораны.Актуальность
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ресторан");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура.Ссылка);						  
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.ЧерныйСписокНоменклатуры", "РегистрСведений." + Регистр);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьТаблицуВхожденийНоменклатуры()

Процедура УстановитьТаблицуВхожденийНоменклатуры(Номенклатура, ТаблицаВхождений, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	НачатьТранзакцию();
	
	Для Каждого СтрокаТаблицыВхождений Из ТаблицаВхождений Цикл
		Запись = РегистрыСведений[Регистр].СоздатьМенеджерЗаписи();
	    Запись.Номенклатура = Номенклатура;
	    Запись.Ресторан = СтрокаТаблицыВхождений.Ресторан;
	    Запись.Количество = СтрокаТаблицыВхождений.Количество;
		
		Попытка
			Если СтрокаТаблицыВхождений.Актуальность Тогда
				Запись.Записать(Истина);
			Иначе
				Запись.Удалить();
			КонецЕсли;
		Исключение
			ОтменитьТранзакцию(); // ERR
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры // УстановитьТаблицуВхожденийНоменклатуры()


Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	Если (ВидФормы = "ФормаЗаписи") Тогда
		Если ПолучитьПараметрыУчета().ЧерныйСписокНоменклатурыУчетКоличества И (Не Справочники.Рестораны.КоличествоАктуальныхРесторановБолееОдного()) Тогда
			ВыбраннаяФорма = "ФормаУпрощенная"; СтандартнаяОбработка = Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // ОбработкаПолученияФормы()

//Костенюк Александр-Старт 28.05.2012
//
// Процедура добавляет позицию в регистр, либо изменяет количество для позиции
//
// Параметры
// Номенклатура - Тип: СправочникСсылка.Номенклатура, позиция, которую необходимо добавить либо изменить количество
// Ресторан - Тип: СправочникСсылка.Рестораны, ресторан, для которого нужно добавить позицию
// Регистр - Тип: Строка, Регистр, в который будет добавлена запись(либо изменена)
//
Процедура УстановитьПозицию(Номенклатура, Количество, Ресторан, Регистр) Экспорт
	
	МенеджерЗаписи 				= РегистрыСведений[Регистр].СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Номенклатура = Номенклатура;
	МенеджерЗаписи.Ресторан 	= Ресторан;
	МенеджерЗаписи.Количество 	= Количество;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
		
КонецПроцедуры
//Костенюк Александр-Финиш 28.05.2012

//Костенюк Александр-Старт 28.05.2012
//
// Процедура удаляет позицию из списка
//
// Параметры
// Номенклатура - Тип: СправочникСсылка.Номенклатура, позиция, которую необходимо удалить
// Ресторан - Тип: СправочникСсылка.Рестораны, ресторан, для которого нужно удалить позицию
// Регистр - Тип: Строка, Регистр, из которого будет произведено удаление позиции
//
Процедура УдалитьПозицию(Номенклатура, Ресторан, Регистр) Экспорт
	
	МенеджерЗаписи 				= РегистрыСведений[Регистр].СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Номенклатура = Номенклатура;
	МенеджерЗаписи.Ресторан 	= Ресторан;
	
	Попытка
		МенеджерЗаписи.Удалить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры
//Костенюк Александр-Финиш 28.05.2012

//Костенюк Александр-Старт 28.09.2012
//
// Процедура изменяет количество для блюда в черном/белом списке
// 
// Параметры:
// Номенклатура - Тип: СправочникСсылка.Номенклатура. Блюдо, для которого необходимо изменить количество.
// Ресторан - Тип: СправочникСсылка.Рестораны. Ресторан, для которого производится изменение количества.
// Количество - Тип: Число. Количество, на которое нужно уменьшить.
// Регистр - Тип: Строка. Регистр, в котором будет произведено изменение.
//
Процедура ИзменитьКоличествоЧерныйБелыйСписок(Ресторан, Номенклатура, Количество, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	РезультатЗапроса = СформироватьЗапросЧерныйБелыйСписок(Ресторан, Регистр);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ТаблицаЗапроса = РезультатЗапроса.Выгрузить();
	НайденнаяСтрока = ТаблицаЗапроса.Найти(Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	НовоеКоличество = НайденнаяСтрока.Количество - Количество;
	
	МенеджерЗаписи 				= РегистрыСведений[Регистр].СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Номенклатура = Номенклатура;
	МенеджерЗаписи.Ресторан 	= Ресторан;

	Если НовоеКоличество <= 0 Тогда
		Если Регистр = "БелыйСписокНоменклатуры" Тогда
			Попытка
				МенеджерЗаписи.Удалить();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		ИначеЕсли Регистр = "ЧерныйСписокНоменклатуры" Тогда
			МенеджерЗаписи.Количество = 0;
			МенеджерЗаписи.Записать();
		КонецЕсли;
	Иначе
		МенеджерЗаписи.Количество = НовоеКоличество;
		МенеджерЗаписи.Записать();
	КонецЕсли;
	
КонецПроцедуры
//Костенюк Александр-Финиш 28.09.2012

//Костенюк Александр-Старт 28.09.2012
//
// Функция формирует запрос номенклатуры по черному/белому списку
//
// Параметры:
// Ресторан - Тип: СправочникСсылка.Рестораны. Ресторан, для которого будет получен список номенклатуры.
// Регистр - Тип: Строка. Регистр, из которого будут получены данные.
//
// Возвращаемое значение:
// Результат - Тип: РезультатЗапроса.
//
Функция СформироватьЗапросЧерныйБелыйСписок(Ресторан, Регистр = "ЧерныйСписокНоменклатуры") Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЧерныйСписокНоменклатуры.Номенклатура,
	               |	ЧерныйСписокНоменклатуры.Количество
	               |ИЗ
	               |	РегистрСведений.ЧерныйСписокНоменклатуры КАК ЧерныйСписокНоменклатуры
	               |ГДЕ
	               |	ЧерныйСписокНоменклатуры.Ресторан = &Ресторан";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ЧерныйСписокНоменклатуры", "РегистрСведений." + Регистр);
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ресторан", Ресторан);
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции
//Костенюк Александр-Финиш 28.09.2012

