
&НаКлиенте
Процедура УстановитьДоступность()
	
	#Если ВебКлиент Тогда
		Редактирование = Ложь; ЛокальноеИмяКомпьютера = Неопределено;
	#Иначе
		Редактирование = Истина; ЛокальноеИмяКомпьютера = ИмяКомпьютера();
	#КонецЕсли
	
	// Элементы.
	Элементы.ВебСервисИспользовать.Доступность = Редактирование; Редактирование = Запись.ВебСервисИспользовать;
	Элементы.ВебСервисПароль.Доступность = Редактирование;
	Элементы.ВебСервисПериодНеактивностиСеансов.Доступность = Редактирование;
	Элементы.ВебСервисПериодХраненияНеактивнныхСеансов.Доступность = Редактирование;
	Элементы.ГруппаВебСервер.Доступность = Редактирование;
	Элементы.ГруппаСерверПечати.Доступность = Редактирование;
	Элементы.ГруппаУправление.Доступность = Редактирование;

	Элементы.ВебСерверКаталог.Доступность = Редактирование И (ИмяКомпьютера = ЛокальноеИмяКомпьютера);
	
КонецПроцедуры // УстановитьВидимость()


&НаКлиенте
Процедура ВебСервисИспользоватьПриИзменении(Элемент)
	
	// Настройка формы.
	УстановитьДоступность();

КонецПроцедуры // ВебСервисИспользоватьПриИзменении()

&НаКлиенте
Процедура ВебСервисПериодНеактивностиСеансовПриИзменении(Элемент)
	
	// Нормализация.
	Запись.ВебСервисПериодНеактивностиСеансов = Мин(Макс(Запись.ВебСервисПериодНеактивностиСеансов, '0001.01.01 00:00:05'), '0001.01.01 01:00:00');
	ВебСервисПериодХраненияНеактивнныхСеансовПриИзменении(Неопределено);
	
КонецПроцедуры // ВебСервисПериодНеактивностиСеансовПриИзменении()

&НаКлиенте
Процедура ВебСервисПериодХраненияНеактивнныхСеансовПриИзменении(Элемент)
	
	// Нормализация.
	Запись.ВебСервисПериодХраненияНеактивнныхСеансов = Макс(Запись.ВебСервисПериодХраненияНеактивнныхСеансов, Запись.ВебСервисПериодНеактивностиСеансов + 15, '0001.01.01 00:15:00');
	
КонецПроцедуры // ВебСервисПериодХраненияНеактивнныхСеансовПриИзменении()

&НаКлиенте
Процедура ВебСерверПриИзменении(Элемент)

	ВебСерверПриИзмененииСервер();
	
КонецПроцедуры  // ВебСерверПриИзменении()

&НаСервере
Процедура ВебСерверПриИзмененииСервер()
	
	Запись.ВебСерверКаталог = РегистрыСведений.__НастройкиВебСервиса.ПолучитьКорневойКаталогВебСервера(Запись.ВебСервер);

КонецПроцедуры // ВебСерверПриИзмененииСервер

&НаКлиенте
Процедура ВебСерверКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите корневой каталог ресурсов web-сервера'; uk = 'Оберіть кореневий каталог ресурсів web-сервера'");
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Запись.ВебСерверКаталог = ДиалогВыбораФайла.Каталог;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры // ВебСерверКаталогНачалоВыбора()

&НаКлиенте
Процедура СерверПечатиПериодИнтервалаПечатиПриИзменении(Элемент)
	
	// Нормализация.
	Запись.СерверПечатиПериодИнтервалаПечати = Мин(Макс(Запись.СерверПечатиПериодИнтервалаПечати, '0001.01.01 00:00:05'), '0001.01.01 00:01:00');
	СерверПечатиПериодХраненияЗаданийПриИзменении(Неопределено);
	
КонецПроцедуры // СерверПечатиПериодИнтервалаПечатиПриИзменении()

&НаКлиенте
Процедура СерверПечатиПериодХраненияЗаданийПриИзменении(Элемент)
	
	// Нормализация.
	Запись.СерверПечатиПериодХраненияЗаданий = Макс(Запись.СерверПечатиПериодХраненияЗаданий, Запись.СерверПечатиПериодИнтервалаПечати + 15, '0001.01.01 00:15:00');
	
КонецПроцедуры // СерверПечатиПериодХраненияЗаданийПриИзменении()


&НаКлиенте
Процедура СостояниеНажатие(Элемент)
	
	ОткрытьФормуМодально("РегистрСведений.__СостояниеСервераПечати.ФормаЗаписи");
	
КонецПроцедуры // СостояниеНажатие()


&НаКлиенте
Процедура Опубликовать(Команда)
	
	// Триггер публикации.
	Оригинал.ВебСерверКаталогПублицкации = Неопределено;
	
	// Запись.
	Записать();
	
КонецПроцедуры // Опубликовать()


&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// Подавление проверки.
	Если Не Запись.ВебСервисИспользовать Тогда
		ПроверяемыеРеквизиты.Очистить();	
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполненияНаСервере()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Подмена объекта формы.
	ЗаписьНастроек = РегистрыСведений.__НастройкиВебСервиса.СоздатьМенеджерЗаписи();	
	ЗаписьНастроек.Прочитать();
	Если ЗаписьНастроек.Выбран() Тогда
		ЗначениеВДанныеФормы(ЗаписьНастроек, Запись);
		ЗначениеВДанныеФормы(ЗаписьНастроек, Оригинал);
	КонецЕсли;
	Публикация = Запись.ВебСерверИдентификаторПубликации;
	
	// Пароли.
	ВебСервисПароль = РегистрыСведений.__НастройкиВебСервиса.ПолучитьПарольПользователяВебСервиса();
	Запись.СерверПечатиПароль = РегистрыСведений.__НастройкиВебСервиса.ПолучитьПарольПользователяСервераПечати();
	
	// Идентификатор.
	Если Не ЗначениеЗаполнено(Запись.ВебСерверИдентификаторПубликации) Тогда
		Запись.ВебСерверИдентификаторПубликации = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	// Регламентное задание.
	СерверПечатиПериодРегламентногоЗадания = РегистрыСведений.__НастройкиВебСервиса.ПолучитьПериодРегламентногоЗаданияСервераПечати();
	
	// Заголовок.
	Заголовок = Метаданные.РегистрыСведений.__НастройкиВебСервиса.ПредставлениеЗаписи;
	
	// Компьютер.
	ИмяКомпьютера = ИмяКомпьютера();

КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Модальный режим.
	Если Не МодальныйРежим Тогда
		ОткрытьФормуМодально("РегистрСведений.__НастройкиВебСервиса.ФормаЗаписи");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Настройка формы.
	УстановитьДоступность();
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// Признак приостановки сервера печати.
	ЗаписьНастроек = РегистрыСведений.__НастройкиВебСервиса.СоздатьМенеджерЗаписи();	
	Если (Запись.СерверПечатиПриостановить = Оригинал.СерверПечатиПриостановить) Тогда
		ЗаписьНастроек.Прочитать(); Запись.СерверПечатиПриостановить = ЗаписьНастроек.СерверПечатиПриостановить;
	КонецЕсли;

	// Удаление записи.
	Если Не Отказ Тогда
		ЗаписьНастроек.Удалить();
	КонецЕсли;
	
	// Настройка пользователей.
	Если Не Отказ Тогда
		РегистрыСведений.__НастройкиВебСервиса.ИзменитьПараметрыПользователяВебСервиса(Запись.ВебСервисИспользовать, ВебСервисПароль);	
		РегистрыСведений.__НастройкиВебСервиса.ИзменитьПараметрыПользователяСервераПечати(Запись.ВебСервисИспользовать, Запись.СерверПечатиПароль);	
		РегистрыСведений.__НастройкиВебСервиса.ИзменитьПараметрыРегламентногоЗаданияСервераПечати(Запись.ВебСервисИспользовать, СерверПечатиПериодРегламентногоЗадания);	
	КонецЕсли;

КонецПроцедуры // ПередЗаписьюНаСервере()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Публикация.
	РегистрыСведений.__НастройкиВебСервиса.ИзменитьПараметрыКаталогаПублицкации(Запись.ВебСервисИспользовать, Запись.ВебСерверКаталогПублицкации, Оригинал.ВебСерверКаталогПублицкации);
	
КонецПроцедуры // ПослеЗаписиНаСервере()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Обновление интерфейса.
	Если (Не Запись.ВебСервисИспользовать = Оригинал.ВебСервисИспользовать) Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
	// Оригинал.
	ЗаполнитьЗначенияСвойств(Оригинал, Запись);
	
КонецПроцедуры // ПослеЗаписи()


&НаКлиенте
Процедура СерверПечатиПериодРегламентногоЗаданияПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры
