
Процедура ПередЗаписью(Отказ, Замещение)

	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Наследование.
	РегистрыСведений.МодификаторыНоменклатуры.ПередЗаписьюНабораЗаписей(ЭтотОбъект, Отказ, Замещение);
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ, Замещение)

	// При обмене данными ничего не проверяем.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Наследование.
	РегистрыСведений.МодификаторыНоменклатуры.ПриЗаписиНабораЗаписей(ЭтотОбъект, Отказ, Замещение);
	
КонецПроцедуры // ПриЗаписи()



Процедура ЗаполнитьПоДеревуЗначений(ДеревоЗначений, Номенклатура) Экспорт
	
	Таблица = Справочники.Номенклатура.ПрочитатьЗаписиРегистра("УсловияНоменклатуры",Номенклатура);
	
	Отбор.Номенклатура.Установить(Номенклатура);
	
	Для Каждого ПодчиненнаяСтрока ИЗ ДеревоЗначений.Строки Цикл
		
		ЗаполнитьРекурсивно(ПодчиненнаяСтрока, Номенклатура, Таблица);
		
	Конеццикла;
	
КонецПроцедуры

Процедура ЗаполнитьРекурсивно(Строка, Номенклатура, Таблица)
	
	СтрокаРодитель	= Строка.Родитель;
	СтрокаПредка	= Таблица.Найти(Строка.Модификатор,"Модификатор");
	
	//Если (СтрокаПредка=Неопределено И СтрокаРодитель=Неопределено И Строка.Актуальность)
	//	ИЛИ (СтрокаПредка=Неопределено И СтрокаРодитель<>Неопределено И СтрокаРодитель.Актуальность<>Строка.Актуальность)
	//	ИЛИ (СтрокаПредка<>Неопределено И Строка.Актуальность<>СтрокаПредка.Актуальность) Тогда
	//		
	//	НоваяЗапись					= Добавить();
	//	НоваяЗапись.Активность		= Истина;
	//	НоваяЗапись.Номенклатура	= Номенклатура;
	//	НоваяЗапись.Модификатор		= Строка.Модификатор;
	//	НоваяЗапись.Актуальность	= Строка.Актуальность;
	//	
	//Иначе
		// Александр Переверзев 13.03.2012 15:01:46 
		Если Строка.Актуальность Тогда
			
			НоваяЗапись					= Добавить();
			НоваяЗапись.Активность		= Истина;
			НоваяЗапись.Номенклатура	= Номенклатура;
			НоваяЗапись.Модификатор		= Строка.Модификатор;
			НоваяЗапись.Актуальность	= Строка.Актуальность;
		
		КонецЕсли; 
	//КонецЕсли;
	
	// Чистяков Павел 02.08.2011 10:52:41 
	// Удобнее отлаживать чтобы ныряло вниз только при актуальности
	// Поидее на логику алгоритмо влиять не должно
	Если Строка.Актуальность Тогда
		Для Каждого ПодчиненнаяСтрока ИЗ Строка.Строки Цикл
			ЗаполнитьРекурсивно(ПодчиненнаяСтрока, Номенклатура, Таблица);
		Конеццикла;
	КонецЕсли; 
	
КонецПроцедуры

