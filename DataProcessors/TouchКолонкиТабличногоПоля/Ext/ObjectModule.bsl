
//	1С:Touch. Touch-ориентированные элементы управления и диалоговые формы, 
//	построенные с использованием только стандартных элементов управления платформы.
//	Copyright (C) 2008-2010 Переверзев Александр Владимирович.
//
//	Это программа является свободным программным обеспечением. Вы можете 
//	распространять и/или модифицировать её согласно условиям Стандартной 
//	Общественной Лицензии GNU, опубликованной Фондом Свободного Программного 
//	Обеспечения, версии 3 или, по Вашему желанию, любой более поздней версии. 
//
//	Эта программа распространяется в надежде, что она будет полезной, но БЕЗ 
//	ВСЯКИХ ГАРАНТИЙ, в том числе подразумеваемых гарантий ТОВАРНОГО СОСТОЯНИЯ ПРИ 
//	ПРОДАЖЕ и ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО ПРИМЕНЕНИЯ. Смотрите Стандартную 
//	Общественную Лицензию GNU для получения дополнительной информации. 
//
//	Вы должны были получить копию Стандартной Общественной Лицензии GNU вместе 
//	с программой. В случае её отсутствия, посмотрите <http://www.gnu.org/licenses/>.


#Если Клиент Тогда
	
Перем мКолонки;	
Перем мИменаКолонок, мИндексыКолонок;

Перем мТипСтроки, мТипЧисла;


Функция Вставить(Индекс, ТекстШапки = "") Экспорт
	
	// Добавление колонки.
	Колонка = Добавить("Колонка" + Строка(Количество()), ТекстШапки); 
	Если (Колонка = Неопределено) Тогда
		Возврат Неопределено;
	КонецЕсли;
	// Смещение колонки.
	Сдвинуть(Колонка, Индекс - Индекс(Колонка));
	
	Возврат Колонка;
	
КонецФункции
	
Функция Добавить(Имя, ТекстШапки = "") Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Поиск кнопки.
	Колонка = мКолонки.Получить(мИменаКолонок.Получить(Имя));
	Если (Колонка = Неопределено) Тогда
		ПриведенноеИмя = Строка(Имя);
		
		// -- Получение имени кнопки.
		Если ПустаяСтрока(ПриведенноеИмя) Тогда
			ПриведенноеИмя = "Колонка" + Формат(Количество());
		КонецЕсли;
		
		Параметры = Новый Структура("ИменаКолонок,ИндексыКолонок,Имя,Идентификатор",
			мИменаКолонок,
			мИндексыКолонок,
			ПриведенноеИмя);
		
		// -- Создание новой кнопки (хитрая процедура инициализации).
		Колонка = Обработки.TouchКолонкаТабличногоПоля.Создать();
		Колонка.Имя(Параметры);
		
		// -- Добавление колонки в именах и индексах.
		мКолонки.Вставить(Параметры.Идентификатор, Колонка);
		мИменаКолонок.Вставить(ПриведенноеИмя, Параметры.Идентификатор);
		мИндексыКолонок.Добавить(Параметры.Идентификатор);
	КонецЕсли;
	
	// Изменение праметров колонки.
	Колонка.ТекстШапки = ТекстШапки;
	
	Возврат Колонка;
	
КонецФункции

// Функция получает индекс объекта в коллекции.
//
// Параметры:
//	Индекс - ОбработкаОбъект.TouchКнопкаКоманднойПанели. Объект коллекции порядковую позицию которого требуется получить.
//
// Возвращаемое значение:
//	Число. Индекс объекта коллекции. Если такого объекта не найдено, возвращается -1.
//
Функция Индекс(Колонка) Экспорт
	
	Элемент = мИндексыКолонок.НайтиПоЗначению(Идентификатор(Колонка));
	Если (Не Элемент = Неопределено) Тогда
		Возврат мИндексыКолонок.Индекс(Элемент);
	КонецЕсли;
	
	Возврат -1;
	
КонецФункции // Индекс()

// Функция получает количество объектов в коллекции.
//
Функция Количество() Экспорт
	
	// Количество кнопок.
	Возврат мКолонки.Количество();
	
КонецФункции // Количество()

// Процедура удаляет все объекты из коллекции.
//
Процедура Очистить() Экспорт
	
	// Очистка кнопок.
	Для Каждого Элемент Из мКолонки Цикл
		Элемент.Значение.Высвободить();
	КонецЦикла;
	
	мКолонки.Очистить();
	мИменаКолонок.Очистить();
	мИндексыКолонок.Очистить();
	
КонецПроцедуры // Очистить()

// Функция получает объект коллекции по индексу или имени.
//
// Параметры:
//	Индекс - Число, Строка. Позиция или имя объекта в коллекции.
//
// Возвращаемое значение:
//	ОбработкаОбъект.TouchКнопкаКоманднойПанели. Требуемый объект коллекции.
//
// Описание:
//	Функция совмещает в себе функционал типовых функций коллекций "Получить" и "Найти", 
//	в связи с тем что последняя является функцией встроенного языка.
//
Функция Получить(Индекс) Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	// Поиск кнопки.
	Если (ТипЗнч(Индекс) = мТипСтроки) Тогда
		// -- Поиск по имени.
		Возврат мКолонки.Получить(мИменаКолонок.Получить(Индекс));
	Иначе
		// -- Поиск по индексу.
		Возврат мКолонки.Получить(мИндексыКолонок.Получить(Индекс).Значение);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // Получить()

// Процедура сдвигает объект на указанное количество позиций.
//
// Параметры:
//	Индекс - Число, ОбработкаОбъект.TouchКнопкаКоманднойПанели. Позиция объекта в коллекции или сам объект;
//	Смещение - Число. Количество позиций, на которое необходимо сдвинуть данную. Положительное значение 
//		соответствует смещению кнопки в сторону конца коллекции, отрицательное - к началу.
//
Процедура Сдвинуть(Колонка, Смещение) Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	Если (ТипЗнч(Колонка) = мТипЧисла) Тогда
		Индекс = Колонка;
	Иначе
		Индекс = Индекс(Колонка);
	КонецЕсли;
	
	мИндексыКолонок.Сдвинуть(Индекс, Смещение);
	
КонецПроцедуры // Сдвинуть()

// Процедура удаляет объект из коллекции.
//
// Параметры:
//	Индекс - Число, ОбработкаОбъект.TouchКнопкаКоманднойПанели. Позиция объекта в коллекции или сам объект.
//
Процедура Удалить(Индекс) Экспорт
	
	// Проверка входных параметров.
	
	// TODO: Проверка входных параметров.
	
	Если (ТипЗнч(Индекс) = Тип("Число")) Тогда
		Колонка = Получить(Индекс);
	Иначе
		Колонка = Индекс;
	КонецЕсли;
	
	Идентификатор = Идентификатор(Колонка);	
	Если (Идентификатор = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	мКолонки.Удалить(Идентификатор);
	мИменаКолонок.Удалить(Идентификатор);
	мИндексыКолонок.Удалить(мИндексыКолонок.НайтиПоЗначению(Идентификатор));
	
КонецПроцедуры // Удалить()


Процедура Высвободить() Экспорт
	
	// Высвобождение ссылок.
	Для Каждого Элемент Из мКолонки Цикл
		Элемент.Значение.Высвободить();
	КонецЦикла;
	
	мКолонки = Неопределено;
	мИменаКолонок = Неопределено;
	мИндексыКолонок = Неопределено;
	
КонецПроцедуры // Высвободить()


Функция Идентификатор(Колонка)
	
	Если (Колонка = Неопределено) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого Элемент Из мКолонки Цикл
		Если (Элемент.Значение = Колонка) Тогда
			Возврат Элемент.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции // Идентификатор()


// Инициализация переменных.
мКолонки = Новый Соответствие;
мИменаКолонок = Новый Соответствие;
мИндексыКолонок = Новый СписокЗначений;

мТипСтроки = Тип("Строка");
мТипЧисла = Тип("Число");

#КонецЕсли
