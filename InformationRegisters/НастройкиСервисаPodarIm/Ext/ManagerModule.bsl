
Функция ПолучитьДоступностьСервиса() Экспорт
	
	Возврат РегистрыСведений.НастройкиСервисаPodarIm.Получить().Использовать;
	
КонецФункции // ПолучитьДоступностьСервиса()

Функция ПолучитьПараметрыИнтернетСоединения() Экспорт
	
	Структура = Новый Структура("URL,ИмяПользователя,Пароль"); 
	
	ЗаполнитьЗначенияСвойств(Структура, РегистрыСведений.НастройкиСервисаPodarIm.Получить());
	
	Возврат Структура;
	
КонецФункции // ПолучитьПараметрыИнтернетСоединения()

Функция ПолучитьВидСертификата() Экспорт
	
	Возврат РегистрыСведений.НастройкиСервисаPodarIm.Получить().ВидСертификата;
	
КонецФункции // ПолучитьВидСертификата()

//Костенюк Александр-Старт 19.06.2012
Функция УстановитьСоединение() Экспорт
	
	// Проверка доступности
	ДоступностьСервиса = ПолучитьДоступностьСервиса();
	Если НЕ ДоступностьСервиса Тогда
		Если ОбщегоНазначения.РежимFrontOffice() Тогда
			FrontOffice.ВывестиПредупреждение(НСтр("ru='Web-сервис не используется!';uk='Web-сервіс не використовується!'"));		
		Иначе
			Сообщить(НСтр("ru='Web-сервис не используется!';uk='Web-сервіс не використовується!'"));
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	
	// Получение параметров соединения
	ПараметрыСоединения = ПолучитьПараметрыИнтернетСоединения();
	
	Попытка
		// Установка соединения
		ОписаниеТочкиВхода 	= Новый WSОпределения(ПараметрыСоединения.URL+"?wsdl", СокрЛП(ПараметрыСоединения.ИмяПользователя), СокрЛП(ПараметрыСоединения.Пароль));
		Сервис 				= ОписаниеТочкиВхода.Сервисы[0];
		ТочкаПодключения 	= Сервис.ТочкиПодключения[0];
		Прокси 				= Новый WSПрокси(ОписаниеТочкиВхода, Сервис.URIПространстваИмен, СокрЛП(Сервис.Имя), СокрЛП(ТочкаПодключения.Имя));
		Прокси.Пользователь = СокрЛП(ПараметрыСоединения.ИмяПользователя);
		Прокси.Пароль 		= СокрЛП(ПараметрыСоединения.Пароль);
		
		Возврат Прокси;
	Исключение
		ОписаниеОшибки = ОбработатьОшибкуСервиса(ОписаниеОшибки());
		Если ОбщегоНазначения.РежимFrontOffice() Тогда
			FrontOffice.ВывестиПредупреждение(ОписаниеОшибки);		
		Иначе
			Сообщить(ОписаниеОшибки);
		КонецЕсли;
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции
//Костенюк Александр-Финиш 19.06.2012

//Костенюк Александр-Старт 19.06.2012
Функция РазорватьСоединение(WebService) Экспорт
	WebService = Неопределено;
	Возврат WebService;
КонецФункции
//Костенюк Александр-Финиш 19.06.2012

//Костенюк Александр-Старт 19.06.2012
Процедура BeginCertificateApplying(WebService, code, summ, checkid, discount, id) Экспорт
	Попытка
		WebService.BeginCertificateApplying(code, summ, checkid, discount, id);
	Исключение
		ОписаниеОшибки = ОбработатьОшибкуСервиса(ОписаниеОшибки());
		Если ОбщегоНазначения.РежимFrontOffice() Тогда
			FrontOffice.ВывестиПредупреждение(ОписаниеОшибки);		
		Иначе
			Сообщить(ОписаниеОшибки);
		КонецЕсли;
	КонецПопытки;
КонецПроцедуры
//Костенюк Александр-Финиш 19.06.2012

//Костенюк Александр-Старт 19.06.2012
Функция CompleteCertificateApplying(WebService, id) Экспорт
	Попытка
		status = WebService.CompleteCertificateApplying(id);
	Исключение
		ОписаниеОшибки = ОбработатьОшибкуСервиса(ОписаниеОшибки());
		Если ОбщегоНазначения.РежимFrontOffice() Тогда
			FrontOffice.ВывестиПредупреждение(ОписаниеОшибки);		
		Иначе
			Сообщить(ОписаниеОшибки);
		КонецЕсли;
		status = Неопределено;
	КонецПопытки;
	Возврат status;
КонецФункции
//Костенюк Александр-Финиш 19.06.2012

//Костенюк Александр-Старт 19.06.2012
Функция RejectCertificate(WebService, code) Экспорт
	Попытка
		status = WebService.RejectCertificate(code);
	Исключение
		ОписаниеОшибки = ОбработатьОшибкуСервиса(ОписаниеОшибки());
		Если ОбщегоНазначения.РежимFrontOffice() Тогда
			FrontOffice.ВывестиПредупреждение(ОписаниеОшибки);		
		Иначе
			Сообщить(ОписаниеОшибки);
		КонецЕсли;
		status = Неопределено;
	КонецПопытки;
	Возврат status;
КонецФункции
//Костенюк Александр-Финиш 19.06.2012

//Костенюк Александр-Старт 20.06.2012
Функция ОбработатьОшибкуСервиса(Ошибка) Экспорт
	
	Если Найти(Ошибка, "Unknown error") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Произошла непредвиденная внутренняя ошибка сервиса!';uk='Відбулася непередбачена внутрішня помилка сервісу!'");
	ИначеЕсли Найти(Ошибка, "Certificate does not exist") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Указанный код сертификата не найден!';uk='Зазначений код сертифіката не знайдено!'");
	ИначеЕсли Найти(Ошибка, "Invalid parameters") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Переданные параметры не соответствуют установленному типу!';uk='Надіслані параметри не відповідають встановленим типу!'");
	ИначеЕсли Найти(Ошибка, "Inappropriate method") > 0 Тогда	
		ОписаниеОшибки = НСтр("ru='Запрошенный метод не может быть применен к данному сертификату!';uk='Запитаний метод не може бути застосований до даного сертифікату!'");
	ИначеЕсли Найти(Ошибка, "Gift not activated") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Пользователь не активировал сертификат для погашения!';uk='Користувач не активував сертифікат для погашення!'");
	ИначеЕсли Найти(Ошибка, "Certificate is used") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Сертификат уже использован (применен)!';uk='Сертифікат вже використаний (застосований)!'");
	ИначеЕсли Найти(Ошибка, "Space required after the Public Identifier") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Ошибка соединения с сервисом! Проверьте корректность введенного URL сервиса.';uk='Помилка зєднання з сервісом! Перевірте коректність введеного URL сервісу.'");
	ИначеЕсли Найти(Ошибка, "Аутентификация пользователя не выполнена") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Ошибка соединения с сервисом! Неверно введен логин/пароль.';uk='Помилка зєднання з сервісом! Невірно введений логін/пароль.'");
	ИначеЕсли Найти(Ошибка, "Ошибка работы с Интернет") > 0 Тогда
		ОписаниеОшибки = НСтр("ru='Ошибка соединения с сервисом! Ошибка работы с Интернет.';uk='Помилка зєднання з сервісом! Помилка роботы з Інтернет.'");
	Иначе
		ОписаниеОшибки = Ошибка;
	КонецЕсли;
	
	Возврат ОписаниеОшибки;
	
КонецФункции
//Костенюк Александр-Финиш 20.06.2012
