////////////////////////////////////////////////////////////////////////////////
// Секция сервисных функций
//

// Функция ДокументПроводится возвращает значение свойства Проведение
// объекта метаданнх из коллекции "Метаданные.Документы".
// 
// Параметры:
//  ИмяДокумента - Строка, возможно два варианта ПолноеИмя и КраткоеИмя,
//                 например, "Документ.ПриходнаяНакладная" или "ПриходнаяНакладная".
//
// Возвращаемое значение:
//  Булево.
//
Функция ДокументПроводится(знач ИмяДокумента) Экспорт
	
	ИмяДокументаМассив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяДокумента, ".");
	
	Если ИмяДокументаМассив.Количество() > 1 Тогда
		ИмяДокумента = ИмяДокументаМассив[1];
	КонецЕсли;
	
	Возврат Метаданные.Документы[ИмяДокумента].Проведение = 
	            Метаданные.СвойстваОбъектов.Проведение.Разрешить;
	
КонецФункции // ДокументПроводится()

// Заполняет дерево значений наименованиями объектов метаданных:
// справочники и документы.
//
&НаСервере
Процедура ЗаполнитьТипыОбъектовВДеревеЗначений()
	
	ДеревоОМ = РеквизитФормыВЗначение("ДеревоОбъектовМетаданных");
	ДеревоОМ.Строки.Очистить();
	
	// Тип параметра команды ИсторияИзменений содержит состав объектов для которых 
	// применяется версионирование
	МассивТипов = Метаданные.ОбщиеКоманды.ИсторияИзменений.ТипПараметраКоманды.Типы();
	ЕстьСправочники = Ложь;
	ЕстьДокументы = Ложь;
	ВсеСправочники = Справочники.ТипВсеСсылки();
	ВсеДокументы = Документы.ТипВсеСсылки();
	УзелСправочники = НеОпределено;
	УзелДокументы = НеОпределено;
	
	
	Для Каждого Тип Из МассивТипов Цикл
		Если ВсеСправочники.СодержитТип(Тип) Тогда
			Если УзелСправочники = НеОпределено Тогда
				УзелСправочники = ДеревоОМ.Строки.Добавить();
				УзелСправочники.СинонимНаименованияОбъекта = "Справочники";
				УзелСправочники.КлассОбъекта = "01КлассСправочникиКорень";
				УзелСправочники.КодКартинки = 2;
			КонецЕсли;
			НоваяСтрокаТаблицы = УзелСправочники.Строки.Добавить();
			НоваяСтрокаТаблицы.КодКартинки = 19;
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассСправочники";
			
		ИначеЕсли ВсеДокументы.СодержитТип(Тип) Тогда
			Если УзелДокументы = НеОпределено Тогда
				УзелДокументы = ДеревоОМ.Строки.Добавить();
				УзелДокументы.СинонимНаименованияОбъекта = "Документы";
				УзелДокументы.КлассОбъекта = "02КлассДокументыКорень";
				УзелДокументы.КодКартинки = 3;
			КонецЕсли;
			НоваяСтрокаТаблицы = УзелДокументы.Строки.Добавить();
			НоваяСтрокаТаблицы.КодКартинки = 20;
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассДокументы";
		КонецЕсли;
		МетаданныеОбъекта = Метаданные.НайтиПоТипу(Тип);
		НоваяСтрокаТаблицы.ТипОбъекта = МетаданныеОбъекта.ПолноеИмя();
		НоваяСтрокаТаблицы.СинонимНаименованияОбъекта = МетаданныеОбъекта.Синоним;
		НоваяСтрокаТаблицы.ВариантВерсионирования =	ПолучитьФункциональнуюОпцию("ВариантыВерсионированияОбъектов",
											Новый Структура("ТипОбъектаКонфигурации", НоваяСтрокаТаблицы.ТипОбъекта));
		Если НоваяСтрокаТаблицы.КлассОбъекта = "КлассДокументы" Тогда
			НоваяСтрокаТаблицы.Проводится = ? (МетаданныеОбъекта.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить, Истина, Ложь);
		КонецЕсли;
	КонецЦикла;
	ДеревоОМ.Строки.Сортировать("КлассОбъекта");
	Для Каждого УзелВерхнегоУровня Из ДеревоОМ.Строки Цикл
		УзелВерхнегоУровня.Строки.Сортировать("СинонимНаименованияОбъекта");
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДеревоОМ, "ДеревоОбъектовМетаданных");
	
КонецПроцедуры

// Записывает настройку версионирования
//
&НаСервереБезКонтекста
Процедура ЗаписатьНастройкуВерсионирования(знач ТипОбъекта, знач ВариантВерсионирования)
	
	ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
	                         ТипОбъекта, ВариантВерсионирования);
	
КонецПроцедуры

// По выделенным строкам определяет какие из них являются именованиями
// документов и возвращает массив
//
&НаКлиенте
Функция СредиВыделенныхДокументовЕстьНепроводящиеся()
	
	Для Каждого ИдентификаторСтроки Из Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки Цикл
		ЭлементДерева = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ЭлементДерева.КлассОбъекта = "КлассДокументы" И Не ЭлементДерева.Проводится Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

/////////////////////////////////////////////////////////////////
// Блок фунцкий устанавливающих вариант версионирования
//

// Устанавливает все настройки версионирования по умолчанию
// и переформирует дерево
//
&НаСервере
Процедура УстановитьНастройкиПоУмолчанию()
	
	Для Каждого ИдентификаторСтроки Из Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки Цикл
		ЭлементДерева = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ЭлементДерева.КлассОбъекта = "КлассСправочники" Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
			                                 ЭлементДерева.ТипОбъекта,
			                                 Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать);
		КонецЕсли;
		Если ЭлементДерева.КлассОбъекта = "КлассДокументы" Тогда
			Если ДокументПроводится(ЭлементДерева.ТипОбъекта) Тогда
				ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
				ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
				                                ЭлементДерева.ТипОбъекта,
				                                Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении);
			Иначе
				ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.Версионировать;
				ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
				                                ЭлементДерева.ТипОбъекта,
				                                Перечисления.ВариантыВерсионированияОбъектов.Версионировать);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает все настройки версионирования "не версионировать"
// и переформирует дерево
//
&НаСервере
Процедура УстановитьВариантВерсионированияНеВерсионировать()
	
	Для Каждого ИдентификаторСтроки Из Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки Цикл
		ЭлементДерева = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Если ЭлементДерева.КлассОбъекта = "КлассСправочники" Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
			                                   ЭлементДерева.ТипОбъекта,
			                                   Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать);
		КонецЕсли;
		Если ЭлементДерева.КлассОбъекта = "КлассДокументы" Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
			                                   ЭлементДерева.ТипОбъекта,
			                                   Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает все настройки версионирования "при проведении"
// и переформирует дерево
//
&НаСервере
Процедура УстановитьВариантВерсионированияВсегда()
	
	Для Каждого ИдентификаторСтроки Из Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки Цикл
		ЭлементДерева = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ЭлементДерева.КлассОбъекта = "КлассСправочники" Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.Версионировать;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
											ЭлементДерева.ТипОбъекта,
											Перечисления.ВариантыВерсионированияОбъектов.Версионировать);
		КонецЕсли;
		Если ЭлементДерева.КлассОбъекта = "КлассДокументы" Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.Версионировать;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
											ЭлементДерева.ТипОбъекта,
											Перечисления.ВариантыВерсионированияОбъектов.Версионировать);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает все настройки версионирования "при проведении"
// и переформирует дерево
//
&НаСервере
Процедура УстановитьВариантВерсионированияПриПроведении()
	
	Для Каждого ИдентификаторСтроки Из Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки Цикл
		ЭлементДерева = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ЭлементДерева.КлассОбъекта = "КлассДокументы" И ДокументПроводится(ЭлементДерева.ТипОбъекта) Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
										ЭлементДерева.ТипОбъекта,
										Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении);
		ИначеЕсли (ЭлементДерева.КлассОбъекта = "КлассДокументы" И НЕ ДокументПроводится(ЭлементДерева.ТипОбъекта))
			  ИЛИ (ЭлементДерева.КлассОбъекта = "КлассСправочники") Тогда
			ЭлементДерева.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.Версионировать;
			ВерсионированиеОбъектов.ЗаписатьНастройкуВерсионированияПоОбъекту(
										ЭлементДерева.ТипОбъекта,
										Перечисления.ВариантыВерсионированияОбъектов.Версионировать);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Секция обработчиков событий
//

// Обработчик события "при создании на сервере" формы
// Заполняет дерево формы наименованиями объектов метаданных
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТипыОбъектовВДеревеЗначений();
	
	СписокВыбораПолный = Новый СписокЗначений;
	СписокВыбораПолный.Добавить(Перечисления.ВариантыВерсионированияОбъектов.Версионировать);
	СписокВыбораПолный.Добавить(Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении);
	СписокВыбораПолный.Добавить(Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать);
	
	СписокВыбораБезПроведения = Новый СписокЗначений;
	СписокВыбораБезПроведения.Добавить(Перечисления.ВариантыВерсионированияОбъектов.Версионировать);
	СписокВыбораБезПроведения.Добавить(Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать);
	
КонецПроцедуры

// Обработчик события "перед началом изменения" элемента формы
// ДеревоОбъектовМетаданных.
// Отказывает в измении свойств, если указатель на корневом элементе
// 
&НаКлиенте
Процедура ДеревоОбъектовМетаданныхПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.КлассОбъекта = "01КлассСправочникиКорень"
	 Или Элемент.ТекущиеДанные.КлассОбъекта = "02КлассДокументыКорень" Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Обработка события "начало выбора из списка" поля дерева формы (ДеревоОбъектовМетаданных)
// Формирует и показывает список выбора варианта версионирования по классу объекта
//
&НаКлиенте
Процедура ВариантВерсионированияНачалоВыбораИзСписка(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаДерева = Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные;
	
	Элемент.СписокВыбора.Очистить();
	
	Если СтрокаДерева.КлассОбъекта = "КлассДокументы" И СтрокаДерева.Проводится Тогда
		СписокВыбора = СписокВыбораПолный;
	Иначе
		СписокВыбора = СписокВыбораБезПроведения;
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокВыбора Цикл
		Элемент.СписокВыбора.Добавить(ЭлементСписка.Значение);
	КонецЦикла;
	
КонецПроцедуры


// Обработчик события "обработка выбора" элемента поля дерева формы (ДеревоОбъектовМетаданных)
// Вписывает выбранное значение версионирования в таблицу и записывает регистр сведений
//
&НаКлиенте
Процедура ВариантВерсионированияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтрокаДерева = Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные;
	СтрокаДерева.ВариантВерсионирования = ВыбранноеЗначение;
	
	ТипОбъекта             = СтрокаДерева.ТипОбъекта;
	ВариантВерсионирования = СтрокаДерева.ВариантВерсионирования;
	
	ЗаписатьНастройкуВерсионирования(ТипОбъекта, ВариантВерсионирования);
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Заполнить по умолчанию" командной панели формы
// Устанавливает все настройки версионирования по умолчанию
//
&НаКлиенте
Процедура УстановитьНастройкиПоУмолчаниюВыполнить(Команда)
	
	УстановитьНастройкиПоУмолчанию();
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Не версионировать" командной панели формы
//
&НаКлиенте
Процедура УстановитьВариантВерсионированияНеВерсионироватьВыполнить(Команда)
	
	УстановитьВариантВерсионированияНеВерсионировать();
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Версионировать при проведении" командной панели формы
//
&НаКлиенте
Процедура УстановитьВариантВерсионированияПриПроведенииВыполнить(Команда)
	
	Если СредиВыделенныхДокументовЕстьНепроводящиеся() Тогда
		Предупреждение(НСтр("ru = 'Документам, которые не могут быть проведены, будет установлен режим версонирования ""Версионировать всегда"".'"));
	КонецЕсли;
	
	УстановитьВариантВерсионированияПриПроведении();
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Версионировать всегда" командной панели формы
//
&НаКлиенте
Процедура УстановитьРежимВерсионированияВсегдаВыполнить(Команда)
	
	УстановитьВариантВерсионированияВсегда();
	
КонецПроцедуры
