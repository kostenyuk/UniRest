
Функция ПолучитьОчереднойКод(Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МАКСИМУМ(СотрудникиОрганизаций.Код) КАК Код
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.ЭтоГруппа
		|	И (НЕ СотрудникиОрганизаций.Ссылка = &Ссылка)");
	Если (Объект = Неопределено) Тогда
		Запрос.УстановитьПараметр("Ссылка", Объект);
	Иначе
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	КонецЕсли; 			
	Выборка = Запрос.Выполнить().Выбрать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Код) Тогда
		Возврат ОбщегоНазначения.ПолучитьСледующийНомер(СокрП(Выборка.Код));
	КонецЕсли;
	
	Возврат "0000000001";
	
КонецФункции // ПолучитьОчереднойКод()

//Костенюк Александр-Старт 19.02.2013
// Функция формирует таблицу пользователей системы
//
// Параметры:
// Код - Тип: Строка. Код элемента справочника.
//
// ВозвращаемоеЗначение:
// РезультатЗапроса - Тип: РезультатЗапроса. Результат выполнения запроса.
//
Функция СформироватьЗапросПользователей(Код = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Пользователи.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	НЕ Пользователи.ЭтоГруппа
	               |	И Пользователи.Код = &Код";
	Если Код = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Пользователи.Код = &Код", "Истина");
		Запрос.Текст = ТекстЗапроса;
	Иначе
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Код", СокрЛП(Код));
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
		
КонецФункции
//Костенюк Александр-Финиш 19.02.2013
