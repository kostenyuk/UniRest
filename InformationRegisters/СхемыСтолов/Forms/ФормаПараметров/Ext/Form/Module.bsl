
&НаКлиенте
Процедура OK(Команда)
	
	Отказ = Ложь;
	
	OKНаСервере(Отказ);
	
	Если Не Отказ Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры // OK()

&НаСервере
Процедура OKНаСервере(Отказ)
	
	Если Не Отказ Тогда
		Настройки = Новый Структура;
		Настройки.Вставить("МинимальноеВремя", ИнтервалВыбораВремениМинимальноеВремя);
		Настройки.Вставить("МаксимальноеВремя", ИнтервалВыбораВремениМаксимальноеВремя);
		РегистрыСведений.СхемыСтолов.УстановитьИнтервалВыбораВремени(Отказ, Настройки); 
	КонецЕсли;
	
	Если Не Отказ Тогда
		Настройки = Новый Структура;
		Настройки.Вставить("ГраницаТекущихЗаказовПокупателейВремя", ГраницаТекущихЗаказовПокупателейВремя);
		Настройки.Вставить("ГраницаПросроченныхЗаказовПокупателейВремя", ГраницаПросроченныхЗаказовПокупателейВремя);
		Настройки.Вставить("ГраницаПредупрежденияНераспределенныхВремя", ГраницаПредупрежденияНераспределенныхВремя);
		РегистрыСведений.СостояниеЗаказовПокупателей.УстановитьПараметрыРасчетаСостоянияЗаказовПокупателей(Отказ, Настройки);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры // OKНаСервере()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройки = РегистрыСведений.СхемыСтолов.ПолучитьИнтервалВыбораВремени();
	ИнтервалВыбораВремениМинимальноеВремя = Настройки.МинимальноеВремя;
	ИнтервалВыбораВремениМаксимальноеВремя = Настройки.МаксимальноеВремя;
	
	Настройки = РегистрыСведений.СостояниеЗаказовПокупателей.ПолучитьПараметрыРасчетаСостоянияЗаказовПокупателей();
	ГраницаТекущихЗаказовПокупателейВремя = Настройки.ГраницаТекущихЗаказовПокупателейВремя;
	ГраницаПросроченныхЗаказовПокупателейВремя = Настройки.ГраницаПросроченныхЗаказовПокупателейВремя;
	ГраницаПредупрежденияНераспределенныхВремя = Настройки.ГраницаПредупрежденияНераспределенныхВремя;
	
КонецПроцедуры // ПриСозданииНаСервере()
