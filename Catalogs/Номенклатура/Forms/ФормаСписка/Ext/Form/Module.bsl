
&НаКлиенте
Процедура УстановитьВидимость()
	
	// Командная панель.
	Элементы.ПодробныйРежим.Пометка = ПодробныйРежим;
	
КонецПроцедуры // УстановитьВидимость()

&НаКлиенте
//Костенюк Александр-Старт 08.05.2013
Процедура УстановитьДоступность()
	
	// Командная панель.
	Если ИспользуетсяОбменСБухгалтерией() Тогда
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("ФормаСоздать");
		СтруктураРеквизитов.Вставить("ФормаСоздатьГруппу");
		СтруктураРеквизитов.Вставить("ФормаСкопировать");
		СтруктураРеквизитов.Вставить("ФормаУстановитьПометкуУдаления");
		Для каждого Элемент Из СтруктураРеквизитов Цикл
			// Определим, есть ли ЭУ с таким именем.
			ЭУ = ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.Найти(Элемент.Ключ);
			Если ЭУ  <> Неопределено Тогда 
				// есть такой элемент
				ЭУ.Доступность = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // УстановитьДоступность()
//Костенюк Александр-Финиш 08.05.2013

//Костенюк Александр-Старт 25.03.2014
Процедура УстановитьДоступностьНаСервере()
	
	// Доступность команд работы с меню
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ГруппаРаспределение.ПодчиненныеЭлементы.РаспределитьНоменклатуруМеню.Доступность = (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Управляющий"));
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ГруппаРаспределение.ПодчиненныеЭлементы.РаспределитьНоменклатуруМодификаторовНоменклатуры.Доступность = (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Управляющий"));
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ГруппаРаспределение.ПодчиненныеЭлементы.РаспределитьНоменклатуруУсловийНоменклатуры.Доступность = (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Управляющий"));
	
КонецПроцедуры
//Костенюк Александр-Финиш 25.03.2014

&НаКлиенте
Процедура Период(Команда)
	
	Если __РаботаСДиалогамиКлиент.ВвестиСтандартнуюДатуНачала(Период) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Период", Период);
	КонецЕсли; 
	
КонецПроцедуры // Период()

&НаКлиенте
Процедура ПодробныйРежим(Команда)
	
	ПодробныйРежим = Не ПодробныйРежим;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПодробныйРежим()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Период.
	Если ЗначениеЗаполнено(Параметры.Дата) Тогда
		Период.Дата = Параметры.Дата;
	Иначе
		Период.Вариант = ВариантСтандартнойДатыНачала.НачалоЭтогоДня;
	КонецЕсли; 
	
	// Параметры.
	Список.Параметры.УстановитьЗначениеПараметра("Период", Период);
	ОбработкаОповещенияСервер(Неопределено);
	
	// Режим выбора.
	__РаботаСДиалогамиКлиентСервер.ФормаРежимВыбора(ЭтаФорма, Элементы.Список,
		"ФормаСправочникРабочиеЦентрыНастройкаНоменклатура, ГруппаРаспределение, БелыйСписокНоменклатуры,ЧерныйСписокНоменклатуры, Период, АктуальзироватьНоменклатуруМеню, ПодробныйРежим, ИндексМодификаторовУсловийНоменклатуры,ИндексЧерногоБелогоСписка,НаименованиеПолное,Себестоимость,СтавкаНДС,Безскидочный,ТипНоменклатуры,НоменклатурнаяГруппа,КатегорияНоменклатуры,АналитическаяГруппа,Комментарий");
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройка формы.
	УстановитьВидимость();
	УстановитьДоступность(); //Костенюк Александр 08.05.2013
	УстановитьДоступностьНаСервере(); //Костенюк Александр 25.03.2014
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ОбработкаОповещенияСервер(ИмяСобытия);
	
КонецПроцедуры // ОбработкаОповещения()

&НаСервере
Процедура ОбработкаОповещенияСервер(ИмяСобытия)

	Если (ИмяСобытия = Неопределено) Или __УправлениеДаннымиКлиентСервер.ОповещениеИзмененияМодификаторовУсловий(ИмяСобытия) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("МодификаторыСписок", РегистрыСведений.МодификаторыНоменклатуры.ПолучитьСписокНоменклатуры());
		Список.Параметры.УстановитьЗначениеПараметра("УсловияСписок", РегистрыСведений.УсловияНоменклатуры.ПолучитьСписокНоменклатуры());
	КонецЕсли; 
	
	Если (ИмяСобытия = Неопределено) Или __УправлениеДаннымиКлиентСервер.ОповещениеИзмененияЧерногоБелогоСписка(ИмяСобытия) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("БелыйСписок", РегистрыСведений.БелыйСписокНоменклатуры.ПолучитьСписокНоменклатуры());
		Список.Параметры.УстановитьЗначениеПараметра("ЧерныйСписок", РегистрыСведений.ЧерныйСписокНоменклатуры.ПолучитьСписокНоменклатуры());
	КонецЕсли; 
	
	Если (ИмяСобытия = Неопределено) Или __УправлениеДаннымиКлиентСервер.ОповещениеИзмененияАктуализацияМеню(ИмяСобытия) Тогда
		Элементы.АктуальзироватьНоменклатуруМеню.Заголовок = РегистрыСведений.НоменклатураМеню.ПолучитьЗаголовокКоманды();
		Список.Параметры.УстановитьЗначениеПараметра("НеактуализированныйСписок", РегистрыСведений.НоменклатураМеню.ПолучитьСписокНеактуализированнойНоменклатуры());
	КонецЕсли;
	
	//Костенюк Александр-Старт 01.07.2014
	Если (ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ОбменДанными2K_CRS")) И (ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел())) Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "ЦеныНоменклатурыСрезПоследних.ТипЦены = &ТипЦены", "ИСТИНА");
	Иначе
		Если (ИмяСобытия = Неопределено) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ТипЦены", ПараметрыСеанса.ТекущийРесторан.ТипЦен);	
		КонецЕсли;
	КонецЕсли;
	//Костенюк Александр-Финиш 01.07.2014
	
КонецПроцедуры // ОбработкаОповещенияСервер()

&НаСервере
//Костенюк Александр-Старт 07.05.2013
Функция ИспользуетсяОбменСБухгалтерией()
	Возврат Константы.ИспользоватьОбменДаннымиСБухгалтерией.Получить();
КонецФункции 
//Костенюк Александр-Финиш 07.05.2013
