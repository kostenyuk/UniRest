
#Если Клиент Тогда  
	
// Процедура заполнения табличного поля настроек производства.
//
Процедура ТаблицаНастроекПроизводстваПрочитать(ЭтотОбъект, ТабличноеПоле, Данные) Экспорт
	
	// Текущая позиция (I).
	Если (Не ТабличноеПоле = Неопределено) Тогда
		Если (Не ТабличноеПоле.ТекущаяСтрока = Неопределено) Тогда
			ТекущаяПроизводственнаяГруппа = ТабличноеПоле.ТекущиеДанные.ПроизводственнаяГруппа;
		КонецЕсли;
	КонецЕсли;
	
	// Выборка данных.
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	&Ресторан КАК Ресторан,
	                      |	ПроизводственныеГруппы.Ссылка КАК ПроизводственнаяГруппа,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПроизводства.ПроизводственнаяГруппа ЕСТЬ NULL 
	                      |			ТОГДА ЛОЖЬ
	                      |		ИНАЧЕ ИСТИНА
	                      |	КОНЕЦ КАК Актуальность,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПроизводства.ПродолжительностьВыполнения ЕСТЬ NULL 
	                      |			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 10, 0)
	                      |		ИНАЧЕ НастройкиПроизводства.ПродолжительностьВыполнения
	                      |	КОНЕЦ КАК ПродолжительностьВыполнения,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПроизводства.ПродолжительностьЗадержки ЕСТЬ NULL 
	                      |			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	                      |		ИНАЧЕ НастройкиПроизводства.ПродолжительностьЗадержки
	                      |	КОНЕЦ КАК ПродолжительностьЗадержки,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПроизводства.ПродолжительностьДоставки ЕСТЬ NULL 
	                      |			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 5, 0)
	                      |		ИНАЧЕ НастройкиПроизводства.ПродолжительностьДоставки
	                      |	КОНЕЦ КАК ПродолжительностьДоставки,
	                      |	ВЫБОР
	                      |		КОГДА НастройкиПроизводства.ПродолжительностьПроизводства ЕСТЬ NULL 
	                      |			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 5, 0)
	                      |		ИНАЧЕ НастройкиПроизводства.ПродолжительностьПроизводства
	                      |	КОНЕЦ КАК ПродолжительностьПроизводства
	                      |ИЗ
	                      |	Справочник.ПроизводственныеГруппы КАК ПроизводственныеГруппы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПроизводства КАК НастройкиПроизводства
	                      |		ПО (НастройкиПроизводства.Ресторан = &Ресторан)
	                      |			И (НастройкиПроизводства.ПроизводственнаяГруппа = ПроизводственныеГруппы.Ссылка)
	                      |ГДЕ
	                      |	ПроизводственныеГруппы.Актуальность
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПроизводственныеГруппы.Наименование");
	Запрос.УстановитьПараметр("Ресторан", ЭтотОбъект.Ссылка);
	
	// Перенос данных.
	Данные = Запрос.Выполнить().Выгрузить();
	
	// Текущая позиция (II).
	Если (Не ТабличноеПоле = Неопределено) И (Не ТекущаяПроизводственнаяГруппа = Неопределено) Тогда
		ТекущаяСтрока = Данные.Найти(ТекущаяПроизводственнаяГруппа, "ПроизводственнаяГруппа");
		Если (Не ТекущаяСтрока = Неопределено) Тогда
			ТабличноеПоле.ТекущаяСтрока = ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ТаблицаНастроекПроизводстваПрочитать()

// Процедура актуализации табличного поля настроек производства.
//
Процедура ТаблицаНастроекПроизводстваЗаписать(ТабличноеПоле, Данные, Отказ = Ложь) Экспорт
	
	// Запись уже была прервана, продолжение не имеет смысла.
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если (Не Данные.Количество() = 0) Тогда
			
		// Запись набора записей.
		НаборЗаписей = РегистрыСведений.НастройкиПроизводства.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Ресторан.Использование = Истина;
		НаборЗаписей.Отбор.Ресторан.Значение = Ссылка;
		
		// Перенос данных.
		НаборЗаписей.Загрузить(ОбщегоНазначения.ТаблицуЗначенийРазделитьПоОтбору(Данные, Новый Структура("Актуальность", Истина)).ТаблицаУдовлетворяетОтбору);
		
		// Нормализация.
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.Ресторан = НаборЗаписей.Отбор.Ресторан.Значение;
		КонецЦикла;
		
		// Запись набора записей.
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, ,, НаборЗаписей, ЭтотОбъект);
		КонецПопытки;
	
	КонецЕсли;
	
КонецПроцедуры // ТаблицаНастроекПроизводстваЗаписать()

// Обработчик события ТаблицаНастроекПроизводства.ПриВыводеСтроки элемента.
//
Процедура ТаблицаНастроекПроизводстваВывестиСтроку(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	// Картинка.
	Если Элемент.Колонки.Картинка.Видимость Тогда
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Картинка.Картинка = БиблиотекаКартинок.РегистрСведенийЗапись;
	КонецЕсли; 
	
	// Актуальность.	
	Если Элемент.Колонки.Актуальность.Видимость Тогда
		ОформлениеСтроки.Ячейки.Актуальность.УстановитьТекст(ДанныеСтроки.ПроизводственнаяГруппа);
	КонецЕсли; 
	
	// ПродолжительностьВыполнения.
	Для Каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
		Если (Ячейка.Имя = "Актуальность") Или (Ячейка.Имя = "Картинка") Тогда
			Продолжить;
		КонецЕсли;
		Ячейка.ТолькоПросмотр = Не ДанныеСтроки.Актуальность;
	КонецЦикла;
	
КонецПроцедуры // ТаблицаНастроекПроизводстваВывестиСтроку()

#КонецЕсли

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Костенюк Александр-Старт 20.11.2013
	// Проверка изменения реквизита "ТипЦен"
	Если НЕ ЭтотОбъект.Ссылка.Пустая() Тогда
		Если ЭтотОбъект.Ссылка.ТипЦен <> ТипЦен Тогда
			ДополнительныеСвойства.Вставить("ТипЦенИзменен", Истина);
		КонецЕсли;
	КонецЕсли;
	//Костенюк Александр-Финиш 20.11.2013
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Костенюк Александр-Старт 20.11.2013
	// Механизм регистрации изменений всех цен по типу цены при изменении реквизита "Тип цен"
	Если НЕ ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ОбменДанными2K_CRS") Тогда
		Возврат;
	КонецЕсли;
	ЭтотУзел = ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел();
	ЭтоЦБ = ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(ЭтотУзел);
	Если НЕ ЭтоЦБ Тогда
		Возврат;
	КонецЕсли;
	ТипЦенИзменен = Ложь;
	ТипЦенИзменен = ДополнительныеСвойства.Свойство("ТипЦенИзменен");
	Если ТипЦенИзменен Тогда
		Узел = ПланыОбмена.ОбменДанными2K_CRS.НайтиПоРеквизиту("Ресторан", Ссылка);
		Если НЕ Узел.Пустая() Тогда
			НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ТипЦены.Значение = ТипЦен;
			НаборЗаписей.Отбор.ТипЦены.Использование = Истина;
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	ЦеныНоменклатурыСрезПоследних.Период,
				               |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
				               |	ЦеныНоменклатурыСрезПоследних.ТипЦены,
				               |	ЦеныНоменклатурыСрезПоследних.Цена,
				               |	ЦеныНоменклатурыСрезПоследних.Себестоимость
				               |ИЗ
				               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
				               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
				               |		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = СпрНоменклатура.Ссылка
				               |ГДЕ
				               |	ЦеныНоменклатурыСрезПоследних.ТипЦены = &ТипЦены";
				Запрос.УстановитьПараметр("ТипЦены", ТипЦен);
				РезультатЗапроса = Запрос.Выполнить();
				Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
					НаборЗаписей.Отбор.ТипЦены.Значение = ТипЦен;
					НаборЗаписей.Отбор.ТипЦены.Использование = Истина;
					НаборЗаписей.Отбор.Номенклатура.Значение = Выборка.Номенклатура;
					НаборЗаписей.Отбор.Номенклатура.Использование = Истина;
					НаборЗаписей.Отбор.Период.Значение = Выборка.Период;
					НаборЗаписей.Отбор.Период.Использование = Истина;
					ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//Костенюк Александр-Финиш 20.11.2013
	
КонецПроцедуры
