////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// Переопределяемые процедуры и функции для интеграции между собой подсистем библиотеки БСП.
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// СтандартныеПодсистемы.ВариантыОтчетов

/////////////////////////////////////////////////////////////////////////////////
// Варианты отчетов

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма (УправляемаяФорма)
//   Остальные параметры передаются из параметров обработчика "как есть",
//       см. события для "УправляемаяФорма" в справке.
//
Процедура ФормаОтчетаПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	// СтандартныеПодсистемы.РассылкаОтчетов
	РассылкаОтчетов.ФормаОтчетаДобавитьКоманды(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.РассылкаОтчетов
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

/////////////////////////////////////////////////////////////////////////////////

// СтандартныеПодсистемы.РассылкаОтчетов

/////////////////////////////////////////////////////////////////////////////////
// Рассылка отчетов

// Записывает вложения в папку.
// 
// Параметры: см. описание процедуры "ВыполнитьДоставку" модуля "РассылкаОтчетов"
//
Процедура РассылкаОтчетовДоставитьВПапку(ПараметрыДоставки, Вложения) Экспорт
	
	// СтандартныеПодсистемы.РаботаСФайлами
	
	// Перенос вложений в таблицу
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаВложений = Новый ТаблицаЗначений;
	ТаблицаВложений.Колонки.Добавить("ИмяФайла",              Новый ОписаниеТипов("Строка"));
	ТаблицаВложений.Колонки.Добавить("ПолныйПутьКФайлу",      Новый ОписаниеТипов("Строка"));
	ТаблицаВложений.Колонки.Добавить("Файл",                  Новый ОписаниеТипов("Файл"));
	ТаблицаВложений.Колонки.Добавить("ФайлСсылка",            Новый ОписаниеТипов("СправочникСсылка.Файлы"));
	ТаблицаВложений.Колонки.Добавить("ИмяФайлаБезРасширения", Метаданные.Справочники.Файлы.Реквизиты.ПолноеНаименование.Тип);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого Вложение Из Вложения Цикл
		СтрокаТаблицы = ТаблицаВложений.Добавить();
		СтрокаТаблицы.ИмяФайла              = Вложение.Ключ;
		СтрокаТаблицы.ПолныйПутьКФайлу      = Вложение.Значение;
		СтрокаТаблицы.Файл                  = Новый Файл(СтрокаТаблицы.ПолныйПутьКФайлу);
		СтрокаТаблицы.ИмяФайлаБезРасширения = СтрокаТаблицы.Файл.ИмяБезРасширения;
	КонецЦикла;
	
	// Поиск существующих файлов
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Файлы.Ссылка,
	|	Файлы.ПолноеНаименование
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла = &ВладелецФайла
	|	И Файлы.ПолноеНаименование В(&МассивИменФайлов)";
	
	Запрос.УстановитьПараметр("ВладелецФайла", ПараметрыДоставки.Папка);
	Запрос.УстановитьПараметр("МассивИменФайлов", ТаблицаВложений.ВыгрузитьКолонку("ИмяФайлаБезРасширения"));
	
	СуществующиеФайлы = Запрос.Выполнить().Выгрузить();
	Для Каждого Файл Из СуществующиеФайлы Цикл
		СтрокаТаблицы = ТаблицаВложений.Найти(Файл.ПолноеНаименование, "ИмяФайлаБезРасширения");
		СтрокаТаблицы.ФайлСсылка = Файл.Ссылка;
	КонецЦикла;
	
	// Постоянные переменные
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Рассылка отчетов %1 от %2'"),
		"'"+ ПараметрыДоставки.Рассылка +"'",
		Формат(ПараметрыДоставки.ДатаВыполнения, "ДЛФ=DT")
	);
	ХранитьВерсии = Истина;
	ЭтоВебКлиент = Ложь;
	АдресВременногоХранилищаТекста = "";
	Пользователь = Пользователи.ТекущийПользователь();
	ЗаписатьВИсторию = Истина;
	ВладелецФайла = ПараметрыДоставки.Папка;
	
	Для Каждого Вложение Из ТаблицаВложений Цикл
		// Временные переменные
		АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Вложение.ПолныйПутьКФайлу));
		ВремяИзменения              = Вложение.Файл.ПолучитьВремяИзменения();
		ВремяИзмененияУниверсальное = Вложение.Файл.ПолучитьУниверсальноеВремяИзменения();
		Размер                      = Вложение.Файл.Размер();
		РасширениеБезТочки          = СтрЗаменить(Вложение.Файл.Расширение, ".", "");
		ИмяБезРасширения            = Вложение.ИмяФайлаБезРасширения;
		
		// Запись
		Если ЗначениеЗаполнено(Вложение.ФайлСсылка) Тогда
			//РаботаСФайламиВызовСервера.СоздатьВерсиюИОбновитьВерсиюВФайле(
			//	ВремяИзменения,
			//	ВремяИзмененияУниверсальное,
			//	Вложение.ФайлСсылка, 
			//	ИмяБезРасширения, 
			//	Размер, 
			//	РасширениеБезТочки, 
			//	АдресВременногоХранилищаФайла, 
			//	АдресВременногоХранилищаТекста,
			//	ЭтоВебКлиент,
			//	Пользователь
			//);
			
			Вложение.ФайлСсылка = РассылкаОтчетовВызовСервера.СоздатьФайлСВерсией(
			ВладелецФайла,
			ИмяБезРасширения,
			РасширениеБезТочки,
			ВремяИзменения,
			ВремяИзмененияУниверсальное,
			Размер,
			АдресВременногоХранилищаФайла,
			АдресВременногоХранилищаТекста,
			ЭтоВебКлиент,
			Пользователь,
			Комментарий,
			ЗаписатьВИсторию
			);

		Иначе
			//Вложение.ФайлСсылка = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(
			Вложение.ФайлСсылка = РассылкаОтчетовВызовСервера.СоздатьФайлСВерсией(
				ВладелецФайла,
				ИмяБезРасширения,
				РасширениеБезТочки,
				ВремяИзменения,
				ВремяИзмененияУниверсальное,
				Размер,
				АдресВременногоХранилищаФайла,
				АдресВременногоХранилищаТекста,
				ЭтоВебКлиент,
				Пользователь,
				Комментарий,
				ЗаписатьВИсторию
			);
		КонецЕсли;
		
		// Заполнение ссылки на файл
		Если ПараметрыДоставки.ДобавлятьСсылки <> "" Тогда
			ПараметрыДоставки.ПредставлениеОтчетовПолучателя = СтрЗаменить(
				ПараметрыДоставки.ПредставлениеОтчетовПолучателя,
				Вложение.ПолныйПутьКФайлу,
				ПолучитьНавигационнуюСсылкуИнформационнойБазы() +"#"+ ПолучитьНавигационнуюСсылку(Вложение.ФайлСсылка)
			);
		КонецЕсли;
		
		// Очистка
		УдалитьИзВременногоХранилища(АдресВременногоХранилищаФайла);
	КонецЦикла;
	
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

// Получает настройки прокси на сервере.
//
Процедура РассылкаОтчетовНастройкиПрокси(Прокси) Экспорт
	
	//// СтандартныеПодсистемы.ПолучениеФайловИзИнтернета
	//НастройкаПроксиСервера = ПолучениеФайловИзИнтернета.ПолучитьНастройкиПроксиНаСервере1СПредприятие();
	//Если НастройкаПроксиСервера <> Неопределено Тогда
	//	Прокси = Новый ИнтернетПрокси();
	//	Прокси.Установить("ftp", НастройкаПроксиСервера["Сервер"], НастройкаПроксиСервера["Порт"]);
	//	ЗаполнитьЗначенияСвойств(Прокси, НастройкаПроксиСервера);
	//КонецЕсли;
	//// Конец СтандартныеПодсистемы.ПолучениеФайловИзИнтернета 
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.РассылкаОтчетов
