
&НаКлиенте
Процедура УстановитьВидимость()
	
	// Командная панель.
	Элементы.ПодробныйРежим.Пометка = ПодробныйРежим;
	
	// Элементы.
	Элементы.Перенос.Видимость = Элементы.ПереносНоменклатуры.Пометка;
	
КонецПроцедуры // УстановитьВидимость()

&НаСервере
//Костенюк Александр-Старт 21.10.2013
Процедура УстановитьДоступностьНаСервере()
	
	ИспользоватьАвтоматическоеМеню = Константы.ИспользоватьАвтоматическоеМеню.Получить();
	Элементы.ОбновитьАвтоматическоеМеню.Доступность = ИспользоватьАвтоматическоеМеню;
	//ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ПереносНоменклатуры.Доступность = (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("Управляющий"));
	
КонецПроцедуры
//Костенюк Александр-Финиш 21.10.2013

&НаКлиенте
Процедура ПодробныйРежим(Команда)
	
	ПодробныйРежим = Не ПодробныйРежим;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПодробныйРежим()

&НаКлиенте
Процедура ПереносНоменклатуры(Команда)
	
	// Настройка формы.
	Элементы.ПереносНоменклатуры.Пометка = Не Элементы.ПереносНоменклатуры.Пометка;
	ПредотвратитьУстановкуАктуальности = Истина;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПереносНоменклатуры()

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	__РаботаСДиалогамиКлиентСервер.ВладелецСпискаПриИзменении(Список, Владелец);
	
КонецПроцедуры // ВладелецПриИзменении()

&НаКлиенте
Процедура СписокПриАктивизацииЯчейки(Элемент)

	//Костенюк Александр-Закомментировано 05.09.2012 __ИнтерактивноеУправлениеДаннымиКлиент.АктуальностьСправочникаПриАктивизацииЯчейки(Элемент);
	// При таком способе периодически слетают флажки при закрытии формы списка
	
КонецПроцедуры	// СписокПриАктивизацииЯчейки()

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	__ИнтерактивноеУправлениеДаннымиКлиент.ПереносМенюПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле, "Меню", Список);

КонецПроцедуры // СписокПроверкаПеретаскивания()

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	__ИнтерактивноеУправлениеДаннымиКлиент.ПереносМенюПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле, "Меню", Список);

КонецПроцедуры // СписокПеретаскивание()

&НаКлиенте
Процедура ПереносВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	__ИнтерактивноеУправлениеДаннымиКлиент.ПереносМенюВыборЗначения(Элементы.Список, Значение, СтандартнаяОбработка, "Меню", Список);

КонецПроцедуры // ПереносВыборЗначения()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Владелец.
	Владелец = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
		__РаботаСДиалогамиКлиентСервер.ПолучитьВладелецаСписка(Список, Элементы.Список), 
		Справочники.ВидыМеню.ОсновнойВидМеню());
	
	// Параметры.
	Если Параметры.Свойство("ТекущаяСтрока") Тогда
		Параметры.ТекущаяСтрока = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
			Справочники.Меню.НайтиПоНоменклатуре(Параметры.ТекущаяСтрока, Владелец),
			Справочники.Меню.НайтиПоНоменклатуре(Параметры.ТекущаяСтрока, Неопределено));
	КонецЕсли; 
	ОбработкаОповещенияСервер(Неопределено);
	
	// Владелец.
	__РаботаСДиалогамиКлиентСервер.ВладелецСпискаПриСоздании(Список, Элементы.Владелец, Владелец);
	
	// Режим выбора.
	__РаботаСДиалогамиКлиентСервер.ФормаРежимВыбора(ЭтаФорма, Элементы.Список, 
		"БелыйСписокНоменклатуры,ЧерныйСписокНоменклатуры, ПодробныйРежим, ПереносНоменклатуры, АктуальзироватьНоменклатуруМеню, ИндексАктуальности,ИндексЧерногоБелогоСписка,ПериодДействия,НоменклатурнаяГруппа,Комментарий");

	// Режим переноса номенклатуры.
	Если Параметры.РежимПереносаНоменклатуры Тогда
		Элементы.ПереносНоменклатуры.Пометка = Не Элементы.ПереносНоменклатуры.Пометка;
		ПредотвратитьУстановкуАктуальности = Истина;
	КонецЕсли;
	
	Период = ТекущаяДата(); //Костенюк Александр 28.10.2016
	
	УстановитьДоступностьНаСервере(); //Костенюк Александр 21.10.2013
		
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ОбработкаОповещенияСервер(ИмяСобытия);
	
КонецПроцедуры // ОбработкаОповещения()

&НаСервере
Процедура ОбработкаОповещенияСервер(ИмяСобытия)
	
	Если (ИмяСобытия = Неопределено) Или __УправлениеДаннымиКлиентСервер.ОповещениеИзмененияЧерногоБелогоСписка(ИмяСобытия) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("БелыйСписок", РегистрыСведений.БелыйСписокНоменклатуры.ПолучитьСписокНоменклатуры());
		Список.Параметры.УстановитьЗначениеПараметра("ЧерныйСписок", РегистрыСведений.ЧерныйСписокНоменклатуры.ПолучитьСписокНоменклатуры());
	КонецЕсли; 
	
	Если (ИмяСобытия = Неопределено) Или __УправлениеДаннымиКлиентСервер.ОповещениеИзмененияАктуализацияМеню(ИмяСобытия) Тогда
		Элементы.АктуальзироватьНоменклатуруМеню.Заголовок = РегистрыСведений.НоменклатураМеню.ПолучитьЗаголовокКоманды();
		Список.Параметры.УстановитьЗначениеПараметра("НеактуализированныйСписок", РегистрыСведений.НоменклатураМеню.ПолучитьСписокНеактуализированнойНоменклатуры());
	КонецЕсли;
	
	//Костенюк Александр-Старт 01.07.2014
	Если (ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ОбменДанными2K_CRS")) И (ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел())) Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "ЦеныНоменклатурыСрезПоследних.ТипЦены = &ТипЦены", "ИСТИНА");
	Иначе
		Если (ИмяСобытия = Неопределено) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ТипЦены", ПараметрыСеанса.ТекущийРесторан.ТипЦен);	
		КонецЕсли;
	КонецЕсли;
	//Костенюк Александр-Финиш 01.07.2014
	
КонецПроцедуры // ОбработкаОповещенияСервер()

&НаКлиенте
//Костенюк Александр-Старт 05.09.2012
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Если Поле.Имя = "ИндексАктуальности" Тогда
	//	СтандартнаяОбработка = Ложь;
	//	__ИнтерактивноеУправлениеДаннымиКлиент.АктуальностьСправочникаПриАктивизацииЯчейки(Элемент);
	//КонецЕсли;
	
КонецПроцедуры
//Костенюк Александр-Финиш 05.09.2012

&НаКлиенте
//Костенюк Александр-Старт 16.11.2012
Процедура УдалитьНеактуальные(Команда)
	
	ТолькоВыделенное 	= Ложь;
	ВыполнятьУдаление 	= Истина;
	
	Режим = РежимДиалогаВопрос.ДаНетОтмена;
	Текст = "ru='Удалить все неактуальные или только выделенное?"+Символы.ПС+"Да - все неактуальные, Нет - только выделенное';uk='Видалити всі неактуальні або тільки виділене?"+Символы.ПС+"Так - всі неактуальні, Ні - тільки виділене'";
	Ответ = Вопрос(НСтр(Текст), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		ВыполнятьУдаление = Ложь;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		// Проверка на выделенность строки
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
		Если ВыделенныеСтроки.Количество() = 0 Тогда
			Предупреждение(НСтр("ru='Нет выделенных элементов';uk='Немає виділених елементів'"));
			ВыполнятьУдаление = Ложь;
		КонецЕсли;
		Для Каждого ВыделеннаяСтрока ИЗ ВыделенныеСтроки Цикл
			Если ВыделеннаяСтрока.Актуальность Тогда
				Предупреждение(НСтр("ru='Среди выделенных элементов есть актуальные позиции. Удаление невозможно!';uk='Серед виділених елементів є актуальні позиції. Видалення неможливо!'"));
				ВыполнятьУдаление = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ТолькоВыделенное = Истина;
	КонецЕсли;
	
	Если НЕ ВыполнятьУдаление Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьНеактуальныеНаСервере(ТолькоВыделенное, ВыделенныеСтроки);
	Элементы.Список.Обновить();
	
КонецПроцедуры
//Костенюк Александр-Финиш 16.11.2012

&НаСервере
//Костенюк Александр-Старт 26.11.2012
Процедура УдалитьНеактуальныеНаСервере(ТолькоВыделенное, ВыделенныеСтроки)
	Справочники.Меню.УдалитьНеактуальные(ТолькоВыделенное, ВыделенныеСтроки);
КонецПроцедуры
//Костенюк Александр-Финиш 26.11.2012

&НаКлиенте
//Костенюк Александр-Старт 21.10.2013
Процедура ОбновитьАвтоматическоеМеню(Команда)
	ОбновитьАвтоматическоеМенюНаСервере()
КонецПроцедуры
//Костенюк Александр-Финиш 21.10.2013

&НаСервере
//Костенюк Александр-Старт 21.10.2013
Процедура ОбновитьАвтоматическоеМенюНаСервере()
	Справочники.Меню.ОбновитьАвтоматическоеМеню();
КонецПроцедуры
//Костенюк Александр-Финиш 21.10.2013

//Костенюк Александр-Старт 28.10.2016
&НаКлиенте
Процедура СоздатьОбновитьСтруктуруМеню(Команда)
	Если НЕ ЗначениеЗаполнено(Владелец.ТипЦен) Тогда
		Сообщить("Для вида меню " +""""+ Владелец +""""+ " не заполнен реквизит " +""""+ "Тип цен" +""""+". Выполнение операции невозможно!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Сообщить("Для выполнения операции необходимо заполнить поле " +""""+ "Период" +"""", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	Если НЕ ПроверкаАктуальностиБлюдНаДату() Тогда
		Сообщить("Для типа цен " +""""+ Владелец.ТипЦен +""""+ " не найдены актуальные записи на дату " + Формат(Период, "ДФ=dd.MM.yyyy") + ". Выполнение операции невозможно!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	Ответ = Вопрос("Продолжить выполнение операции?", РежимДиалогаВопрос.ДаНетОтмена);
	Если Ответ = КодВозвратаДиалога.Нет ИЛИ 
		Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	СоздатьОбновитьСтруктуруМенюНаСервере();	
КонецПроцедуры
//Костенюк Александр-Финиш 28.10.2016

//Костенюк Александр-Старт 28.10.2016
&НаСервере
Функция ПроверкаАктуальностиБлюдНаДату()
	Возврат РегистрыСведений.ЦеныНоменклатуры.СрезПервых(Период, Новый Структура("ТипЦены", Владелец.ТипЦен)).Количество();	
КонецФункции
//Костенюк Александр-Финиш 28.10.2016

//Костенюк Александр-Старт 28.10.2016
&НаСервере
Процедура СоздатьОбновитьСтруктуруМенюНаСервере()
	Справочники.Меню.СоздатьОбновитьСтруктуруМеню(Владелец, Период);
КонецПроцедуры
//Костенюк Александр-Финиш 28.10.2016 
