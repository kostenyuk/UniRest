
&НаКлиенте
Процедура РесторанОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры //РесторанОткрытие()

&НаКлиенте
Процедура ПериодДатаПриИзменении(Элемент)
	
	Если УпрощенныеДатаПериодКлиентСервер.ДатаПриИзменении(Период, Элемент) Тогда
		Объект.Дата = УпрощенныеДатаПериодКлиентСервер.ПолучитьМоментВремени(Период);
	КонецЕсли;
	
КонецПроцедуры // ПериодДатаПриИзменении()

&НаКлиенте
Процедура ПериодДатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если УпрощенныеДатаПериодКлиентСервер.ДатаНачалоВыбора(Период, Элемент, ДанныеВыбора, СтандартнаяОбработка) Тогда
		Объект.Дата = УпрощенныеДатаПериодКлиентСервер.ПолучитьМоментВремени(Период);
	КонецЕсли;
	
КонецПроцедуры // ПериодДатаНачалоВыбора()

&НаКлиенте
Процедура ПериодДатаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если УпрощенныеДатаПериодКлиентСервер.ДатаНачалоВыбораИзСписка(Период, Элемент, СтандартнаяОбработка) Тогда
		Объект.Дата = УпрощенныеДатаПериодКлиентСервер.ПолучитьМоментВремени(Период);
	КонецЕсли;
	
КонецПроцедуры // ПериодДатаНачалоВыбораИзСписка()

&НаКлиенте
Процедура ПериодВремяПриИзменении(Элемент)
	
	Если УпрощенныеДатаПериодКлиентСервер.ВремяПриИзменении(Период, Элемент) Тогда
		Объект.Дата = УпрощенныеДатаПериодКлиентСервер.ПолучитьМоментВремени(Период);
	КонецЕсли;
	
КонецПроцедуры // ПериодВремяПриИзменении()

&НаКлиенте
Процедура ПериодВремяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если УпрощенныеДатаПериодКлиентСервер.ВремяНачалоВыбора(Период, Элемент, ДанныеВыбора, СтандартнаяОбработка) Тогда
		Объект.Дата = УпрощенныеДатаПериодКлиентСервер.ПолучитьМоментВремени(Период);
	КонецЕсли;
	
КонецПроцедуры // ПериодВремяНачалоВыбора()

&НаКлиенте
Процедура ПериодВремяНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если УпрощенныеДатаПериодКлиентСервер.ВремяНачалоВыбораИзСписка(Период, Элемент, СтандартнаяОбработка) Тогда
		Объект.Дата = УпрощенныеДатаПериодКлиентСервер.ПолучитьМоментВремени(Период);
	КонецЕсли;
	
КонецПроцедуры // ПериодВремяНачалоВыбораИзСписка()

&НаКлиенте
Процедура КонтрагентПредставлениеПриИзменении(Элемент)
	
	// Автокорректировка наименования.
	УправлениеКонтрагентамиКлиентСервер.НаименованиеПриИзменении(Объект.КонтрагентПредставление, АвтокорректировкаНаименованийКонтрагентов);
	
КонецПроцедуры // КонтрагентПредставлениеПриИзменении()

&НаКлиенте
Процедура КоличествоКлиентовПриИзменении(Элемент)
	
	Объект.КоличествоКлиентов = Макс(Объект.КоличествоКлиентов, 1);
	
КонецПроцедуры // КоличествоКлиентовПриИзменении()

&НаКлиенте
Процедура ТелефонПредставлениеПриИзменении(Элемент)
	
	СтруктураТелефона = УправлениеКонтрагентамиКлиентСервер.ПолучитьПустуюСтруктуруТелефона();
	УправлениеКонтрагентамиКлиентСервер.РазложитьТелефонПоПолям(Объект.ТелефонПредставление, СтруктураТелефона);
	
	Объект.ТелефонПредставление = СтруктураТелефона.Представление;
	Объект.ТелефонПоиск = СтруктураТелефона.Поиск;
	
	Если ПустаяСтрока(Объект.ТелефонПредставление) Тогда
		Объект.ТелефонПредставление = Объект.ТелефонДополнительныйПредставление;
		Объект.ТелефонПоиск = Объект.ТелефонДополнительныйПоиск;
		Объект.ТелефонДополнительныйПредставление = Неопределено;
		Объект.ТелефонДополнительныйПоиск = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ТелефонПредставлениеПриИзменении()

&НаКлиенте
Процедура ТелефонДополнительныйПредставлениеПриИзменении(Элемент)
	
	СтруктураТелефона = УправлениеКонтрагентамиКлиентСервер.ПолучитьПустуюСтруктуруТелефона();
	УправлениеКонтрагентамиКлиентСервер.РазложитьТелефонПоПолям(Объект.ТелефонДополнительныйПредставление, СтруктураТелефона);
	
	Объект.ТелефонДополнительныйПредставление = СтруктураТелефона.Представление;
	Объект.ТелефонДополнительныйПоиск = СтруктураТелефона.Поиск;
	
	Если ПустаяСтрока(Объект.ТелефонПредставление) Тогда
		Объект.ТелефонПредставление = Объект.ТелефонДополнительныйПредставление;
		Объект.ТелефонПоиск = Объект.ТелефонДополнительныйПоиск;
		Объект.ТелефонДополнительныйПредставление = Неопределено;
		Объект.ТелефонДополнительныйПоиск = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ТелефонДополнительныйПредставлениеПриИзменении()

&НаКлиенте
Процедура НесколькоСтоловПриИзменении(Элемент)
	
	Если (НесколькоСтолов = 1) Тогда
		Если (ТекущийЭлемент = Элементы.Столы) Тогда
			ТекущийЭлемент = Элементы.Стол;
		КонецЕсли;
		Элементы.ГруппаВариантовСтолов.ТекущаяСтраница = Элементы.ГруппаСтол;
	Иначе
		Если (ТекущийЭлемент = Элементы.Стол) Тогда
			ТекущийЭлемент = Элементы.Столы;
		КонецЕсли;
		Элементы.ГруппаВариантовСтолов.ТекущаяСтраница = Элементы.ГруппаСтолы;
	КонецЕсли;
	
КонецПроцедуры // НесколькоСтоловПриИзменении()

&НаКлиенте
Процедура НесколькоСтоловПриИзмененииОтложенныйВызов()
	
	НесколькоСтоловПриИзменении(Неопределено);
	
КонецПроцедуры // НесколькоСтоловПриИзмененииОтложенныйВызов()

&НаКлиенте
Процедура СтолПриИзменении(Элемент)
	
	Столы.Очистить();
	Если ЗначениеЗаполнено(Объект.Стол) Тогда
		Столы.Добавить(Объект.Стол);
	КонецЕсли;
	
КонецПроцедуры // СтолПриИзменении()

&НаКлиенте
Процедура СтолНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем Параметры;
	
	СтандартнаяОбработка = Ложь;
	
	Параметры = Новый Структура;
	Параметры.Вставить("МножественныйВыбор", Истина);
	Параметры.Вставить("ТекущаяСтрока", Объект.Стол);

	ОткрытьФорму("Справочник.Столы.Форма.ФормаВыбораРабочегоСтола", Параметры, Элемент);
	
КонецПроцедуры // СтолНачалоВыбора()

&НаКлиенте
Процедура СтолОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если (ТипЗнч(ВыбранноеЗначение) = Тип("Массив")) Тогда
		Столы.ЗагрузитьЗначения(ВыбранноеЗначение);
		НесколькоСтолов = 2;
		СтолыПриИзменении(Элемент);
	Иначе
		Объект.Стол = ВыбранноеЗначение;
		НесколькоСтолов = 1;
		СтолПриИзменении(Элемент);
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("НесколькоСтоловПриИзмененииОтложенныйВызов", 0.0001, Истина);

КонецПроцедуры // СтолОбработкаВыбора()

&НаКлиенте
Процедура СтолыПриИзменении(Элемент)
	
	Если Столы.Количество() Тогда
		Объект.Стол = Столы[0].Значение;
	Иначе
		Объект.Стол = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // СтолыПриИзменении()

&НаКлиенте
Процедура СтолыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем Параметры;
	
	СтандартнаяОбработка = Ложь;
	
	Параметры = Новый Структура;
	Параметры.Вставить("МножественныйВыбор", Истина);
	Параметры.Вставить("ВыбранныеЗначения", Столы.ВыгрузитьЗначения());

	ОткрытьФорму("Справочник.Столы.Форма.ФормаВыбораРабочегоСтола", Параметры, Элемент);
	
КонецПроцедуры // СтолыНачалоВыбора()

&НаКлиенте
Процедура СтолыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтолОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры // СтолыОбработкаВыбора()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Параметры.
	РежимПодтверждения = Параметры.РежимПодтверждения;

	// Создание.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииНаСервере(Объект);
	КонецЕсли;
	
	// Переменные.
	ИнтервалВыбораВремени = РегистрыСведений.СхемыСтолов.ПолучитьИнтервалВыбораВремени();
	
	// Дата.
	УпрощенныеДатаПериодКлиентСервер.УстановитьИнтервалВыбораВремени(Период, ИнтервалВыбораВремени.МинимальныйЧас, ИнтервалВыбораВремени.МаксимальныйЧас);
	
	// Автокорректировка наименования.
	АвтокорректировкаНаименованийКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьАвтокорректировкуНаименованийКонтрагентов");
	
	// Настройка формы.
	Элементы.Ресторан.Видимость = Справочники.Рестораны.КоличествоАктуальныхРесторановБолееОдного();
	Если РежимПодтверждения Тогда
		Для Каждого Элемент Из Элементы Цикл
			Если (ТипЗнч(Элемент) = Тип("ПолеФормы")) Тогда
				Если (Элемент.Вид = ВидПоляФормы.ПолеНадписи) Тогда
				ИначеЕсли (Элемент.Вид = ВидПоляФормы.ПолеВвода) Тогда
					РастягиватьПоГоризонтали = Элемент.РастягиватьПоГоризонтали;
					Ширина = Элемент.Ширина;
					Элемент.Вид = ВидПоляФормы.ПолеНадписи;
					Элемент.ЦветТекста = ЦветаСтиля.ЦветФонаВыделенияПоля;
					Элемент.РастягиватьПоГоризонтали = РастягиватьПоГоризонтали;
					Элемент.Ширина = Ширина;
				Иначе
					Элемент.ТолькоПросмотр = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Дата.
	УпрощенныеДатаПериодКлиентСервер.УстановитьМоментВремени(Период, ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Объект.Дата, "Сегодня"));
	
	// Столы.
	Для Каждого СтрокаТабличнойЧастиСтолы Из Объект.Столы Цикл
		Столы.Добавить(СтрокаТабличнойЧастиСтолы.Стол);
	КонецЦикла;
	Если ЗначениеЗаполнено(Объект.Стол) И (Столы.НайтиПоЗначению(Объект.Стол) = Неопределено) Тогда
		Столы.Добавить(Объект.Стол);
	КонецЕсли;
	
	// Настройка формы.
	НесколькоСтолов = Мин(Макс(Объект.Столы.Количество(), 1), 2);
	Если (НесколькоСтолов = 1) Тогда
		Элементы.ГруппаВариантовСтолов.ТекущаяСтраница = Элементы.ГруппаСтол;
	Иначе
		Элементы.ГруппаВариантовСтолов.ТекущаяСтраница = Элементы.ГруппаСтолы;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Настройка формы.
	ТолькоПросмотр = ТолькоПросмотр Или ТекущийОбъект.ПометкаУдаления;
	Элементы.ДекорацияРаспечатан.Видимость = Не ТекущийОбъект.ПометкаУдаления;
	Элементы.Распечатан.Видимость = Не ТекущийОбъект.ПометкаУдаления;
	Элементы.ДекорацияРаспечатанОтступ.Видимость = Не ТекущийОбъект.ПометкаУдаления;
	Элементы.ПричинаОтказа.Видимость = ТекущийОбъект.ПометкаУдаления;
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = Не ПроверитьЗаполнение();
	
	// Режим записи.
	УправлениеДокументамиКлиентСервер.ПолучитьРежимЗаписиДокумента(Объект, ПараметрыЗаписи.РежимЗаписи);

КонецПроцедуры // ПередЗаписью()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Столы.
	ТекущийОбъект.Столы.Очистить();
	Для Каждого ЭлементСпискаЗначенийСтолы Из Столы Цикл
		ТекущийОбъект.Столы.Добавить().Стол = ЭлементСпискаЗначенийСтолы.Значение;
	КонецЦикла;

КонецПроцедуры // ПередЗаписьюНаСервере()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	__УправлениеДаннымиКлиент.ОповеститьИзменениеЗаказаПокупателя(Объект.Ссылка);

КонецПроцедуры // ПослеЗаписи()
