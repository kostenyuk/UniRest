
// Процедура возвращает в форму-владельца выбранные значения.
//
Процедура мВыборВозврат(Форма) Экспорт

	СтруктураПараметров = Новый Структура();
	
	Если (Не Форма.ЭлементыФормы.Найти("ПереключательРежимИерархии") = Неопределено) Тогда
		СтруктураПараметров.Вставить("ПараметрыПереносаГрупп", Форма.ПараметрыПереносаГрупп);
		СтруктураПараметров.Вставить("ИерархическийСписок",	   Форма.ИерархическийСписок);
		СтруктураПараметров.Вставить("ИсключаяВерхнийУровень", Форма.ИсключаяВерхнийУровень);
		СтруктураПараметров.Вставить("ПеремещатьСуществующие", Форма.ПеремещатьСуществующие);
		СтруктураПараметров.Вставить("ОбновлятьСуществующие",  Форма.ОбновлятьСуществующие);
		СтруктураПараметров.Вставить("ПомеченныеНаУдаление",   Форма.ПомеченныеНаУдаление);
	ИначеЕсли (Не Форма.ЭлементыФормы.Найти("ПеремещатьСуществующие") = Неопределено) Тогда
		СтруктураПараметров.Вставить("ПеремещатьСуществующие", Форма.ПеремещатьСуществующие);
		СтруктураПараметров.Вставить("ОбновлятьСуществующие",  Форма.ОбновлятьСуществующие);
	Иначе		
		СтруктураПараметров.Вставить("ЕдиницаИзмерения", Форма.ЕдиницаИзмерения);
		СтруктураПараметров.Вставить("Количество",       Форма.Количество);
		СтруктураПараметров.Вставить("Цена",             Форма.Цена);	
	КонецЕсли;
	
	Форма.Закрыть(СтруктураПараметров);    
	
КонецПроцедуры // мВыборВозврат()


// Процедура формирует и выводит сумму в информационной надписи.
//
Процедура мОбновитьНадписьФомулаСумма(Форма) Экспорт

	Если Форма.ЭлементыФормы.Найти("ТаблицаХарактеристикНоменклатуры") = Неопределено Тогда
		Форма.ЭлементыФормы.НадписьФомулаСумма.Заголовок = ОбщегоНазначения.ФорматСумм(Форма.Цена * Форма.Количество,,"0,00");
	Иначе
		ИтоговаяСумма = 0;
		Для Каждого СтрокаТабличнойЧасти Из Форма.ТаблицаХарактеристикНоменклатуры Цикл
			ИтоговаяСумма = ИтоговаяСумма + СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
		КонецЦикла;
		Форма.ЭлементыФормы.НадписьФомулаСумма.Заголовок = ИтоговаяСумма;
	КонецЕсли;

КонецПроцедуры // мОбновитьНадписьФомулаСумма()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура мПриОткрытии(Форма) Экспорт

	Перем ЗапрашиватьЦену, ЗапрашиватьСерию;
	Перем ЕстьЦена, ЕстьКоличество;

	#Если Клиент Тогда
		
	ПолучитьСерверТО().ПодключитьКлиента(Форма);

	#КонецЕсли

	Форма.Заголовок = "Количество и цена """ + Форма.Номенклатура + """";

	ЗапрашиватьКоличество = Форма.ВладелецФормы.ЗапрашиватьКоличество;
	ЗапрашиватьЦену       = Форма.ВладелецФормы.ЗапрашиватьЦену;
	//ЗапрашиватьСерию      = Форма.ВладелецФормы.ЗапрашиватьСерию;

	Если Форма.ЭлементыФормы.Найти("ТаблицаХарактеристикНоменклатуры") = Неопределено Тогда
		Форма.ЭлементыФормы.НадписьКоличество. Доступность = ЗапрашиватьКоличество;
		Форма.ЭлементыФормы.Количество.        Доступность = ЗапрашиватьКоличество;
		Форма.ЭлементыФормы.ЕдиницаИзмерения.  Доступность = ЗапрашиватьКоличество;
		Форма.ЭлементыФормы.НадписьЦена.       Доступность = ЗапрашиватьЦену;
		Форма.ЭлементыФормы.Цена.              Доступность = ЗапрашиватьЦену;
		Форма.ЭлементыФормы.НадписьВалютаЦены. Доступность = ЗапрашиватьЦену;
	Иначе

		Если ЗапрашиватьЦену Тогда
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Найти("Цена").ПропускатьПриВводе = Ложь;
		Иначе
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Найти("Цена").ПропускатьПриВводе = Истина;
		КонецЕсли;

		// Активизируем первую строку
		Если Форма.ТаблицаХарактеристикНоменклатуры.Количество() > 0 Тогда
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.ТекущаяСтрока = Форма.ТаблицаХарактеристикНоменклатуры.Получить(0);
		КонецЕсли;

		Если СтруктураИсходныхПараметров.Свойство("ЕстьКоличество" , ЕстьКоличество) И НЕ ЕстьКоличество Тогда
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Количество.Данные       = "";
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Количество.ДанныеФлажка = "Количество";
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Количество.ТекстШапки   = "Подбирать в документ";
		КонецЕсли;

		Если Не СтруктураИсходныхПараметров.Свойство("ЕстьЦена" , ЕстьЦена) Или НЕ ЕстьЦена Тогда
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Цена.Видимость       = Ложь;
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.ВалютаЦены.Видимость = Ложь;
		Иначе
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Цена.Видимость       = Истина;
			Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.ВалютаЦены.Видимость = Истина;
			Если ЗапрашиватьЦену Тогда
				Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Цена.Доступность       = Истина;
				Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.ВалютаЦены.Доступность = Истина;
			Иначе
				Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.Цена.Доступность       = Ложь;
				Форма.ЭлементыФормы.ТаблицаХарактеристикНоменклатуры.Колонки.ВалютаЦены.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	Форма.ЭлементыФормы.НадписьВалютаСуммы.Доступность = ЗапрашиватьЦену;
	Форма.ЭлементыФормы.НадписьСумма.      Доступность = ЗапрашиватьЦену;
	Форма.ЭлементыФормы.НадписьФомулаСумма.Доступность = ЗапрашиватьЦену;

	Если Форма.ЭлементыФормы.Найти("Серия") <> Неопределено Тогда
		Форма.ЭлементыФормы.Серия.Доступность = ЗапрашиватьСерию;
	КонецЕсли;

	мОбновитьНадписьФомулаСумма(Форма);

КонецПроцедуры // мПриОткрытии()

