
&НаКлиенте
Процедура Сформировать(Команда)
	
	Перем Отказ;

	ОчиститьСообщения();
	
	// Выполнение.
	СформироватьСервер(Отказ);
	Если Не Отказ Тогда
		Закрыть(Истина);
	КонецЕсли; 
	
КонецПроцедуры // Сформировать()

&НаСервере
Процедура СформироватьСервер(Отказ)

	Отказ = Ложь;
	
	// Проверка.
	Проверка = РеквизитФормыВЗначение("Объект");
	Проверка.ДополнительныеСвойства.Вставить("ПредотвратитьПроверкуУникальности");
	Если Не Проверка.ПроверитьЗаполнение() Тогда
		Отказ = Истина; Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		НачатьТранзакцию();
		
		// Поиск существующих.
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Столы.Ссылка,
		                      |	Столы.Код КАК Номер
		                      |ИЗ
		                      |	Справочник.Столы КАК Столы
		                      |ГДЕ
		                      |	Столы.Код МЕЖДУ &НомерНачальный И &НомерКонечный
		                      |	И НЕ Столы.ЭтоГруппа
		                      |
		                      |ДЛЯ ИЗМЕНЕНИЯ");
		Запрос.УстановитьПараметр("НомерНачальный", НомерНачальный);
		Запрос.УстановитьПараметр("НомерКонечный", НомерКонечный);
		ТаблицаСуществующих = Запрос.Выполнить().Выгрузить();
		
		// Создание новыйх элементов и изменение существующих.
		Для Номер = НомерНачальный По НомерКонечный Цикл
			
			Существующий = ТаблицаСуществующих.Найти(Номер, "Номер");
			Если (Существующий = Неопределено) Тогда
				ЭлементОбъект = Справочники.Столы.СоздатьЭлемент();
				ЭлементОбъект.УстановитьНовыйКод();	// Принудительно в связи с использованием ОбменДанными.Загрузка.
			Иначе
				ЭлементОбъект = Существующий.Ссылка.ПолучитьОбъект();	
			КонецЕсли; 
			
			// Заполнение.
			Если (Существующий = Неопределено) Тогда
				ЭлементОбъект.Номер = Номер;
				ЭлементОбъект.Код = Номер; // Совместимость.
			Иначе
				ЭлементОбъект.Номер = Номер; // Совместимость.
			КонецЕсли; 
			Если (Существующий = Неопределено) Или СуществующиеПеремещать Тогда
				ЭлементОбъект.Родитель = Объект.Родитель;
			КонецЕсли; 
			Если (Существующий = Неопределено) Или СуществующиеИзменятьТип Тогда
				ЭлементОбъект.ТипСтола = Объект.ТипСтола;
			КонецЕсли; 
			Если (Существующий = Неопределено) Или СуществующиеПереименовывать Тогда
				ЭлементОбъект.Наименование = Шаблон(Объект.Наименование, 
					Новый Структура("Тип,Номер", ЭлементОбъект.ТипСтола, ЭлементОбъект.Номер));
			КонецЕсли; 
			ЭлементОбъект.Актуальность = (Не ЗначениеЗаполнено(ЭлементОбъект.Родитель)) Или ЭлементОбъект.Родитель.Актуальность;
			
			ЭлементОбъект.ОбменДанными.Загрузка = Истина;
			Если ЭлементОбъект.Модифицированность() Тогда
				ЭлементОбъект.Записать();
			КонецЕсли; 
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		// TODO: Регистрация ошибки.
		__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось выполнить формирование элементов'; uk = 'Не вдалося виконати формування елементів'"), ,,, Отказ);
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
	  	КонецЕсли;
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // СформироватьСервер()


&НаКлиенте
Процедура СформироватьПример()
	
	Пример = Шаблон(Объект.Наименование, 
		Новый Структура("Тип,Номер", Объект.ТипСтола, НомерНачальный));
	
КонецПроцедуры // СформироватьПример()

&НаКлиенте
Процедура НомерНачальныйПриИзменении(Элемент)
	
	НомерКонечный = Макс(НомерНачальный, НомерКонечный);
	
	// Пример.
	СформироватьПример();

КонецПроцедуры // НомерНачальныйПриИзменении()

&НаКлиенте
Процедура НомерКонечныйПриИзменении(Элемент)
	
	НомерНачальный = Мин(НомерНачальный, НомерКонечный);
	
	// Пример.
	СформироватьПример();

КонецПроцедуры // НомерКонечныйПриИзменении()

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	// Наследуемые реквизиты.
	РодительПриИзмененииСервер();
	
	// Пример.
	СформироватьПример();

КонецПроцедуры // РодительПриИзменении()

&НаСервере
Процедура РодительПриИзмененииСервер()
	
	Объект.ТипСтола = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
							Объект.Родитель.ТипСтола,
							Объект.ТипСтола);

КонецПроцедуры // РодительПриИзмененииСервер()

&НаКлиенте
Процедура ТипКомнатыПриИзменении(Элемент)
	
	// Пример.
	СформироватьПример();

КонецПроцедуры // ТипКомнатыПриИзменении()

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	// Пример.
	СформироватьПример();

КонецПроцедуры // НаименованиеПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Параметры.
	НомерНачальный = Справочники.Столы.ПолучитьОчереднойКод(Неопределено); НомерКонечный = НомерНачальный + 10;
	
	Объект.Код = 1;
	Объект.Номер = 1; // Должен быть не нулевым.
	Объект.Наименование = Элементы.Наименование.СписокВыбора[0].Значение;
	Объект.Родитель = Параметры.ТекущийРодитель;
	РодительПриИзмененииСервер();
	
	СуществующиеПеремещать = Истина;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Пример.
	СформироватьПример();

КонецПроцедуры // ПриОткрытии()
