
&НаКлиенте
Процедура УстановитьВидимость()
	
	// Элементы.
	Элементы.ГруппаПараметрыНоменклатуры.Видимость = ПараметрыНоменклатуры;
	Если ПараметрыНоменклатуры Тогда
		Элементы.ПараметрыНоменклатуры.Заголовок = НСтр("ru = 'Скрыть параметры товаров'; uk = 'Приховати параметри товарів'");
	Иначе
		Элементы.ПараметрыНоменклатуры.Заголовок = НСтр("ru = 'Показать параметры товаров'; uk = 'Показати параметри товарів'");
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимость()


&НаКлиенте
Процедура ПараметрыНоменклатуры(Команда)
	
	ПараметрыНоменклатуры = Не ПараметрыНоменклатуры;
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПараметрыНоменклатуры()


&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	РодительПриИзмененииСервер();

КонецПроцедуры // РодительПриИзменении()

&НаСервере
Процедура РодительПриИзмененииСервер()
	
	__РаботаСДаннымиКлиентСервер.ПолучитьНаследуемыеРеквизиты(Объект);

	// Модификаторы и условия.
	РегистрыСведений.МодификаторыНоменклатуры.ПолучитьПравилаМодификаторов(Объект, Объект.Родитель, ПравилаМодификаторов);
	РегистрыСведений.УсловияНоменклатуры.ПолучитьПравилаУсловий(Объект, Объект.Родитель, ПравилаУсловий);
	
КонецПроцедуры // РодительПриИзмененииСервер()


&НаКлиенте
Процедура ПравилаМодификаторовАктуальностьПриИзменении(Элемент)

	// Актуальность.
	__РаботаСДаннымиКлиентСервер.ИзменитьПравилаМодификаторовУсловийПодчиненных(Элемент, ПравилаМодификаторов);
	
КонецПроцедуры // ПравилаМодификаторовАктуальностьПриИзменении()

&НаКлиенте
Процедура ПравилаУсловийАктуальностьПриИзменении(Элемент)

	// Актуальность.
	__РаботаСДаннымиКлиентСервер.ИзменитьПравилаМодификаторовУсловийПодчиненных(Элемент, ПравилаУсловий);
	
КонецПроцедуры // ПравилаУсловийАктуальностьПриИзменении()

&НаКлиенте
Процедура ПравилаСопутствующейАктуальностьПриИзменении(Элемент)

	// Актуальность.
	__РаботаСДаннымиКлиентСервер.ИзменитьПравилаМодификаторовУсловийПодчиненных(Элемент, ПравилаСопутствующей);
	
КонецПроцедуры // ПравилаСопутствующейАктуальностьПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Принадлежность.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииНаСервере(Объект);
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Настройка формы.
	УстановитьВидимость();
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// Модификаторы и условия.
	Если ЗначениеЗаполнено(ПолучитьСвойство(Параметры, "ЗначениеКопирования")) Тогда
		ОбъектЗаполнения = Параметры.ЗначениеКопирования;
	Иначе
		ОбъектЗаполнения = ТекущийОбъект;
	КонецЕсли; 
	РегистрыСведений.МодификаторыНоменклатуры.ПолучитьПравилаМодификаторов(ОбъектЗаполнения, ОбъектЗаполнения.Родитель, ПравилаМодификаторов);
	РегистрыСведений.УсловияНоменклатуры.ПолучитьПравилаУсловий(ОбъектЗаполнения, ОбъектЗаполнения.Родитель, ПравилаУсловий);
	
	// Сопутсвующая.
	РегистрыСведений.СопутствующаяНоменклатура.ПолучитьПравилаСопутствующейНоменклатуры(ОбъектЗаполнения, ОбъектЗаполнения.Родитель, ПравилаСопутствующей);
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// Модификаторы и условия.
	РегистрыСведений.МодификаторыНоменклатуры.УстановитьПравилаМодификаторов(ТекущийОбъект, ТекущийОбъект.Родитель, ПравилаМодификаторов, Отказ);
	РегистрыСведений.УсловияНоменклатуры.УстановитьПравилаУсловий(ТекущийОбъект, ТекущийОбъект.Родитель, ПравилаУсловий, Отказ);
	
	// Сопутсвующая.
	РегистрыСведений.СопутствующаяНоменклатура.УстановитьПравилаСопутствующейНоменклатуры(ТекущийОбъект, ТекущийОбъект.Родитель, ПравилаСопутствующей, Отказ);
	
КонецПроцедуры // ПриЗаписиНаСервере()
