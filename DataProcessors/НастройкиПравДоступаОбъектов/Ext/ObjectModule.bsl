
#Если Клиент Тогда

Перем МассивИсключаемыхОбъектов;

	
// Процедура считывает настройки прав доступа данного объекта.
//
Процедура ДеревоПравДоступаПрочитать(Ссылка, Элемент, Принудительно = Ложь) Экспорт
	
	// Проверка заполнялись ли уже данные.
	Если Не(ЗначениеЗаполнено(Принудительно) И Принудительно) И (Не ДеревоПравДоступа.Строки.Количество() = 0) И (ВладелецПравДоступа = Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ВладелецПравДоступа = Ссылка;
	
	// Очистка дерева.
	ДеревоПравДоступа.Строки.Очистить();
	
	// Добавление колонок.
	Если (ДеревоПравДоступа.Колонки.Найти("Наименование") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"), "Объект");
	КонецЕсли;
	МассивИсточников = Новый Массив;
	МассивИсточников.Добавить(Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы);
	МассивИсточников.Добавить(Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Реквизиты);
	Для Каждого Источник Из МассивИсточников Цикл
		Для Каждого Ресурс Из Источник Цикл
			Если (ДеревоПравДоступа.Колонки.Найти(Ресурс.Имя) = Неопределено) Тогда
				ДеревоПравДоступа.Колонки.Добавить(Ресурс.Имя, Новый ОписаниеТипов("Булево"), Ресурс.Синоним);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ДеревоПравДоступа.Колонки.Добавление.Заголовок = ДеревоПравДоступа.Колонки.Добавление.Заголовок + "/" + НРег(Метаданные.РегистрыСведений.НастройкиПравДоступаОтчетов.Ресурсы.Выполнение.Синоним);
	
	// Перенос и настройка колонок.
	Элемент.СоздатьКолонки();
	Для Каждого Источник Из МассивИсточников Цикл
		Для Каждого Ресурс Из Источник Цикл
			Ресурс = Ресурс.Имя;
			Элемент.Колонки[Ресурс].ДанныеФлажка = Элемент.Колонки[Ресурс].Данные;
			Элемент.Колонки[Ресурс].Данные = Неопределено;
			Элемент.Колонки[Ресурс].РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
			Элемент.Колонки[Ресурс].ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
			Элемент.Колонки[Ресурс].Ширина = 0.1;
		КонецЦикла;
	КонецЦикла;
	
	
	// Добавление служебных колонок.
	Если (ДеревоПравДоступа.Колонки.Найти("ОбъектДоступа") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ОбъектДоступа");
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЭтоТип") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЭтоТип", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЭтоСправочник") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЭтоСправочник", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЭтоДокумент") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЭтоДокумент", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЭтоОтчет") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЭтоОтчет", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЭтоОбработка") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЭтоОбработка", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЕстьРеквизитРесторан") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЕстьРеквизитРесторан", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	Если (ДеревоПравДоступа.Колонки.Найти("ЕстьРеквизитСотрудник") = Неопределено) Тогда
		ДеревоПравДоступа.Колонки.Добавить("ЕстьРеквизитСотрудник", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	// Построение дерева.
	
	// -- Спраовчники.
	СтрокаГруппы = ДеревоПравДоступа.Строки.Добавить();
	СтрокаГруппы.Наименование = "Справочники";
	СтрокаГруппы.ЭтоТип = Истина;
	СтрокаГруппы.ЭтоСправочник = Истина;
	Для Каждого Справочник Из Метаданные.Справочники Цикл
		Если (Не МассивИсключаемыхОбъектов.Найти(Справочник) = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
		СтрокаЭлемент.Наименование = Справочник.Синоним;
		СтрокаЭлемент.ОбъектДоступа = Справочники[Справочник.Имя].ПустаяСсылка();
		СтрокаЭлемент.ЭтоСправочник = Истина;
	КонецЦикла;
	СтрокаГруппы.Строки.Сортировать("Наименование");
	
	// -- Документы.
	СтрокаГруппы = ДеревоПравДоступа.Строки.Добавить();
	СтрокаГруппы.Наименование = "Документы";
	СтрокаГруппы.ЭтоТип = Истина;
	СтрокаГруппы.ЭтоДокумент = Истина;
	Для Каждого Документ Из Метаданные.Документы Цикл
		Если (Не МассивИсключаемыхОбъектов.Найти(Документ) = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
		СтрокаЭлемент.Наименование = Документ.Синоним;
		СтрокаЭлемент.ОбъектДоступа = Документы[Документ.Имя].ПустаяСсылка();
		СтрокаЭлемент.ЭтоДокумент = Истина;
		СтрокаЭлемент.ЕстьРеквизитРесторан = ОбщегоНазначения.ЕстьРеквизитДокумента("Ресторан", Документ);
		СтрокаЭлемент.ЕстьРеквизитСотрудник = ОбщегоНазначения.ЕстьРеквизитДокумента("Сотрудник", Документ);
	КонецЦикла;
	СтрокаГруппы.Строки.Сортировать("Наименование");
	
	// -- Отчеты.
	Если (Не Ссылка = Неопределено) Тогда
		СтрокаГруппы = ДеревоПравДоступа.Строки.Добавить();
		СтрокаГруппы.Наименование = "Отчеты";
		СтрокаГруппы.ЭтоТип = Истина;
		СтрокаГруппы.ЭтоОтчет = Истина;
		Для Каждого Отчет Из Метаданные.Отчеты Цикл
			Если (Не МассивИсключаемыхОбъектов.Найти(Отчет) = Неопределено) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаЭлемент = СтрокаГруппы.Строки.Добавить();
			СтрокаЭлемент.Наименование = Отчет.Синоним;
			СтрокаЭлемент.ОбъектДоступа = "Отчет." + Отчет.Имя;
			СтрокаЭлемент.ЭтоОтчет = Истина;
		КонецЦикла;
		СтрокаГруппы.Строки.Сортировать("Наименование");
	КонецЕсли;
	
	// Выборка данных из регистра.
	Если(Не ВладелецПравДоступа = Неопределено) И ВладелецПравДоступа.Пустая() Тогда
		ТаблицаРезультатаЗапроса = Новый ТаблицаЗначений();
		ТаблицаРезультатаЗапроса.Колонки.Добавить("ОбъектДоступа");
	Иначе
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НастройкиПравДоступаОбъектов.ОбъектДоступа,
			|	НастройкиПравДоступаОбъектов.Добавление,
			|	НастройкиПравДоступаОбъектов.Изменение,
			|	НастройкиПравДоступаОбъектов.Печать,
			|	НастройкиПравДоступаОбъектов.Проведение,
			|	НастройкиПравДоступаОбъектов.Удаление,
			|	НастройкиПравДоступаОбъектов.ИгнорироватьРазделениеПоРесторанам,
			|	НастройкиПравДоступаОбъектов.ИгнорироватьРазделениеПоСотрудникам
			|ИЗ
			|	РегистрСведений.НастройкиПравДоступаОбъектов КАК НастройкиПравДоступаОбъектов
			|ГДЕ
			|	НастройкиПравДоступаОбъектов.ВладелецПравДоступа = &ВладелецПравДоступа
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НастройкиПравДоступаОтчетов.ОбъектДоступа,
			|	НастройкиПравДоступаОтчетов.Выполнение,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL
			|ИЗ
			|	РегистрСведений.НастройкиПравДоступаОтчетов КАК НастройкиПравДоступаОтчетов
			|ГДЕ
			|	НастройкиПравДоступаОтчетов.ВладелецПравДоступа = &ВладелецПравДоступа");
		Запрос.УстановитьПараметр("ВладелецПравДоступа", ВладелецПравДоступа);
		ТаблицаРезультатаЗапроса = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	
	// Заполнение данных.
	Для Каждого СтрокаТаблицы Из ТаблицаРезультатаЗапроса Цикл
		СтрокаЭлемент = ДеревоПравДоступа.Строки.Найти(СтрокаТаблицы.ОбъектДоступа, "ОбъектДоступа", Истина);	
		Если (СтрокаЭлемент = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаЭлемент, СтрокаТаблицы);
	КонецЦикла;
	
	// -- Итоги.
	Для Каждого СтрокаГруппы Из ДеревоПравДоступа.Строки Цикл
		Для Каждого Ресурс Из Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы Цикл
			Ресурс = Ресурс.Имя;
			СтрокаГруппы[Ресурс] = СтрокаГруппы.Строки.Итог(Ресурс) = СтрокаГруппы.Строки.Количество();
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры // ДеревоПравДоступаПрочитать()

// Процедура при необходимости изменяет настройки прав доступа объекта.
//
Процедура ДеревоПравДоступаЗаписать(Ссылка, Отказ) Экспорт
	
	ВладелецПравДоступа = Ссылка;
	
	// НастройкиПравДоступаОбъектов.
	Если Не Отказ Тогда
		
		// Запись набора записей.
		НаборЗаписей = РегистрыСведений.НастройкиПравДоступаОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВладелецПравДоступа.Использование = Истина;
		НаборЗаписей.Отбор.ВладелецПравДоступа.Значение = ВладелецПравДоступа;
		
		// Нисходящий обход дерева.
		СписокПодчиненных = Новый СписокЗначений();
		СписокПодчиненных.Добавить(ДеревоПравДоступа);

		Для Каждого СтрокаВладелец Из СписокПодчиненных Цикл
			СтрокаВладелец = СтрокаВладелец.Значение;	// Наепка - друг чекиста ;)
			
			Для Каждого СтрокаВладельца Из СтрокаВладелец.Строки Цикл
				// -- Добавление данных в набор записей.
				Если (Не СтрокаВладельца.ЭтоТип) И (СтрокаВладельца.ЭтоСправочник Или СтрокаВладельца.ЭтоДокумент) Тогда
					Добавлять = Ложь;
					Для Каждого Ресурс Из Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы Цикл
						Добавлять = Добавлять Или СтрокаВладельца[Ресурс.Имя];
						Если Добавлять Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если Добавлять Тогда
						Запись = НаборЗаписей.Добавить();
						Запись.ВладелецПравДоступа = ВладелецПравДоступа;
						ЗаполнитьЗначенияСвойств(Запись, СтрокаВладельца);
					КонецЕсли;
				КонецЕсли;
						
				Если (Не СтрокаВладельца.Строки.Количество() = 0) Тогда
					СписокПодчиненных.Добавить(СтрокаВладельца);
				КонецЕсли;
			КонецЦикла;
		
		КонецЦикла;

		// Запись набора записей.
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, ,, НаборЗаписей, ВладелецПравДоступа);
		КонецПопытки;
	
	КонецЕсли;
	
	// НастройкиПравДоступаОтчетов.
	Если Не Отказ Тогда
		
		// Запись набора записей.
		НаборЗаписей = РегистрыСведений.НастройкиПравДоступаОтчетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВладелецПравДоступа.Использование = Истина;
		НаборЗаписей.Отбор.ВладелецПравДоступа.Значение = ВладелецПравДоступа;
		
		// Нисходящий обход дерева.
		СписокПодчиненных = Новый СписокЗначений();
		СписокПодчиненных.Добавить(ДеревоПравДоступа);

		Для Каждого СтрокаВладелец Из СписокПодчиненных Цикл
			СтрокаВладелец = СтрокаВладелец.Значение;	// Наепка - друг чекиста ;)
			
			Для Каждого СтрокаВладельца Из СтрокаВладелец.Строки Цикл
				// -- Добавление данных в набор записей.
				Если (Не СтрокаВладельца.ЭтоТип) И (СтрокаВладельца.ЭтоОтчет Или СтрокаВладельца.ЭтоОбработка) Тогда
					Добавлять = Ложь;
					Для Каждого Ресурс Из Метаданные.РегистрыСведений.НастройкиПравДоступаОбъектов.Ресурсы Цикл
						Добавлять = Добавлять Или СтрокаВладельца[Ресурс.Имя];
						Если Добавлять Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если Добавлять Тогда
						Запись = НаборЗаписей.Добавить();
						Запись.ВладелецПравДоступа = ВладелецПравДоступа;
						Запись.Выполнение = СтрокаВладельца.Добавление;
						ЗаполнитьЗначенияСвойств(Запись, СтрокаВладельца);
					КонецЕсли;
				КонецЕсли;
						
				Если (Не СтрокаВладельца.Строки.Количество() = 0) Тогда
					СписокПодчиненных.Добавить(СтрокаВладельца);
				КонецЕсли;
			КонецЦикла;
		
		КонецЦикла;

		// Запись набора записей.
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, ,, НаборЗаписей, ВладелецПравДоступа);
		КонецПопытки;
	
	КонецЕсли;
	
КонецПроцедуры // ДеревоПравДоступаЗаписать()

// Обработчик события ДеревоПравДоступа.ПриВыводеСтроки элемента.
//
Процедура ДеревоПравДоступаВывестиСтроку(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	// Наименование.
	Если Элемент.Колонки.Наименование.Видимость Тогда
		ОформлениеСтроки.Ячейки.Наименование.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Наименование.ТолькоПросмотр = Истина;
		Если ДанныеСтроки.ЭтоТип Тогда
			ОформлениеСтроки.Ячейки.Наименование.Картинка = БиблиотекаКартинок.ГруппаСправочника;
		ИначеЕсли ДанныеСтроки.ЭтоОтчет Тогда
			ОформлениеСтроки.Ячейки.Наименование.Картинка = БиблиотекаКартинок.Отчет;
		ИначеЕсли ДанныеСтроки.ЭтоОбработка Тогда
			ОформлениеСтроки.Ячейки.Наименование.Картинка = БиблиотекаКартинок.Обработка;
		Иначе
			Если Метаданные.Справочники.Содержит(ДанныеСтроки.ОбъектДоступа.Метаданные()) Тогда
				ОформлениеСтроки.Ячейки.Наименование.Картинка = БиблиотекаКартинок.СправочникОбъект;
			ИначеЕсли Метаданные.Документы.Содержит(ДанныеСтроки.ОбъектДоступа.Метаданные()) Тогда
				ОформлениеСтроки.Ячейки.Наименование.Картинка = БиблиотекаКартинок.ДокументОбъект;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Изменение.
	Если Элемент.Колонки.Изменение.Видимость Тогда
		ОформлениеСтроки.Ячейки.Изменение.Видимость = ДанныеСтроки.ЭтоСправочник Или ДанныеСтроки.ЭтоДокумент;
		ОформлениеСтроки.Ячейки.Изменение.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.Изменение.Видимость;
	КонецЕсли;
	
	// Печать.
	Если Элемент.Колонки.Печать.Видимость Тогда
		ОформлениеСтроки.Ячейки.Печать.Видимость = ДанныеСтроки.ЭтоДокумент;
		ОформлениеСтроки.Ячейки.Печать.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.Печать.Видимость;
	КонецЕсли;
	
	// Проведение.
	Если Элемент.Колонки.Проведение.Видимость Тогда
		ОформлениеСтроки.Ячейки.Проведение.Видимость = ДанныеСтроки.ЭтоДокумент;
		ОформлениеСтроки.Ячейки.Проведение.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.Проведение.Видимость;
	КонецЕсли;
	
	// Удаление.
	Если Элемент.Колонки.Удаление.Видимость Тогда
		ОформлениеСтроки.Ячейки.Удаление.Видимость = ДанныеСтроки.ЭтоСправочник Или ДанныеСтроки.ЭтоДокумент;
		ОформлениеСтроки.Ячейки.Удаление.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.Удаление.Видимость;
	КонецЕсли;
	
	// ИгнорироватьРазделениеПоРесторанам.
	Если Элемент.Колонки.ИгнорироватьРазделениеПоРесторанам.Видимость Тогда
		ОформлениеСтроки.Ячейки.ИгнорироватьРазделениеПоРесторанам.Видимость = ДанныеСтроки.ЕстьРеквизитРесторан;
		ОформлениеСтроки.Ячейки.ИгнорироватьРазделениеПоРесторанам.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.ИгнорироватьРазделениеПоРесторанам.Видимость;
	КонецЕсли;
	
	// ИгнорироватьРазделениеПоСотрудникам.
	Если Элемент.Колонки.ИгнорироватьРазделениеПоСотрудникам.Видимость Тогда
		ОформлениеСтроки.Ячейки.ИгнорироватьРазделениеПоСотрудникам.Видимость = ДанныеСтроки.ЕстьРеквизитСотрудник;
		ОформлениеСтроки.Ячейки.ИгнорироватьРазделениеПоСотрудникам.ТолькоПросмотр = Не ОформлениеСтроки.Ячейки.ИгнорироватьРазделениеПоСотрудникам.Видимость;
	КонецЕсли;
	
КонецПроцедуры // ДеревоПравДоступаВывестиСтроку()

// Обработчик события ДеревоПравДоступа.ПриИзмененииФлажка элемента.
//
Процедура ДеревоПравДоступаИзменитьФлажок(Элемент, Колонка) Экспорт
	
	СтрокаДерева = Элемент.ТекущаяСтрока;
	
	// Изменение подчиненных.
	Если (Не СтрокаДерева.Строки.Количество() = 0) Тогда
		// -- Нисходящий обход дерева.
		СписокПодчиненных = Новый СписокЗначений();
		СписокПодчиненных.Добавить(СтрокаДерева);
	
		Для Каждого СтрокаВладелец Из СписокПодчиненных Цикл
			СтрокаВладелец = СтрокаВладелец.Значение;	// Наепка - друг чекиста ;)
			
			Для Каждого СтрокаВладельца Из СтрокаВладелец.Строки Цикл
				СтрокаВладельца[Колонка.ДанныеФлажка] = СтрокаДерева[Колонка.ДанныеФлажка];
						
				Если (Не СтрокаВладельца.Строки.Количество() = 0) Тогда
					СписокПодчиненных.Добавить(СтрокаВладельца);
				КонецЕсли;
			КонецЦикла;
		
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ДеревоПравДоступаИзменитьФлажок()


// Инициализация.
МассивИсключаемыхОбъектов = Новый Массив;

#КонецЕсли
