////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	КолонкиМассив = Новый Массив;
	Для Каждого ОписаниеКолонки Из РеквизитФормыВЗначение("ТаблицаПодписей").Колонки Цикл
		КолонкиМассив.Добавить(ОписаниеКолонки.Имя);
	КонецЦикла;
	ОписаниеКолонокТаблицыПодписей = Новый ФиксированныйМассив(КолонкиМассив);
	
	ДанныеФайлаКорректны = Ложь;
	
	Если Параметры.Свойство("РежимСоздания") Тогда 
		РежимСоздания = Параметры.РежимСоздания;
	КонецЕсли;
	
	Если Параметры.Ключ = Неопределено Или Параметры.Ключ.Пустая() Тогда
		
		НовыйФайл = Истина;
		
		Если Параметры.ЗначениеКопирования.Пустая() Тогда
			Объект.ВладелецФайла = Параметры.ВладелецФайла;
		Иначе
			Объект.ТекущаяВерсия = Справочники.ВерсииФайлов.ПустаяСсылка();
			Параметры.ФайлОснование = Параметры.ЗначениеКопирования;
		КонецЕсли;
		
	КонецЕсли;
	
	ДокОснование = Параметры.ФайлОснование;
	Если Не ДокОснование.Пустая() Тогда
		
		Объект.ПолноеНаименование = ДокОснование.ПолноеНаименование;
		Объект.Наименование = Объект.ПолноеНаименование;
		Объект.ХранитьВерсии = ДокОснование.ХранитьВерсии;
		
	КонецЕсли;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		//ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайла(Объект.Ссылка);
		ДанныеФайлаКорректны = Истина;
	КонецЕсли;
	
	ТипВладельца = ТипЗнч(Объект.ВладелецФайла);
	Элементы.Владелец.Заголовок = ТипВладельца;
	
	НовыйФайлЗаписан = Ложь;
	
	//// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма);
	//// Конец СтандартныеПодсистемы.Свойства
	
	Если Параметры.Свойство("КарточкаОткрытаПослеСозданияФайла") Тогда
		Если Параметры.КарточкаОткрытаПослеСозданияФайла Тогда
			
			Попытка
				ЗаблокироватьДанныеФормыДляРедактирования();
			Исключение
			КонецПопытки;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
		ОбновитьПолныйПуть();
	КонецЕсли;
	
	Если Не Параметры.ФайлОснование.Пустая() Тогда
		ФайлОснованиеПодписан = Параметры.ФайлОснование.ПодписанЭЦП;
	КонецЕсли;
	
	//Если РаботаСФайламиВызовСервера.ПолучитьИспользоватьЭлектронныеЦифровыеПодписиИШифрование() = Ложь Тогда
	//	Элементы.ГруппаДополнительныеДанныеСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	//Иначе
	//	ЗаполнитьСписокПодписей();
	//	ЗаполнитьСписокШифрования();
	//КонецЕсли;
	
	//ТипыВладельцев = РаботаСФайламиВызовСервераПереопределяемый.ПолучитьТипыВладельцаФайла();
	//Если Не ПустаяСтрока(ТипыВладельцев) Тогда	
	//	Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов(ТипыВладельцев);
	//КонецЕсли;	
	
	//СписокРасширенийТекстовыхФайлов = ФайловыеФункцииСлужебный.ПолучитьСписокРасширенийТекстовыхФайлов();
	//Если ФайловыеФункцииСлужебныйКлиентСервер.РасширениеФайлаВСписке(СписокРасширенийТекстовыхФайлов, Объект.ТекущаяВерсияРасширение) Тогда
	//	
	//	Если ЗначениеЗаполнено(Объект.ТекущаяВерсия) Тогда
	//		
	//		КодировкаЗначение = РаботаСФайламиВызовСервера.ПолучитьКодировкуВерсииФайла(Объект.ТекущаяВерсия);
	//		
	//		СписокКодировок = РаботаСФайламиКлиентСервер.ПолучитьСписокКодировок();
	//		ЭлементСписка = СписокКодировок.НайтиПоЗначению(КодировкаЗначение);
	//		Если ЭлементСписка = Неопределено Тогда
	//			Кодировка = КодировкаЗначение;
	//		Иначе	
	//			Кодировка = ЭлементСписка.Представление;
	//		КонецЕсли;
	//		
	//	КонецЕсли;	
	//	
	//	Если Не ЗначениеЗаполнено(Кодировка) Тогда
	//		Кодировка = НСтр("ru='По умолчанию'");
	//	КонецЕсли;	
	//	
	//Иначе	
	//	Элементы.Кодировка.Видимость = Ложь;
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьЭлементовФормы();
	
	НаименованиеДоЗаписи = Объект.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	//Если ФайлРедактировался И СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().АвторизованныйПользователь = Объект.Редактирует Тогда 
	//	Ответ = Вопрос(НСтр("ru = 'Файл занят вами для редактирования. Закрыть карточку?'"), РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Нет);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда 
	//		Отказ = Истина;
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если РежимСоздания = "ИзШаблона" И НЕ Объект.ПодписанЭЦП Тогда
		СтрокаВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		  НСтр("ru = 'Открыть файл ""%1"" для редактирования?'"),
		  СокрЛП(Объект.ПолноеНаименование) );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ФайлОткрыт" И Источник = Объект.Ссылка Тогда
		НовыйФайл = Ложь;
	КонецЕсли;

	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ФайлРедактировался" И Источник = Объект.Ссылка Тогда
		ФайлРедактировался = Истина;
	КонецЕсли;

	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ОбъектПодписан" И Источник = Объект.Ссылка Тогда
		Прочитать();
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "АктивнаяВерсияИзменена" И Источник = Объект.Ссылка Тогда
		Прочитать();
	КонецЕсли;
	
	//// СтандартныеПодсистемы.Свойства
	//Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
	//	ОбновитьЭлементыДополнительныхРеквизитов();
	//КонецЕсли;
	//// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	//// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)
	
	Объект.Наименование = Объект.ПолноеНаименование;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	//// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	//// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект)
	
	//Если НаименованиеДоЗаписи <> ТекущийОбъект.Наименование Тогда
	//	Если ТекущийОбъект.ТекущаяВерсия.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВТомахНаДиске Тогда
	//		РаботаСФайламиВызовСервера.ПереименоватьФайлВерсииНаДиске(ТекущийОбъект.ТекущаяВерсия, НаименованиеДоЗаписи, 
	//			ТекущийОбъект.Наименование, УникальныйИдентификатор);
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Если НовыйФайл Тогда 
	//	ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайла(Объект.Ссылка);
	//	ДанныеФайлаКорректны = Истина;
	//КонецЕсли;
	//
	//Если Не Параметры.ФайлОснование.Пустая() И Объект.ТекущаяВерсия.Пустая() Тогда
	//	СоздатьКопиюВерсии(Объект.Ссылка, Параметры.ФайлОснование, КопироватьПодписиЭЦП);
	//	Модифированность = Ложь;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи()
	Если НовыйФайл Тогда 
		НовыйФайлЗаписан = Истина;
		
		ПараметрыОповещения = Новый Структура("Владелец, Файл, Событие", Объект.ВладелецФайла, Объект.Ссылка, "СозданФайл");
		Оповестить("Запись_Файл", ПараметрыОповещения);
		
	Иначе
		//Если НаименованиеДоЗаписи <> Объект.Наименование Тогда
		//	// в кеше обновить файл
		//	РаботаСФайламиКлиент.ОбновитьИнформациюВРабочемКаталоге(Объект.ТекущаяВерсия, Объект.Наименование);
		//	НаименованиеДоЗаписи = Объект.Наименование;
		//КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовФормы();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	//// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПолноеНаименованиеПриИзменении(Элемент)
	Объект.ПолноеНаименование = СокрЛП(Объект.ПолноеНаименование);
	Попытка
		//ФайловыеФункцииСлужебныйКлиент.КорректноеИмяФайла(Объект.ПолноеНаименование, Истина);
	Исключение
		Информация = ИнформацияОбОшибке();
	    Предупреждение(Информация.Описание);
	КонецПопытки;
	
	Объект.Наименование = СокрЛП(Объект.ПолноеНаименование);
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
		ОбновитьПолныйПуть();
	КонецЕсли;
	
	ТипВладельца = ТипЗнч(Объект.ВладелецФайла);
	Элементы.Владелец.Заголовок = ТипВладельца;
	
КонецПроцедуры

// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Процедура ПроверитьНаСервере(ДанныеВыделенныхСтрок)
	
	//ФайловыеФункцииСлужебный.ПроверитьНаСервере(ДанныеВыделенныхСтрок);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьВсеНаСервере(ТаблицаПодписей)
	
	//ФайловыеФункцииСлужебный.ПроверитьВсеНаСервере(ТаблицаПодписей);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовФормы()
	
	ДоступныДействияСФайлом = Не Объект.ТекущаяВерсия.Пустая() И Не Объект.Ссылка.Пустая();
	
	Элементы.ХранитьВерсии.Доступность = ДоступныДействияСФайлом И Не Объект.ПометкаУдаления;
	Элементы.ОтменитьРедактирование.Доступность = Не Объект.Редактирует.Пустая();
	Элементы.ОткрытьКаталогФайла.Доступность = ДоступныДействияСФайлом;
	Элементы.СохранитьКак.Доступность = ДоступныДействияСФайлом;
	
	Элементы.Редактировать.Доступность = НЕ Объект.ПодписанЭЦП;
	Элементы.ЗакончитьРедактирование.Доступность = Не Объект.Редактирует.Пустая();
	Элементы.ПолноеНаименование.ТолькоПросмотр = НЕ Объект.Редактирует.Пустая();
	Элементы.Занять.Доступность = Объект.Редактирует.Пустая() И (ДоступныДействияСФайлом) И НЕ Объект.ПодписанЭЦП;
	Элементы.СохранитьИзменения.Доступность = Не Объект.Редактирует.Пустая();
	
	Элементы.ОбновитьИзФайлаНаДиске.Доступность = ДоступныДействияСФайлом И НЕ Объект.ПодписанЭЦП;
	
	Элементы.ФормаПодписать.Доступность = (ДоступныДействияСФайлом И Объект.Редактирует.Пустая()) ИЛИ НЕ ДоступныДействияСФайлом;
	Элементы.ФормаЗашифровать.Доступность = (ДоступныДействияСФайлом И Объект.Редактирует.Пустая() И НЕ Объект.Зашифрован) ИЛИ НЕ ДоступныДействияСФайлом;
	
	Элементы.ФормаДобавитьЭЦПИзФайла.Доступность = ДоступныДействияСФайлом И Объект.Редактирует.Пустая();
	Элементы.ФормаСохранитьВместеСЭЦП.Доступность = ДоступныДействияСФайлом И Объект.ПодписанЭЦП;
	Элементы.ФормаРасшифровать.Доступность = ДоступныДействияСФайлом И Объект.Зашифрован;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВыполнить()
	Записать();
	Прочитать();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПолныйПуть()
	
	Если ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
		
		ПапкаРодитель = __ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Ссылка, "ВладелецФайла");
		
		Если ЗначениеЗаполнено(ПапкаРодитель) Тогда
		
			ПолныйПуть = "";
			
			Пока ЗначениеЗаполнено(ПапкаРодитель) Цикл
				
				Если Не ПустаяСтрока(ПолныйПуть) Тогда
					ПолныйПуть = "\" + ПолныйПуть;
				КонецЕсли;	
				
				ПолныйПуть = Строка(ПапкаРодитель) + ПолныйПуть;
				
				ПапкаРодитель = __ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ПапкаРодитель, "Родитель");
				Если Не ЗначениеЗаполнено(ПапкаРодитель) Тогда
					Прервать;
				КонецЕсли;	
				
			КонецЦикла;

			
		КонецЕсли;	
			
	КонецЕсли;	
	
КонецПроцедуры	
