////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции работы с пользователями

// Проверяет возможность запуска с пустым списком пользователей для клиентских соединений.
//
// Для фоновых заданий, внешних соединений, вызовов веб-сервисов запуск с
// пустым списком пользователей всегда возможен - для пустого пользователя ИБ
// всегда используется пользователь <Не указан> справочника Пользователи.
//
// В случае, когда основная роль пустого пользователя не обеспечивает
// требуемых прав в обработчике фонового задания или веб-сервиса,
// привилегированный режим устанавливается прямо в обработчике.
// Для внешних соединений можно использовать запуск в привилегированном
// режиме (параметр командной строки "/UsePrivilegedMode").
//
Функция ПроверитьВозможностьЗапускаСПустымСпискомПользователейИБ(ВернутьТекстОшибки = Ложь) Экспорт
	
	Если ПривилегированныйРежим() Тогда
		// Выполнен запуск в привилегированном режиме
		// (параметр командной строки "/UsePrivilegedMode").
		//
		// В этом режиме пользователь имеет все права,
		// первого администратора не требуется создавать.
		Возврат "";
	КонецЕсли;
	
	ТекущийПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ЗначениеЗаполнено(ТекущийПользовательИБ.Имя) Тогда
		// Список пользователей ИБ не пустой.
		Возврат "";
	КонецЕсли;
	
	ОсновныеРоли = Метаданные.ОсновныеРоли;
	
	Если ОсновныеРоли = Неопределено Тогда
		// Основная роль не назначена, поэтому пустой пользователь
		// имеет права, соответствующие привилегированному режиму.
		Возврат "";
	КонецЕсли;
	
	Для Каждого Роль Из Метаданные.ОсновныеРоли Цикл
		Если ПравоДоступа("Администрирование", Метаданные, Роль) Тогда
			Возврат "";
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ПравоДоступа("Администрирование", Метаданные, ТекущийПользовательИБ) Тогда
		// Список пользователей не пустой.
		//
		// Когда основная роль не содержит право Администрирование,
		// а пустой текущий пользователь содержит право Администрирование,
		// то оно было добавлено принудительно, что возможно только при пустом
		// списке пользователей информационной базы.
		Возврат "";
	КонецЕсли;
	
	ТекстОшибки =
		НСтр("ru = 'Запуск с пустым списком пользователей информационной базы невозможен.
		           |Необходимо добавить администратора системы с двумя ролями
		           |""Администратор системы"", ""Полные права"" и повторить запуск программы от его имени.
		           |
		           |Для перехода к списку пользователей информационной базы необходимо открыть
		           |Конфигуратор и воспользоваться пунктом меню ""Администрирование - Пользователи"".'");
	
	Если НЕ ВернутьТекстОшибки Тогда
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

// Доопределяет структуру параметров, необходимых для работы клиентского кода
// конфигурации.
//
// Параметры:
//   Параметры - Структура, в которую можно вставить параметры работы клиента при запуске.
//                 Ключ     - имя параметра,
//                 Значение - значение параметра.
//
// Пример использования:
//   Параметры.Вставить(<ИмяПараметра>, <Код получения значения параметра>);
//
Процедура ПриДобавленииПараметровРаботыКлиента(Параметры) Экспорт
	
	Параметры.Вставить("ЭтоПолноправныйПользователь", Пользователи.ЭтоПолноправныйПользователь());
	
КонецПроцедуры
