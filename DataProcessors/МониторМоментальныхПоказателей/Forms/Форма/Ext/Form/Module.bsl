
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПериодыНаСервере();
	
	ЦенаВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравнения.Больше");
	ЦенаЗначениеСравнения = -1;
	
	КЦП = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПериодыНаСервере()
	
	//Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.ПустаяСсылка");
	//
	//Период1.ДатаНачала = НачалоДня(Дата('20170516'));
	//Период1.ДатаОкончания = КонецДня(Дата('20170516'));
	//
	//Период2.ДатаНачала = НачалоДня(Дата('20170517'));
	//Период2.ДатаОкончания = КонецДня(Дата('20170517'));
	
	//Возврат;

	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Периодичность 	= ПредопределенноеЗначение("Перечисление.Периодичность.День");
		Период1.Вариант = ВариантСтандартногоПериода.Вчера;
		Период2.Вариант = ВариантСтандартногоПериода.Сегодня;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
		Период1.Вариант = ВариантСтандартногоПериода.Вчера;
		Период2.Вариант = ВариантСтандартногоПериода.Сегодня;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.ДеньНедели") Тогда
		Период1.ДатаНачала = НачалоДня(ТекущаяДата() - 7*86400);
		Период1.ДатаОкончания = КонецДня(ТекущаяДата() - 7*86400);
		Период2.Вариант = ВариантСтандартногоПериода.Сегодня;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
		Период1.Вариант = ВариантСтандартногоПериода.ПрошлаяНеделяДоТакогоЖеДняНедели;
		Период2.Вариант = ВариантСтандартногоПериода.СНачалаЭтойНедели;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
		Период1.Вариант = ВариантСтандартногоПериода.ПрошлыйМесяцДоТакойЖеДаты;
		Период2.Вариант = ВариантСтандартногоПериода.СНачалаЭтогоМесяца;
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Период1.Вариант = ВариантСтандартногоПериода.ПрошлыйГодДоТакойЖеДаты;
		Период2.Вариант = ВариантСтандартногоПериода.СНачалаЭтогоГода;
	КонецЕсли;
	
	Если Периодичность <> ПредопределенноеЗначение("Перечисление.Периодичность.ПустаяСсылка") Тогда //все кроме произвольного
		НачалоПериода1 	= Период1.ДатаНачала;
		КонецПериода1 	= Период1.ДатаОкончания;
		НачалоПериода2 	= Период2.ДатаНачала;
		КонецПериода2 	= Период2.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Период1ПриИзменении(Элемент)
	ПериодПриИзменении(); 
КонецПроцедуры

&НаКлиенте
Процедура Период2ПриИзменении(Элемент)
	ПериодПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении()
	ПериодПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
	Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.ПустаяСсылка");
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	Если Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя = "ГруппаОтборы" Тогда
		Элементы.ГруппаЗакладки.ТекущаяСтраница = Элементы.ГруппаЗакладки.ПодчиненныеЭлементы.ГруппаПланФакт;
	КонецЕсли;
	
	ФлагВключен = Ложь;
	Показатель = "";
	Для Каждого ПодчиненныйЭлемент Из Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы Цикл
		Если ЭтаФорма[ПодчиненныйЭлемент.Имя] = Истина Тогда
			Показатель = ПодчиненныйЭлемент.Имя;
			ФлагВключен = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ФлагВключен Тогда
		Для Каждого ПодчиненныйЭлемент Из Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы Цикл
			Если ЭтаФорма[ПодчиненныйЭлемент.Имя] = Истина Тогда
				Показатель = ПодчиненныйЭлемент.Имя;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.Обновить(Период1.ДатаНачала, Период1.ДатаОкончания, Период2.ДатаНачала, Период2.ДатаОкончания, 
							Ресторан, Оплата, Номенклатура, ЦенаВидСравнения, ЦенаЗначениеСравнения, УчитыватьКоэффициентПересчета, 
							ТабличноеПолеСравнениеПериодов, ТабличноеПолеТекущаяДата, ТабличноеПолеВыполнениеПлана, ТабличноеПолеПланФакт, 
							Показатель, ДиаграммаСравнениеПериодов, ДиаграммаВыполнениеПланаСумма, ДиаграммаВыполнениеПланаВаловыйДоход,
							ДиаграммаИзменениеПоказателей, ДиаграммаПланФакт,
							ДиаграммаСреднийЧек, ДиаграммаПоказатели);
	
КонецПроцедуры

&НаКлиенте
Процедура РесторанНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбора(Элемент, "Рестораны");
КонецПроцедуры

&НаКлиенте
Процедура ОплатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбора(Элемент, "ВидыОплатЧекаККМ");
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбора(Элемент, "Номенклатура");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбора(Элемент, ИмяСправочника)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяСправочника"		, ИмяСправочника);
	ПараметрыОткрытия.Вставить("ИмяПараметра"		, "СписокОтмеченных");
	ПараметрыОткрытия.Вставить("ЗначениеПараметра"	, ЭтаФорма[Элемент.Имя]);
	
	ОткрытьФормуМодально("Обработка.МониторМоментальныхПоказателей.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр.Имя = "Рестораны" Тогда
		ЭтаФорма.Ресторан = Параметр.Значение;
	ИначеЕсли Параметр.Имя = "ВидыОплатЧекаККМ" Тогда
		ЭтаФорма.Оплата = Параметр.Значение;
	ИначеЕсли Параметр.Имя = "Номенклатура" Тогда
		ЭтаФорма.Номенклатура = Параметр.Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КЦППриИзменении(Элемент)
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы);
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы);
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура СебестоимостьПроцентПриИзменении(Элемент)
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы);
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура ВаловыйДоходПроцентПриИзменении(Элемент)
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы);
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура СредняяТранзакцияПриИзменении(Элемент)
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы);
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура КЦПТранзакцияПриИзменении(Элемент)
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаЛево.ПодчиненныеЭлементы);
	ПриИзмененииФлага(Элемент, Элементы.ГруппаАналитикаПраво.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииФлага(Элемент, ПодчиненныеЭлементы)
	
	Если ЭтаФорма[Элемент.Имя] = Ложь Тогда
		ЭтаФорма[Элемент.Имя] = Истина
	КонецЕсли;
	
	Для Каждого ПодчиненныйЭлемент Из ПодчиненныеЭлементы Цикл
		Если ПодчиненныйЭлемент.Имя <> Элемент.Имя Тогда 
			ЭтаФорма[ПодчиненныйЭлемент.Имя] = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
