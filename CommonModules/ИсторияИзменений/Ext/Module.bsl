
Функция ПолучитьОригиналОбъекта(Источник) Экспорт
	
	Перем МетаданныеИсточника;

	// Параметры.
	Параметры = Источник.ДополнительныеСвойства;
	
	НеобходимоПолучение = (Не Параметры.Свойство("ИсторияИзменений")) Или
	                      (Не Параметры.ИсторияИзменений.Свойство("Оригинал")) Или
						  (Не Параметры.ИсторияИзменений.ИдентификаторТранзации = Параметры.ИсторияИзменений.ИдентификаторТранзацииПолученияОригинала) Или
						  (Параметры.ИсторияИзменений.ПоддержкаВерсийОбъектом И (Источник.Ссылка.ИсторияИзмененийВерсия = Параметры.ИсторияИзменений.Оригинал.ИсторияИзмененийВерсия));
						  
	// Оригинал.
	Если НеобходимоПолучение Тогда
		
		Если Не Параметры.Свойство("Метаданны", МетаданныеИсточника) Тогда
			МетаданныеИсточника = Источник.Метаданные();
		КонецЕсли;
		
		Если Источник.Ссылка.Пустая() Тогда
			Оригинал = Источник.Ссылка;
		Иначе
			Оригинал = Источник.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		ИсторияИзмененийПараметры = Новый Структура("Оригинал,Метаданные,ИдентификаторТранзации,ИдентификаторТранзацииПолученияОригинала,ПоддержкаВерсийОбъектом", 
												    Оригинал,
												    МетаданныеИсточника,
												    Неопределено,
												    Неопределено,
												    ОбщегоНазначения.ЕстьРеквизитДокумента("ИсторияИзмененийВерсия", МетаданныеИсточника));
		
		Параметры.Вставить("Метаданны", МетаданныеИсточника);
		Параметры.Вставить("ИсторияИзменений", ИсторияИзмененийПараметры);

	КонецЕсли; 

	// Результат.
	Возврат Параметры.ИсторияИзменений.Оригинал;
	
КонецФункции // ПолучитьОригиналОбъекта()


Процедура УстановитьНовыйИдентификаторТранзации(Источник) Экспорт
	
	// Параметры.
	Параметры = Источник.ДополнительныеСвойства;
	
	// Идентификатор транзации.
	Если Параметры.Свойство("ИсторияИзменений") И Параметры.ИсторияИзменений.Свойство("ИдентификаторТранзации") Тогда
		Если (Параметры.ИсторияИзменений.ИдентификаторТранзации = Неопределено) Тогда
			Параметры.ИсторияИзменений.ИдентификаторТранзации = Новый УникальныйИдентификатор;
			Параметры.ИсторияИзменений.ИдентификаторТранзацииПолученияОригинала = Параметры.ИсторияИзменений.ИдентификаторТранзации;
		Иначе
			Параметры.ИсторияИзменений.ИдентификаторТранзации = Новый УникальныйИдентификатор;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // УстановитьНовыйИдентификаторТранзации()

 Процедура ПередЗаписьюОбъекта(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
КонецПроцедуры // ПередЗаписьюОбъекта()


Процедура ПриЗаписиОбъекта(Источник, Отказ) Экспорт
	
	// Параметры.
	Параметры = Источник.ДополнительныеСвойства;
	
	// Регистрация изменения.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИсторияИзмененийОбъекты.Ключ КАК Ключ
	                      |ИЗ
	                      |	(ВЫБРАТЬ ПЕРВЫЕ 1
	                      |		ИсторияИзмененийОбъекты.Ключ КАК Ключ
	                      |	ИЗ
	                      |		РегистрСведений.ИсторияИзмененийОбъекты КАК ИсторияИзмененийОбъекты
	                      |	
	                      |	УПОРЯДОЧИТЬ ПО
	                      |		Ключ УБЫВ) КАК ИсторияИзмененийОбъекты
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	0");
	Ключ = (Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ключ")[0] + 1);
	
	Запись = РегистрыСведений.ИсторияИзмененийОбъекты.СоздатьМенеджерЗаписи();
	Запись.Объект = Источник.Ссылка; 
	Запись.Ключ = Ключ; 
	Запись.Дата = ТекущаяДата(); 
	//Запись.Компьютер = глЗначениеПеременной("глТекущийКомпьютер"); 
	Запись.Пользователь = глЗначениеПеременной("глТекущийПользователь"); 
	Запись.Сотрудник = глЗначениеПеременной("глТекущийСотрудник"); 

	// Запись набора записей.
	Попытка
		Запись.Записать();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, ,, РегистрыСведений.ИсторияИзмененийОбъекты.СоздатьНаборЗаписей(), Источник);
	КонецПопытки;
	
КонецПроцедуры // ПриЗаписиОбъекта()

Процедура ПослеЗаписиОбъекта(Источник) Экспорт
	
	Перем Оригинал; 
	
	// Параметры.
	Параметры = Источник.ДополнительныеСвойства;
	
	// Актуализация оригинала.
	Если Параметры.Свойство("ИсторияИзменений") И Параметры.ИсторияИзменений.Свойство("Оригинал", Оригинал) Тогда
		
		// -- Шапка.
		ЗаполнитьЗначенияСвойств(Оригинал, Источник);
		
		// -- Табличные части.
		Для Каждого ТабличнаяЧасть Из Параметры.ИсторияИзменений.Метаданные.ТабличныеЧасти Цикл
			Оригинал[ТабличнаяЧасть.Имя].Загрузить(Источник[ТабличнаяЧасть.Имя].Выгрузить());
		КонецЦикла;
		
		// -- Идентификатор транзации.
		Параметры.ИсторияИзменений.ИдентификаторТранзации = Неопределено;
		Параметры.ИсторияИзменений.ИдентификаторТранзацииПолученияОригинала = Неопределено;
		
	КонецЕсли; 
	
КонецПроцедуры // ПослеЗаписиОбъекта()
