
Процедура ПолучитьКомплектНоменклатуры(Ссылка, Объект) Экспорт

	// Связанный справочник.
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА КомплектыНоменклатуры.ЭтоГруппа
		|			ТОГДА КомплектыНоменклатуры.Наименование
		|		ИНАЧЕ КомплектыНоменклатуры.Номенклатура
		|	КОНЕЦ КАК Номенклатура,
		|	КомплектыНоменклатуры.Обязательный,
		|	КомплектыНоменклатуры.ЭтоГруппа,
		|	КомплектыНоменклатуры.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА КомплектыНоменклатуры.ЭтоГруппа
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА КомплектыНоменклатуры.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.КомплектыНоменклатуры КАК КомплектыНоменклатуры
		|ГДЕ
		|	КомплектыНоменклатуры.Владелец = &Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка ИЕРАРХИЯ
		|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Номенклатура", Ссылка.Ссылка);
	
	Комплект = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЗначениеВДанныеФормы(Комплект, Объект);	
		
КонецПроцедуры // ПолучитьКомплектНоменклатуры()

Процедура УстановитьКомплектНоменклатуры(Ссылка, Объект, Отказ) Экспорт

	Если Не Отказ Тогда
		
		Комплект = ДанныеФормыВЗначение(Объект, Тип("ДеревоЗначений"));
		
		// Текущее состояние.
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КомплектыНоменклатуры.Ссылка,
			|	КомплектыНоменклатуры.ЭтоГруппа,
			|	ЛОЖЬ КАК Используется
			|ИЗ
			|	Справочник.КомплектыНоменклатуры КАК КомплектыНоменклатуры
			|ГДЕ
			|	КомплектыНоменклатуры.Владелец = &Номенклатура");
		Запрос.УстановитьПараметр("Номенклатура", Ссылка.Ссылка);
		
		ТекущееСостояние = Запрос.Выполнить().Выгрузить();
		
		
		// Корректировка и проверка текущих ссылок.
		МассивПодчиненных = Новый Массив; МассивПодчиненных.Добавить(Комплект.Строки); МассивУдаляемых = Новый Массив; 

		Для Каждого РодительЭлементы Из МассивПодчиненных Цикл
			Для Каждого ПодчиненныеДанные Из РодительЭлементы Цикл
				ЭлементыПодчиненныхДанных = ПодчиненныеДанные.Строки; 
				Если ЭлементыПодчиненныхДанных.Количество() Тогда
					МассивПодчиненных.Добавить(ЭлементыПодчиненныхДанных);
				Иначе
					Если ПодчиненныеДанные.ЭтоГруппа Тогда
						МассивУдаляемых.Добавить(ПодчиненныеДанные);
						Продолжить;
					КонецЕсли; 
				КонецЕсли; 
				
				// Текущая ссылка.
				Если ЗначениеЗаполнено(ПодчиненныеДанные.Ссылка) Тогда
					НайденнаяСтрока = ТекущееСостояние.Найти(ПодчиненныеДанные.Ссылка, "Ссылка");
					Если (НайденнаяСтрока = Неопределено) Тогда
						ПодчиненныеДанные.Ссылка = Справочники.КомплектыНоменклатуры.ПустаяСсылка();
					Иначе
						НайденнаяСтрока.Используется = Истина;
					КонецЕсли; 
				КонецЕсли; 
						
			КонецЦикла;
		КонецЦикла;
		Для Каждого ПодчиненныеДанные Из МассивУдаляемых Цикл
			Комплект.Строки.Удалить(ПодчиненныеДанные);
		КонецЦикла; 
		
		// Поиск альтернативных ссылок.
		Для Каждого ПодчиненныеДанные Из Комплект.Строки.НайтиСтроки(Новый Структура("Ссылка", Справочники.КомплектыНоменклатуры.ПустаяСсылка()), Истина) Цикл
				
			МассивНайденных = ТекущееСостояние.НайтиСтроки(Новый Структура("Используется,ЭтоГруппа", Ложь, ПодчиненныеДанные.ЭтоГруппа));
			Если МассивНайденных.Количество() Тогда
				ПодчиненныеДанные.Ссылка = МассивНайденных[0].Ссылка;
				МассивНайденных[0].Используется = Истина;
			КонецЕсли; 
				
		КонецЦикла;
		

		// Запись.
		МассивЭлементов = Новый Массив; 
		МассивЭлементов.Добавить(Комплект.Строки.НайтиСтроки(Новый Структура("ЭтоГруппа", Истина), Ложь));
		МассивЭлементов.Добавить(Комплект.Строки.НайтиСтроки(Новый Структура("ЭтоГруппа", Ложь), Истина));
		
		Для Каждого Элементы Из МассивЭлементов Цикл
			Для Каждого ПодчиненныеДанные Из Элементы Цикл
				
				Если ЗначениеЗаполнено(ПодчиненныеДанные.Ссылка) Тогда
					ОбъектКомплекта = ПодчиненныеДанные.Ссылка.ПолучитьОбъект();
				Иначе
					Если ПодчиненныеДанные.ЭтоГруппа Тогда
						ОбъектКомплекта = Справочники.КомплектыНоменклатуры.СоздатьГруппу();
					Иначе
						ОбъектКомплекта = Справочники.КомплектыНоменклатуры.СоздатьЭлемент();
					КонецЕсли; 
				КонецЕсли;
				
				ОбъектКомплекта.Владелец = Ссылка.Ссылка;
				ОбъектКомплекта.ПометкаУдаления = Ложь;
				Если (ПодчиненныеДанные.Родитель = Неопределено) Тогда
					ОбъектКомплекта.Родитель = Неопределено;
				Иначе
					ОбъектКомплекта.Родитель = ПодчиненныеДанные.Родитель.Ссылка;
				КонецЕсли; 
				Если ПодчиненныеДанные.ЭтоГруппа Тогда
					ОбъектКомплекта.Наименование = ПодчиненныеДанные.Номенклатура;
				Иначе
					ОбъектКомплекта.Номенклатура = ПодчиненныеДанные.Номенклатура;
					ОбъектКомплекта.Обязательный = ПодчиненныеДанные.Обязательный;
				КонецЕсли; 
		
				Попытка
					ОбъектКомплекта.Записать();
				Исключение
					// ERR
					Отказ = Истина;
					Прервать;
				КонецПопытки;
				
				ПодчиненныеДанные.Ссылка = ОбъектКомплекта.Ссылка;
				
			КонецЦикла;
			
			Если Отказ Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла;
		
		
		// Удаление.
		Если Не Отказ Тогда
			МассивЭлементов = Новый Массив; 
			МассивЭлементов.Добавить(ТекущееСостояние.НайтиСтроки(Новый Структура("Используется,ЭтоГруппа", Ложь, Ложь)));
			МассивЭлементов.Добавить(ТекущееСостояние.НайтиСтроки(Новый Структура("Используется,ЭтоГруппа", Ложь, Истина)));
			
			Для Каждого Элементы Из МассивЭлементов Цикл
				Для Каждого ПодчиненныеДанные Из Элементы Цикл
					
					Попытка
				    	ПодчиненныеДанные.Ссылка.ПолучитьОбъект().Удалить();
					Исключение
						// ERR
						Отказ = Истина;
						Прервать;
					КонецПопытки;
					
				КонецЦикла;
			
				Если Отказ Тогда
					Прервать;
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли; 
	
		
		// Актуализация.
		Если Не Отказ Тогда
			ЗначениеВДанныеФормы(Комплект, Объект);	
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры // УстановитьКомплектНоменклатуры()

//Костенюк Александр-Старт 21.06.2012
Функция ПолучитьКомплект(Владелец) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КомплектыНоменклатуры.Родитель КАК Родитель,
	               |	КомплектыНоменклатуры.Код КАК Код,
	               |	КомплектыНоменклатуры.Ссылка КАК Ссылка,
	               |	КомплектыНоменклатуры.Представление КАК Представление,
	               |	КомплектыНоменклатуры.ЭтоГруппа,
	               |	КомплектыНоменклатуры.Номенклатура КАК Номенклатура,
	               |	КомплектыНоменклатуры.Обязательный КАК Пометка,
	               |	КомплектыНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	КомплектыНоменклатуры.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	               |	КомплектыНоменклатуры.Владелец.НоменклатурнаяГруппа.Организация КАК Организация
	               |ИЗ
	               |	Справочник.КомплектыНоменклатуры КАК КомплектыНоменклатуры
	               |ГДЕ
	               |	КомплектыНоменклатуры.Владелец = &Владелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КомплектыНоменклатуры.Ссылка ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("Владелец", Владелец);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции
//Костенюк Александр-Финиш 21.06.2012
