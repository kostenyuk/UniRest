
&НаКлиенте
Процедура ОтражатьВУправленческомУчетеПриИзменении(Элемент)
	
	Объект.ОтражатьВБухгалтерскомУчете = Объект.ОтражатьВБухгалтерскомУчете Или (Не Объект.ОтражатьВУправленческомУчете);
	Объект.ОтражатьВНалоговомУчете = Объект.ОтражатьВБухгалтерскомУчете;
	
КонецПроцедуры // ОтражатьВУправленческомУчетеПриИзменении()

&НаКлиенте
Процедура ОтражатьВБухгалтерскомУчетеПриИзменении(Элемент)
	
	Объект.ОтражатьВУправленческомУчете = Объект.ОтражатьВУправленческомУчете Или (Не Объект.ОтражатьВБухгалтерскомУчете);
	Объект.ОтражатьВНалоговомУчете = Объект.ОтражатьВБухгалтерскомУчете;
	
КонецПроцедуры // ОтражатьВБухгалтерскомУчетеПриИзменении()

&НаКлиенте
Процедура ИспользуетсяПриИзменении(Элемент)

	Используется = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Используется, "Р+С");
	
	Объект.ИспользоватьВРеализацияТоваровУслуг = (Используется = "Р") Или (Используется = "Р+С");
	Объект.ИспользоватьВСписаниеТоваров = (Используется = "С") Или (Используется = "Р+С");
	
КонецПроцедуры // ИспользуетсяПриИзменении()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Используется.
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииНаСервере(Объект);	
	КонецЕсли;
	
	// Управленчиский учет.
	ИспользоватьУправленческийУчет = ПолучитьФункциональнуюОпцию("ИспользоватьУправленческийУчет");

	// Настройка формы.
	Элементы.ГруппаУчет.Видимость = ИспользоватьУправленческийУчет;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Используется.
	Если Объект.ИспользоватьВРеализацияТоваровУслуг И Объект.ИспользоватьВСписаниеТоваров Тогда
		Используется = "Р+С";
	Иначе
		Если Объект.ИспользоватьВРеализацияТоваровУслуг Тогда
			Используется = "Р";
		КонецЕсли; 
		Если Объект.ИспользоватьВСписаниеТоваров Тогда
			Используется = "С";
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
//Костенюк Александр-Старт 03.12.2012
Процедура ТипОплатыСписокПриИзменении(Элемент)
	
	Если ТипОплатыСписок = "Наличные" Тогда
		Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.Наличные");
	ИначеЕсли ТипОплатыСписок = "ПлатежнаяКарта" Тогда
		Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта");
	ИначеЕсли ТипОплатыСписок = "БанковскийКредит" Тогда
		Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.БанковскийКредит");
	ИначеЕсли ТипОплатыСписок = "Чек" Тогда
		Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.Чек");
	ИначеЕсли ТипОплатыСписок = "БезналичныйРасчет" Тогда
		Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.БезналичныйРасчет");
	Иначе
		Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.ПустаяСсылка");
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры
//Костенюк Александр-Финиш 03.12.2012

&НаКлиенте
//Костенюк Александр-Старт 03.12.2012
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.Наличные") Тогда
		ТипОплатыСписок = "Наличные";
	ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта") Тогда
		ТипОплатыСписок = "ПлатежнаяКарта";
	ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.БанковскийКредит") Тогда
		ТипОплатыСписок = "БанковскийКредит";
	ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.Чек") Тогда
		ТипОплатыСписок = "Чек";
	ИначеЕсли Объект.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.БезналичныйРасчет") Тогда
		ТипОплатыСписок = "БезналичныйРасчет";
	Иначе
		ТипОплатыСписок = "";
	КонецЕсли;
	
КонецПроцедуры
//Костенюк Александр-Финиш 03.12.2012
