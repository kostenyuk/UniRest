
&НаКлиенте
Процедура УстановитьДоступность()
	
	Если ПустаяСтрока(Запись.Файл) Тогда
		ИндексКартинки = __РаботаСФайламиКлиентСервер.ПолучитьИндексПиктограммыОтсутствияФайла();
	Иначе
		ИндексКартинки = __РаботаСФайламиКлиентСервер.ПолучитьИндексПиктограммыФайла(__РаботаСФайламиКлиентСервер.ПолучитьРасширениеФайла(Запись.Файл));
	КонецЕсли;
	Элементы.Сохранить.Доступность = Не ПустаяСтрока(Схема);
	
КонецПроцедуры // УстановитьВидимость()


&НаКлиенте
Функция ОткрытьСхему(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Открыть";
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'XML-данные|*.xml|Все файлы|*'; uk = 'XML-дані|*.xml|Всі файли|*'");
	ДиалогВыбораФайла.ИндексФильтра = 0;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Если Не ПустаяСтрока(Схема) Тогда
			УдалитьИзВременногоХранилища(Схема); Схема = Неопределено;
			УдалитьИзВременногоХранилища(Структура); Структура = Неопределено;
			Запись.Настроена = Ложь; 
		КонецЕсли;
		ПоместитьФайл(Схема, ДиалогВыбораФайла.ПолноеИмяФайла, , Ложь, УникальныйИдентификатор);
		
		ОткрытьСхемуНаСервере();
		
		Если Не ПустаяСтрока(Схема) Тогда
			Файл = СтрЗаменить(ДиалогВыбораФайла.ПолноеИмяФайла, ДиалогВыбораФайла.Каталог, "");
			Запись.Файл = Файл;
		Иначе
			Файл = Неопределено;
		КонецЕсли;
		
		Модифицированность = Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьДоступность();
	
	Возврат Истина;
	
КонецФункции // ОткрытьСхему()

&НаСервере
Функция ОткрытьСхемуНаСервере()
	
	Перем Значение;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Схема);
	Попытка
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
	Исключение
		Возврат __ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось сохранить файл.'; uk = 'Не вдалося зберегти файл.'"), , "Файл");
	КонецПопытки;
	
	Если РегистрыСведений.СхемыСтолов.ПрочитатьСхемуXML(ИмяВременногоФайла, Значение) Тогда
		
		Структура = ПоместитьВоВременноеХранилище(Значение, УникальныйИдентификатор);
		Статистика = РегистрыСведений.СхемыСтолов.ПолучитьСтатистикуСтруктурыСхемы(Значение);
		
		Запись.Настроена = Истина; 
		
		Запись.Размер = Статистика.Размер; 
		Запись.КоличествоСтолов = Статистика.КоличествоСтолов; 
		РазмеченныеСтолы = Статистика.РазмеченныеСтолы; 
	
	Иначе
		УдалитьИзВременногоХранилища(Схема); Схема = Неопределено;
		
		РазмеченныеСтолы = Новый СписокЗначений;
	КонецЕсли;
	Столы.Параметры.УстановитьЗначениеПараметра("РазмеченныеСтолы", РазмеченныеСтолы);
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
		// Не критично.
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции // ОткрытьСхемуНаСервере()

&НаКлиенте
Процедура СохранитьСхему(Команда)

	ПолучитьФайл(Схема, Запись.Файл, Истина);

КонецПроцедуры // СохранитьСхему()

&НаКлиенте
Процедура ПримерСхемы(Команда)

	ПолучитьФайл(ПримерСхемы, НСтр("ru = 'Пример.xml'; uk = 'Приклад.xml'"), Истина);

КонецПроцедуры // ПримерСхемы()



&НаКлиенте
Процедура ДекорацияПосмотретьНажатие(Элемент)
	
	Перем Параметры;
	
	Если Не ПустаяСтрока(Структура) Тогда
		
		Параметры = Новый Структура;
		Параметры.Вставить("Стол", Запись.Стол);
		Параметры.Вставить("СтруктураСхемы", ПолучитьИзВременногоХранилища(Структура));
		
		ОткрытьФорму("РегистрСведений.СхемыСтолов.Форма.ФормаСхемы", Параметры, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры // ДекорацияПосмотретьНажатие()


&НаКлиенте
Процедура СтолПриИзменении(Элемент)
	
	Запись.Стол = Стол;
	Если Не ЗначениеЗаполнено(Стол) Тогда
		Стол = НСтр("ru = 'Столы'; uk = 'Столи'");
	КонецЕсли;
	
	СтолПриИзмененииНаСервере();
	
КонецПроцедуры // СтолПриИзменении()

&НаСервере
Процедура СтолПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Столы.Ссылка
	|ИЗ
	|	Справочник.Столы КАК Столы
	|ГДЕ
	|	Столы.Ссылка В ИЕРАРХИИ(&Ссылка)
	|	И Столы.ЭтоГруппа";
	Запрос.УстановитьПараметр("Ссылка", Запись.Стол);
	
	ОтображаемыеГруппы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Родитель = Запись.Стол.Родитель;
	Пока ЗначениеЗаполнено(Родитель) Цикл
		ОтображаемыеГруппы.Добавить(Родитель);
		Родитель = Родитель.Родитель;
	КонецЦикла;
	
	Столы.Параметры.УстановитьЗначениеПараметра("ОтображаемыеГруппы", ОтображаемыеГруппы);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Столы.Отбор, "Ссылка", Запись.Стол, ВидСравненияКомпоновкиДанных.ВИерархии, , Истина);
	
КонецПроцедуры // СтолПриИзмененииНаСервере()

&НаКлиенте
Процедура СтолНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем Параметры;
	
	СтандартнаяОбработка = Ложь;
	
	Параметры = Новый Структура;
	Параметры.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Группы);
	Параметры.Вставить("РазрешитьВыборКорня", Истина);
	Параметры.Вставить("РежимВыбора", Истина);
	Параметры.Вставить("ТекущаяСтрока", Стол);
	
	ОткрытьФорму("Справочник.Столы.ФормаВыбораГруппы", Параметры, Элемент);
	
КонецПроцедуры // СтолНачалоВыбора()

&НаКлиенте
Процедура СтолОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры // СтолОткрытие()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Значение = РегистрыСведений.СхемыСтолов.ПолучитьМакет("Пример");
	ПримерСхемы = ПоместитьВоВременноеХранилище(Значение, УникальныйИдентификатор);
	
	СтолПриИзмененииНаСервере();
	
	Если Не Столы.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("РазмеченныеСтолы")).Использование Тогда
		РазмеченныеСтолы = Новый СписокЗначений;
		Столы.Параметры.УстановитьЗначениеПараметра("РазмеченныеСтолы", РазмеченныеСтолы);
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Стол = Запись.Стол;
	Если Не ЗначениеЗаполнено(Стол) Тогда
		Стол = НСтр("ru = 'Столы'; uk = 'Столи'");
	КонецЕсли;

	УстановитьДоступность();
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Значение = ТекущийОбъект.Схема.Получить();
	Если (Не Значение = Неопределено) Тогда
		Схема = ПоместитьВоВременноеХранилище(Значение, УникальныйИдентификатор);
	КонецЕсли;
	
	Значение = ТекущийОбъект.Структура.Получить();
	Если (Не Значение = Неопределено) Тогда
		Структура = ПоместитьВоВременноеХранилище(Значение, УникальныйИдентификатор);
	КонецЕсли;
	Статистика = РегистрыСведений.СхемыСтолов.ПолучитьСтатистикуСтруктурыСхемы(Значение);
		
	РазмеченныеСтолы = Статистика.РазмеченныеСтолы;
	Если (РазмеченныеСтолы = Неопределено) Тогда
		РазмеченныеСтолы = Новый СписокЗначений;
	КонецЕсли;
	
	Столы.Параметры.УстановитьЗначениеПараметра("РазмеченныеСтолы", РазмеченныеСтолы);
	
КонецПроцедуры  // ПриЧтенииНаСервере()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПустаяСтрока(Схема) Тогда
		ТекущийОбъект.Схема = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Схема), Новый СжатиеДанных(9));
	КонецЕсли;
	
	Если Не ПустаяСтрока(Структура) Тогда
		ТекущийОбъект.Структура = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Структура));
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписьюНаСервере()
