
Функция ДоступностьУточняемости(ТипСкидкиНаценки) Экспорт

	Возврат ((ТипСкидкиНаценки.Условие = Перечисления.УсловияСкидкиНаценки.РучнаяСкидка) Или
			 (ТипСкидкиНаценки.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуДисконтныхКарт) Или
			 (ТипСкидкиНаценки.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуСертификата) Или
			 (ТипСкидкиНаценки.Условие = Перечисления.УсловияСкидкиНаценки.ПоДисконтнойКарте) Или
			 (ТипСкидкиНаценки.Условие = Перечисления.УсловияСкидкиНаценки.ПоСертификату));

КонецФункции // ДоступностьУточняемости()

Функция ДоступностьВытесняющейСкидки(ТипСкидкиНаценки) Экспорт

	//Возврат Истина;
	
	//Костенюк Александр-Старт 16.08.2012
	Возврат НЕ ТипСкидкиНаценки.СуммоваяСкидкаНаценка;
	//Костенюк Александр-Финиш 16.08.2012

КонецФункции // ДоступностьВытесняющейСкидки()


Функция ОипсаниеТипаЗначенияУсловия(ТипСкидкиНаценки) Экспорт

	Условие = ТипСкидкиНаценки.Условие;
	
	Если (Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуДисконтныхКарт) Или
		 (Условие = Перечисления.УсловияСкидкиНаценки.ПоДисконтнойПрограмме) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.ВидыДисконтныхКарт");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоДисконтнойКарте) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуСертификата) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.ВидыСертификатов");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоСертификату) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.Сертификаты");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоКатегорииДокумента) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.КатегорииДокументов");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоКатегорииКонтрагента) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.КатегорииКонтрагентов");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоГруппеСобытия) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.ГруппыСобытий");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоДнюРождения) Тогда
		Возврат Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный));
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента) Тогда
		Возврат Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2, ДопустимыйЗнак.Неотрицательный));
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоКоличествуТовара) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоМаршрутуДоставки) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.МаршрутыДоставки");
	//Костенюк Александр-Старт 21.09.2012
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоУсловиюВидаДисконтнойКарты) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.ВидыДисконтныхКарт");
	//Костенюк Александр-Финиш 21.09.2012
	КонецЕсли;

	Возврат Новый ОписаниеТипов("Неопределено");
	
КонецФункции // ОипсаниеТипаЗначенияУсловия()

Функция ОипсаниеТипаЗначенияУсловияДополнительное(ТипСкидкиНаценки) Экспорт

	Условие = ТипСкидкиНаценки.Условие;
	
	Если (Условие = Перечисления.УсловияСкидкиНаценки.ПоДнюРождения) Тогда
		Возврат Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный));
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоКоличествуТовара) Тогда
		Возврат Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный));
	//Костенюк Александр-Старт 21.09.2012
	ИначеЕсли (Условие = Перечисления.УсловияСкидкиНаценки.ПоУсловиюВидаДисконтнойКарты) Тогда
		Возврат Новый ОписаниеТипов("СправочникСсылка.УсловияСкидок");
	//Костенюк Александр-Финиш 21.09.2012
	КонецЕсли;

	Возврат Новый ОписаниеТипов("Неопределено");
	
КонецФункции // ОипсаниеТипаЗначенияУсловияДополнительное()
