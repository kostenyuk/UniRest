
Функция СоздатьГруппуКолонок(Имя, Тип, Родитель = Неопределено)

	ГруппаКолонок = Элементы.Добавить(Имя, Тип, Родитель); 
	
	Возврат ГруппаКолонок
	
КонецФункции // ()

&НаСервере
Функция СохранитьНастройкиПланаОбмена()

	ЗначениеДеревоНастроекОбъектов = ДанныеФормыВЗначение(ДеревоНастроекОбъектов, Тип("ДеревоЗначений"));
	
	Для каждого Узел Из УзлыОбмена Цикл
	
		НастройкаУзлаИзменена = Истина;
		
		Если Не НастройкаУзлаИзменена Тогда
			Продолжить;		
		КонецЕсли;
		
		ПриставкаУзла = "_Ресторан" + Узел.Значение.Код;
		
		ТЗ_НастройкиСвязейМеждуБазамиРС = Новый ТаблицаЗначений;
		ТЗ_НастройкиСвязейМеждуБазамиРС.Колонки.Добавить("ИдентификаторОбъектаНастройки", Новый ОписаниеТипов(Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных")));
		ТЗ_НастройкиСвязейМеждуБазамиРС.Колонки.Добавить("ИсточникДанных", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(1));  
		
		Для каждого СтрокаДерева Из ЗначениеДеревоНастроекОбъектов.Строки Цикл
			
			Для каждого СтрокаНастройкиПоОбъекту Из СтрокаДерева.Строки Цикл
				
				СтрокаНастройки = ТЗ_НастройкиСвязейМеждуБазамиРС.Добавить();
				СтрокаНастройки.ИдентификаторОбъектаНастройки = СтрокаНастройкиПоОбъекту.ИдентификаторОбъектаНастройки;
				ИсточникДанных = 0;
				Для н = 1 по 3 Цикл
					Если СтрокаНастройкиПоОбъекту["ИсточникЗнач"+н+ПриставкаУзла] = Истина Тогда
						ИсточникДанных = н;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				СтрокаНастройки.ИсточникДанных = ИсточникДанных;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НастройкиСвязейМеждуБазамиРС", ТЗ_НастройкиСвязейМеждуБазамиРС);
		Запрос.УстановитьПараметр("Узел", Узел);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.ИдентификаторОбъектаНастройки,
		|	ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.ИсточникДанных
		|ПОМЕСТИТЬ ВЗ_ТекущиеНастройки
		|ИЗ
		|	&НастройкиСвязейМеждуБазамиРС КАК ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.Ссылка,
		|	ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.НомерСтроки КАК НомерСтроки,
		|	ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.ИдентификаторОбъектаНастройки,
		|	ВЗ_ТекущиеНастройки.ИсточникДанных КАК ИсточникДанных,
		|	ВЫБОР
		|		КОГДА ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.ИсточникДанных = ВЗ_ТекущиеНастройки.ИсточникДанных
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК БылоИзменение
		|ИЗ
		|	ПланОбмена.ОбменДанными2K_CRS.НастройкиСвязейМеждуБазамиРС КАК ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВЗ_ТекущиеНастройки КАК ВЗ_ТекущиеНастройки
		|		ПО ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.ИдентификаторОбъектаНастройки = ВЗ_ТекущиеНастройки.ИдентификаторОбъектаНастройки
		|			И (ОбменДаннымиFrontOffice_RestoranНастройкиСвязейМеждуБазамиРС.Ссылка = &Узел)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
		КонецЦикла;

		
	КонецЦикла;
	

КонецФункции // СохранитьНастройкиПланаОбмена()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиСервер.ФормаНастройкиУзловПриСозданииНаСервере(ЭтаФорма, Отказ);
	
	ПолучитьОписаниеКонтекста();

	УзелОбмена = ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел();
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОбменДанными2K_CRS.Ссылка) КАК Узлов
	//	|ИЗ
	//	|	ПланОбмена.ОбменДанными2K_CRS КАК ОбменДанными2K_CRS";

	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//Выборка.Следующий();
	//КоличествоУзловОбмена = Выборка.Узлов;

	//Если КоличествоУзловОбмена = 1 Тогда
	//	РолевоеЗначениеЭтогоУзла = 1
	//ИначеЕсли Не ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(УзелОбмена) Тогда
	//	РолевоеЗначениеЭтогоУзла = 2
	//Иначе
	//	РолевоеЗначениеЭтогоУзла = 3
	//КонецЕсли;
	РолевоеЗначениеЭтогоУзла = 3;
	СписокСоставаПоПолномуИмени = ОбменДаннымиПовтИсп.ПолучитьСписокОбъектовСоставаПланаОбмена("ОбменДанными2K_CRS", Ложь);
	 
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокСоставаПоПолномуИмени", СписокСоставаПоПолномуИмени);
	Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
	Запрос.УстановитьПараметр("ТаблицаГрупп", ПланыОбмена.ОбменДанными2K_CRS.ПолучитьТаблицуИерархииИдентификаторов());
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаГрупп.ПолноеИмяОбъекта,
		|	ТаблицаГрупп.ГруппаОбъекта
		|ПОМЕСТИТЬ ТаблицаГрупп
		|ИЗ
		|	&ТаблицаГрупп КАК ТаблицаГрупп
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбменДанными.ИдентификаторОбъектаНастройки КАК ИдентификаторОбъектаНастройки,
		|	ОбменДанными.Ссылка КАК УзелОбмена,
		|	ОбменДанными.ИсточникДанныхОбъекта КАК ИсточникДанных,
		|	ОбменДанными.ВидЗначимостиОбъекта,
		|	ОбменДанными.ИдентификаторОбъектаНастройки.ПолноеИмя КАК ИдентификаторПолноеИмя
		|ПОМЕСТИТЬ ВТ_УзлыОбмена
		|ИЗ
		|	ПланОбмена.ОбменДанными2K_CRS.НастройкиСвязейМеждуБазамиРС КАК ОбменДанными
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИдентификаторыОбъектовМетаданных.Ссылка,
		|	ИдентификаторыОбъектовМетаданных.Родитель,
		|	ИдентификаторыОбъектовМетаданных.ПолноеИмя
		|ПОМЕСТИТЬ ИдентификаторыМД
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|ГДЕ
		|	ИдентификаторыОбъектовМетаданных.ПолноеИмя В(&СписокСоставаПоПолномуИмени)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИдентификаторыМД.Ссылка КАК Ссылка,
		|	ВТ_УзлыОбмена.ИдентификаторОбъектаНастройки,
		|	ИдентификаторыМД.Родитель КАК Родитель,
		|	ВТ_УзлыОбмена.УзелОбмена КАК УзелОбмена,
		|	0 КАК ИсточникДанных,
		|	0 КАК ВидЗначимостиОбъекта,
		|	ВТ_УзлыОбмена.УзелОбмена.Код КАК УзелОбменаКод,
		|	ТаблицаГрупп.ГруппаОбъекта КАК ГруппаОбъекта
		|ИЗ
		|	ИдентификаторыМД КАК ИдентификаторыМД
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УзлыОбмена КАК ВТ_УзлыОбмена
		|		ПО ИдентификаторыМД.Ссылка = ВТ_УзлыОбмена.ИдентификаторОбъектаНастройки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаГрупп КАК ТаблицаГрупп
		|		ПО ИдентификаторыМД.ПолноеИмя = ТаблицаГрупп.ПолноеИмяОбъекта
		|ГДЕ
		|	ВТ_УзлыОбмена.ИдентификаторОбъектаНастройки ЕСТЬ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_УзлыОбмена.ИдентификаторОбъектаНастройки,
		|	NULL,
		|	ВТ_УзлыОбмена.ИдентификаторОбъектаНастройки.Родитель,
		|	ВТ_УзлыОбмена.УзелОбмена,
		|	ВТ_УзлыОбмена.ИсточникДанных,
		|	ВТ_УзлыОбмена.ВидЗначимостиОбъекта,
		|	ВТ_УзлыОбмена.УзелОбмена.Код,
		|	ТаблицаГрупп.ГруппаОбъекта
		|ИЗ
		|	ВТ_УзлыОбмена КАК ВТ_УзлыОбмена
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаГрупп КАК ТаблицаГрупп
		|		ПО ВТ_УзлыОбмена.ИдентификаторПолноеИмя = ТаблицаГрупп.ПолноеИмяОбъекта
		|
		|УПОРЯДОЧИТЬ ПО
		|	УзелОбменаКод,
		|	ГруппаОбъекта,
		|	Родитель УБЫВ,
		|	Ссылка
		|ИТОГИ ПО
		|	УзелОбмена,
		|	ГруппаОбъекта КАК Родитель";

		Результат = Запрос.Выполнить();
		
		ВыборкаУзелОбмена = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		СоотвИсточников = Новый Соответствие;
		СоотвИсточников.Вставить(Перечисления.ВидыБазИсточниковПриОбменеЦРС.ПустаяСсылка(), 0);
		СоотвИсточников.Вставить(Перечисления.ВидыБазИсточниковПриОбменеЦРС.АвтономнаяРабота, 1);
		СоотвИсточников.Вставить(Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЛокальнаяБазаБухгалтерии, 0);
		СоотвИсточников.Вставить(Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЛокальнаяБазаРесторана, 1);
		СоотвИсточников.Вставить(Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЦентральнаяБазаБухгалтерии, 2);
		СоотвИсточников.Вставить(Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЦентральнаяБазаРестораннойСистемы, 3);
		
		СоотвСтрокРодителей = Новый Соответствие;
		СоотвСтрок = Новый Соответствие;
		
		Пока ВыборкаУзелОбмена.Следующий() Цикл
			
			Если ВыборкаУзелОбмена.УзелОбмена = Null Или ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(ВыборкаУзелОбмена.УзелОбмена) Тогда
				Продолжить;
			КонецЕсли;
			
			УзлыОбмена.Добавить(ВыборкаУзелОбмена.УзелОбмена);
			
			мНовыхРеквизитов = Новый Массив;
			
			ПриставкаУзла = "_Ресторан"+ВыборкаУзелОбмена.УзелОбмена.Код;
			
			НоваяКолонкаУзел = Новый РеквизитФормы("Узел"+ПриставкаУзла, Новый ОписаниеТипов("ПланОбменаСсылка.ОбменДанными2K_CRS"), "ДеревоНастроекОбъектов");
			НоваяКолонкаАВТ = Новый РеквизитФормы("ИсточникЗнач1"+ПриставкаУзла, Новый ОписаниеТипов("Булево"),"ДеревоНастроекОбъектов", "Авт");
			НоваяКолонкаЦБ = Новый РеквизитФормы("ИсточникЗнач3"+ПриставкаУзла, Новый ОписаниеТипов("Булево"),"ДеревоНастроекОбъектов", "ЦБ");
			НоваяКолонкаБух = Новый РеквизитФормы("ИсточникЗнач2"+ПриставкаУзла, Новый ОписаниеТипов("Булево"),"ДеревоНастроекОбъектов", "Бух");
			
			мНовыхРеквизитов.Добавить(НоваяКолонкаУзел);
			мНовыхРеквизитов.Добавить(НоваяКолонкаАВТ);
			мНовыхРеквизитов.Добавить(НоваяКолонкаЦБ);
			мНовыхРеквизитов.Добавить(НоваяКолонкаБух);
			
			ЭтаФорма.ИзменитьРеквизиты(мНовыхРеквизитов);
			
			ГруппаКолонок                = Элементы.Добавить("ДеревоЗначенийЭтоЦБГруппа"+ПриставкаУзла, Тип("ГруппаФормы") , Элементы.ДеревоЗначенийЭтоЦБ);
			ГруппаКолонок.Вид            = ВидГруппыФормы.ГруппаКолонок;
			ГруппаКолонок.ТолькоПросмотр = Истина;
			ГруппаКолонок.ОтображатьВШапке = Истина;
			ГруппаКолонок.ОтображатьЗаголовок = Истина;
			ГруппаКолонок.Группировка = ГруппировкаКолонок.Горизонтальная;
			ГруппаКолонок.Заголовок = "Ресторан "+ВыборкаУзелОбмена.УзелОбмена + " (" + (ВыборкаУзелОбмена.УзелОбмена.Код) + ")";
			ГруппаКолонок.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			
			НовыйЭлемент = Элементы.Добавить("Узел"+ПриставкаУзла,Тип("ПолеФормы"), ГруппаКолонок); 
			НовыйЭлемент.Видимость = Ложь;
			НовыйЭлемент.ПутьКДанным = "ДеревоНастроекОбъектов.Узел"; 
			
			НовыйЭлемент = Элементы.Добавить("ИсточникЗнач1"+ПриставкаУзла, Тип("ПолеФормы"), ГруппаКолонок); 
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка; 
			НовыйЭлемент.ТриСостояния = Истина; 
			НовыйЭлемент.ПутьКДанным = "ДеревоНастроекОбъектов.ИсточникЗнач1"+ПриставкаУзла; 
			НовыйЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
			НовыйЭлемент.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			НовыйЭлемент = Элементы.Добавить("ИсточникЗнач3"+ПриставкаУзла, Тип("ПолеФормы"), ГруппаКолонок); 
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка; 
			НовыйЭлемент.ТриСостояния = Истина; 
			НовыйЭлемент.ПутьКДанным = "ДеревоНастроекОбъектов.ИсточникЗнач3"+ПриставкаУзла; 
			НовыйЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
			НовыйЭлемент.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			НовыйЭлемент = Элементы.Добавить("ИсточникЗнач2"+ПриставкаУзла, Тип("ПолеФормы"), ГруппаКолонок); 
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка; 
			НовыйЭлемент.ТриСостояния = Истина; 
			НовыйЭлемент.ПутьКДанным = "ДеревоНастроекОбъектов.ИсточникЗнач2"+ПриставкаУзла; 
			НовыйЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
			НовыйЭлемент.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			
		КонецЦикла;
		
		ЗначениеДеревоНастроекОбъектовРесторана = ДанныеФормыВЗначение(ДеревоНастроекОбъектов, Тип("ДеревоЗначений"));
			
		ВыборкаУзелОбмена.Сбросить();
		
		Пока ВыборкаУзелОбмена.Следующий() Цикл
			
			Если ВыборкаУзелОбмена.УзелОбмена = Null Тогда
				Продолжить;
			КонецЕсли;
			
			ПриставкаУзла = "_Ресторан"+ВыборкаУзелОбмена.УзелОбмена.Код;
					
			ВыборкаРодитель = ВыборкаУзелОбмена.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			ЭтотУзел = УзелОбмена = ВыборкаУзелОбмена.УзелОбмена;
			
			Пока ВыборкаРодитель.Следующий() Цикл
				
				НС_Родитель = СоотвСтрокРодителей.Получить(ВыборкаРодитель.ГруппаОбъекта);
				Если НС_Родитель = Неопределено Тогда
					КоличествоСтрокОбъектов = КоличествоСтрокОбъектов + 1;
					НС_Родитель = ЗначениеДеревоНастроекОбъектовРесторана.Строки.Добавить();
					НС_Родитель.ИдентификаторОбъектаНастройки = ВыборкаРодитель.ГруппаОбъекта; 	
					НС_Родитель.Узел = ВыборкаУзелОбмена.УзелОбмена; 	
					СоотвСтрокРодителей.Вставить(ВыборкаРодитель.ГруппаОбъекта, НС_Родитель);
				КонецЕсли;
					
				ВыборкаДетальныеЗаписи = ВыборкаРодитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					НС = СоотвСтрокРодителей.Получить(ВыборкаДетальныеЗаписи.Ссылка);
					Если НС = Неопределено Тогда
						НС = НС_Родитель.Строки.Добавить();
						НС.ИдентификаторОбъектаНастройки = ВыборкаДетальныеЗаписи.Ссылка;
						СоотвСтрокРодителей.Вставить(ВыборкаДетальныеЗаписи.Ссылка, НС);
					КонецЕсли;
					Если ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(ВыборкаУзелОбмена.УзелОбмена) Тогда
						КоличествоСтрокОбъектов = КоличествоСтрокОбъектов + 1;
						НС.ИдентификаторОбъектаНастройки = ВыборкаДетальныеЗаписи.Ссылка;
						НС.Узел = ВыборкаУзелОбмена.УзелОбмена;
						ИсточникДанных = СоотвИсточников.Получить(ВыборкаДетальныеЗаписи.ИсточникДанных);
						Если ИсточникДанных <= 0 Тогда
							ИсточникДанных = 3;
						КонецЕсли; 	
						
						НС["ИсточникЗнач"+ИсточникДанных] = Истина;
						
					Иначе	
						НС["Узел"+ПриставкаУзла] = ВыборкаУзелОбмена.УзелОбмена;
						ИсточникДанных = СоотвИсточников.Получить(ВыборкаДетальныеЗаписи.ИсточникДанных);
						Если ИсточникДанных <= 0 Тогда
							ИсточникДанных = 3;
						КонецЕсли; 	
						НС["ИсточникЗнач"+ИсточникДанных+ПриставкаУзла] = Истина;
					КонецЕсли;
					
					Продолжить;
					
					//Если ЭтотУзел Тогда
					//	КоличествоСтрокОбъектов = КоличествоСтрокОбъектов + 1;
					//КонецЕсли;
					//НС = НС_Родитель.Строки.Добавить();
					//НС.ИдентификаторОбъектаНастройки = ВыборкаДетальныеЗаписи.Ссылка;
					//НС.Узел = ВыборкаУзелОбмена.УзелОбмена;
					//ИсточникДанных = СоотвИсточников.Получить(ВыборкаДетальныеЗаписи.ИсточникДанных);
					//Если ИсточникДанных > 0 Тогда
					//	НС["ИсточникЗнач"+ИсточникДанных] = Истина;	
					//Иначе
					//	НС["ИсточникЗнач3"] = Истина;
					//КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
		
		Для каждого СтрокаРодитель Из ЗначениеДеревоНастроекОбъектовРесторана.Строки Цикл
				
				Дочерние = СтрокаРодитель.Строки;
				Для н = 1 По 3 Цикл
					Для каждого СтрДочерняя Из Дочерние Цикл
					
						ТекЗначение = СтрДочерняя["ИсточникЗнач"+н];
						с = 0;
						ЗначениеМеняется = Ложь;
						Пока Не ЗначениеМеняется И с < Дочерние.Количество() Цикл
							дСтрока = Дочерние[с];
							ЗначениеМеняется = ТекЗначение <> дСтрока["ИсточникЗнач"+н];
							с = с + 1;
						КонецЦикла;
						Если ЗначениеМеняется Тогда
							СтрокаРодитель["ИсточникЗнач"+н] = 2;	
							//СтрокаРодитель["ИсточникЗнач"+н+ПриставкаУзла] = 2;	
						Иначе
							СтрокаРодитель["ИсточникЗнач"+н] = СтрДочерняя["ИсточникЗнач"+н];	
							//СтрокаРодитель["ИсточникЗнач"+н+ПриставкаУзла] = СтрДочерняя["ИсточникЗнач"+н+ПриставкаУзла];	
						КонецЕсли;	
					
					КонецЦикла;
					
				КонецЦикла;	
				
			КонецЦикла;

		ЗначениеВДанныеФормы(ЗначениеДеревоНастроекОбъектовРесторана, Этаформа.ДеревоНастроекОбъектов);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыбратьСтраницуНастроекВСоответствииСРольюБазы()
КонецПроцедуры

&НаКлиенте
Процедура РолевоеЗначениеЭтогоУзлаПриИзменении(Элемент)
	ВыбратьСтраницуНастроекВСоответствииСРольюБазы()
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтраницуНастроекВСоответствииСРольюБазы()

	Если РолевоеЗначениеЭтогоУзла = 3 Тогда
	    Элементы.СтраницыРолейЗначенияЭтогоУзла.ТекущаяСтраница= Элементы.ЭтаБазаЦентральная;
	ИначеЕсли РолевоеЗначениеЭтогоУзла = 2 Тогда
	    Элементы.СтраницыРолейЗначенияЭтогоУзла.ТекущаяСтраница= Элементы.ЭтаБазаПериферийная;
	Иначе	
	    Элементы.СтраницыРолейЗначенияЭтогоУзла.ТекущаяСтраница= Элементы.ЭтаБазаАвтономная;
	КонецЕсли;	

КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗначенийЭтоЦБПриАктивизацииСтроки(Элемент)
	
	//ЭлРестораны = Элементы.ГруппаРестораны.ПодчиненныеЭлементы;
	//
	//НомерРесторана = 0;
	//
	//Для каждого ЭлРесторан Из ЭлРестораны Цикл
	//
	//	Если Не (ЭлРесторан.Видимость И ТипЗнч(ЭлРесторан) = Тип("ТаблицаФормы"))  Тогда
	//		Продолжить;
	//	КонецЕсли;	
	//	
	//	НомерРесторана = НомерРесторана + 1;
	//	
	//	ИдСтроки = Элементы.ДеревоЗначенийЭтоЦБ.ТекущаяСтрока + КоличествоСтрокОбъектов * НомерРесторана;

	//	ЭлРесторан.ТекущаяСтрока = ИдСтроки;
	//	
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийЭтоЦБПередРазворачиванием(Элемент, Строка, Отказ)
	
	//Элементы.ДеревоЗначенийЭтоЦБ.ТекущаяСтрока = Строка;
	//
	//НомерРесторана = 0;
	//
	//ЭлРестораны = Элементы.ГруппаРестораны.ПодчиненныеЭлементы;
	//
	//Для каждого ЭлРесторан Из ЭлРестораны Цикл
	//
	//	Если Не (ЭлРесторан.Видимость И ТипЗнч(ЭлРесторан) = Тип("ТаблицаФормы"))  Тогда
	//		Продолжить;
	//	КонецЕсли;	
	//	
	//	НомерРесторана = НомерРесторана + 1;
	//	
	//	ИдСтроки = Строка + КоличествоСтрокОбъектов*НомерРесторана;
	//
	//	ЭлРесторан.ТекущаяСтрока = ИдСтроки;	
	//	ЭлРесторан.Развернуть(ИдСтроки);

	//КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗначенийЭтоЦБПередСворачиванием(Элемент, Строка, Отказ)
	
	//Элементы.ДеревоЗначенийЭтоЦБ.ТекущаяСтрока = Строка;
	//
	//НомерРесторана = 0;
	//
	//ЭлРестораны = Элементы.ГруппаРестораны.ПодчиненныеЭлементы;
	//
	//Для каждого ЭлРесторан Из ЭлРестораны Цикл
	//
	//	Если Не (ЭлРесторан.Видимость И ТипЗнч(ЭлРесторан) = Тип("ТаблицаФормы"))  Тогда
	//		Продолжить;
	//	КонецЕсли;	
	//	
	//	НомерРесторана = НомерРесторана + 1;
	//	
	//	ИдСтроки = Строка + КоличествоСтрокОбъектов*НомерРесторана;
	//
	//	ЭлРесторан.ТекущаяСтрока = ИдСтроки;	
	//	ЭлРесторан.Свернуть(ИдСтроки);

	//КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьПериферийнуюБазу(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОтвязатьБазуОтСети(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораГалочкой(ТД, ТекИндекс)

	Если Не ТД["ИсточникЗнач"+ТекИндекс] = Истина Тогда
		ТекИндекс = 3;
		ТД["ИсточникЗнач"+ТекИндекс] = Истина
	КонецЕсли;
	Для н = 1 По 3 Цикл
		Если ТекИндекс = н Тогда
		    Продолжить;
		КонецЕсли;
		ТД["ИсточникЗнач"+н] = Ложь;	
	КонецЦикла;

	Для каждого Узел Из УзлыОбмена Цикл
	
		ПриставкаУзла = "_Ресторан" + Узел.Значение.Код;
		Если Не ТД["ИсточникЗнач"+ТекИндекс+ПриставкаУзла] = Истина Тогда
			ТД["ИсточникЗнач"+ТекИндекс+ПриставкаУзла] = Истина
		КонецЕсли;
		Для н = 1 По 3 Цикл
			Если ТекИндекс = н Тогда
				Продолжить;
			КонецЕсли;
			ТД["ИсточникЗнач"+н+ПриставкаУзла] = Ложь;	
		КонецЦикла;

	КонецЦикла;
	
	Родитель = ТД.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
	    //Заполнить все подчиненные
		Дочерние = ТД.ПолучитьЭлементы();
		Для каждого дСтрока Из Дочерние Цикл
			Для н = 1 По 3 Цикл
				дСтрока["ИсточникЗнач"+н] = ТД["ИсточникЗнач"+н];	
				дСтрока["ИсточникЗнач"+н+ПриставкаУзла] = ТД["ИсточникЗнач"+н+ПриставкаУзла];	
			КонецЦикла;
		КонецЦикла;
	Иначе
		//Отразим в родителе
		Дочерние = Родитель.ПолучитьЭлементы();
		Для н = 1 По 3 Цикл
			ТекЗначение = ТД["ИсточникЗнач"+н];
			с = 0;
			ЗначениеМеняется = Ложь;
			Пока Не ЗначениеМеняется И с < Дочерние.Количество() Цикл
				дСтрока = Дочерние[с];
				ЗначениеМеняется = ТекЗначение <> дСтрока["ИсточникЗнач"+н];
			    с = с + 1;
			КонецЦикла;
			Если ЗначениеМеняется Тогда
				Родитель["ИсточникЗнач"+н] = 2;	
				Родитель["ИсточникЗнач"+н+ПриставкаУзла] = 2;	
			Иначе
				Родитель["ИсточникЗнач"+н] = ТД["ИсточникЗнач"+н];	
				Родитель["ИсточникЗнач"+н+ПриставкаУзла] = ТД["ИсточникЗнач"+н+ПриставкаУзла];	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораГалочкойАвтоновнаяБаза(ТД, ТекИндекс)

	Если Не ТД["ИсточникЗнач"+ТекИндекс] = Истина Тогда
		ТД["ИсточникЗнач"+ТекИндекс] = Истина
	КонецЕсли;
	Для н = 1 По 3 Цикл
		Если ТекИндекс = н Тогда
		    Продолжить;
		КонецЕсли;
		ТД["ИсточникЗнач"+н] = Ложь;	
	КонецЦикла;
	
	Родитель = ТД.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
	    //Заполнить все подчиненные
		Дочерние = ТД.ПолучитьЭлементы();
		Для каждого дСтрока Из Дочерние Цикл
			Для н = 1 По 3 Цикл
				дСтрока["ИсточникЗнач"+н] = ТД["ИсточникЗнач"+н];	
			КонецЦикла;
		КонецЦикла;
	Иначе
		//Отразим в родителе
		Дочерние = Родитель.ПолучитьЭлементы();
		Для н = 1 По 3 Цикл
			ТекЗначение = ТД["ИсточникЗнач"+н];
			с = 0;
			ЗначениеМеняется = Ложь;
			Пока Не ЗначениеМеняется И с < Дочерние.Количество() Цикл
				дСтрока = Дочерние[с];
				ЗначениеМеняется = ТекЗначение <> дСтрока["ИсточникЗнач"+н];
			    с = с + 1;
			КонецЦикла;
			Если ЗначениеМеняется Тогда
				Родитель["ИсточникЗнач"+н] = 2;	
			Иначе
				Родитель["ИсточникЗнач"+н] = ТД["ИсточникЗнач"+н];	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийИсточникЗнач1ПриИзменении(Элемент)
	ТД = Элементы.ДеревоЗначенийЭтоЦБ.ТекущиеДанные;
	ТекИндекс = 1;
	ОбработкаВыбораГалочкой(ТД, ТекИндекс)
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийИсточникЗнач3ПриИзменении(Элемент)
	ТД = Элементы.ДеревоЗначенийЭтоЦБ.ТекущиеДанные;
	ТекИндекс = 3;
	ОбработкаВыбораГалочкой(ТД, ТекИндекс)
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗначенийИсточникЗнач2ПриИзменении(Элемент)
	ТД = Элементы.ДеревоЗначенийЭтоЦБ.ТекущиеДанные;
	ТекИндекс = 2;
	ОбработкаВыбораГалочкой(ТД, ТекИндекс)
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийИсточникЗнач4ПриИзменении(Элемент)
	ТД = Элементы.ДеревоЗначенийЭтоЦБ.ТекущиеДанные;
	ТекИндекс = 1;
	ОбработкаВыбораГалочкойАвтоновнаяБаза(ТД, ТекИндекс)
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийИсточникЗнач5ПриИзменении(Элемент)
	ТД = Элементы.ДеревоЗначенийЭтоЦБ.ТекущиеДанные;
	ТекИндекс = 2;
	ОбработкаВыбораГалочкойАвтоновнаяБаза(ТД, ТекИндекс)
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗначенийИсточникЗнач6ПриИзменении(Элемент)
	ТД = Элементы.ДеревоЗначенийЭтоЦБ.ТекущиеДанные;
	ТекИндекс = 3;
	ОбработкаВыбораГалочкойАвтоновнаяБаза(ТД, ТекИндекс)
КонецПроцедуры

&НаСервере
Процедура ПолучитьОписаниеКонтекста()
	// дата начала выгрузки документов
	Если Ложь Тогда //И ЗначениеЗаполнено(ДатаНачалаВыгрузкиДокументов) Тогда
		//ДатаНачалаВыгрузкиДокументовОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		//	НСтр("ru = 'Данные будут синхронизироваться, начиная с %1'"),
		//	Формат(ДатаНачалаВыгрузкиДокументов, "ДЛФ=DD"));
	Иначе
		ДатаНачалаВыгрузкиДокументовОписание = НСтр("ru = 'Данные будут синхронизироваться за весь период ведения учета'");
	КонецЕсли;
	
	// отбор по Организациям
	Если Ложь Тогда
		ОрганизацииОписание = НСтр("ru = 'Только по организациям:'") + Символы.ПС + ИспользуемыеЭлементы("Организации");
	Иначе
		ОрганизацииОписание = НСтр("ru = 'По всем организациям.'");
	КонецЕсли;
	
	// отбор по Складам
	Если Ложь Тогда
		СкладыОписание = НСтр("ru = 'Только по складам:'") + Символы.ПС + ИспользуемыеЭлементы("Склады");
	Иначе
		СкладыОписание = НСтр("ru = 'По всем складам.'");
	КонецЕсли;
	
	// отбор по Подразделениям
	Если Ложь Тогда
		ПодразделенияОписание = НСтр("ru = 'Только по подразделениям:'") + Символы.ПС + ИспользуемыеЭлементы("Подразделения");
	Иначе
		ПодразделенияОписание = НСтр("ru = 'По всем подразделениям.'");
	КонецЕсли;
	
	ОписаниеКонтекста = (""
		+ ДатаНачалаВыгрузкиДокументовОписание
		+ Символы.ПС
		+ ОрганизацииОписание
		+ Символы.ПС
		+ СкладыОписание
		+ Символы.ПС
		+ ПодразделенияОписание);
КонецПроцедуры

&НаСервере
Функция ИспользуемыеЭлементы(ИмяТаблицы)
	
	Возврат СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(
			ЭтаФорма[ИмяТаблицы].Выгрузить(Новый Структура("Использовать", Истина)).ВыгрузитьКолонку("Представление"),
			Символы.ПС);
	
КонецФункции
		
&НаКлиенте
Процедура ЗаписатьВУзелЦБ(Команда)
	
	ЗаписатьВУзелЦБнаСервере();
	
	ПолучитьОписаниеКонтекста();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзловКомандаЗакрытьФорму(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ЗаписатьВУзелЦБнаСервере()

	УзелЦБ = ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел();
	Если Не ПроцедурыОбменаДаннымиFrontOffice_Restoran.ЭтоЦентральнаяБаза(УзелЦБ) Тогда
		Возврат
	КонецЕсли;
	
	УзелЦБОбъект = УзелЦБ.ПолучитьОбъект();
	НастройкиСвязейМеждуБазамиРС = УзелЦБОбъект.НастройкиСвязейМеждуБазамиРС;
	НастройкиСвязейМеждуБазамиРС.Очистить();
	
	СоотвИсточников = Новый Соответствие;
	СоотвИсточников.Вставить(1, Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЛокальнаяБазаРесторана);
	СоотвИсточников.Вставить(2, Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЦентральнаяБазаБухгалтерии);
	СоотвИсточников.Вставить(3, Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЦентральнаяБазаРестораннойСистемы);
	СоотвИсточников.Вставить(0, Перечисления.ВидыБазИсточниковПриОбменеЦРС.ЦентральнаяБазаРестораннойСистемы);
	
	Для каждого СтрДерева Из ДеревоНастроекОбъектов.ПолучитьЭлементы() Цикл
	
		Для каждого СтрИдентификатор Из СтрДерева.ПолучитьЭлементы() Цикл
			
			НСтр = НастройкиСвязейМеждуБазамиРС.Добавить();	
			НСтр.ИдентификаторОбъектаНастройки = СтрИдентификатор.ИдентификаторОбъектаНастройки;
			ИсточникДанных = 0;
			Для н = 1 по 3 Цикл
				Если СтрИдентификатор["ИсточникЗнач"+н] = Истина Тогда
					ИсточникДанных = н;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			НСтр.ИсточникДанныхОбъекта = СоотвИсточников.Получить(ИсточникДанных);
				
		КонецЦикла;	
	
	КонецЦикла;
	
	Попытка
	
		УзелЦБОбъект.Записать();
	
	Исключение
		ВызватьИсключение ОписаниеОшибки()
	КонецПопытки;
	
КонецПроцедуры

