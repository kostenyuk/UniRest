

&НаКлиенте
Процедура ИерархическийСписокПриИзменении(Элемент)
	
	ИсключаяВерхнийУровень = ИсключаяВерхнийУровень И ИерархическийСписок;
	
	Элементы.ИсключаяВерхнийУровень.Доступность = ИерархическийСписок;
	
КонецПроцедуры // ИерархическийСписокПриИзменении()


&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть();

	ОКСервер();
	
КонецПроцедуры // ОК()

&НаСервере
Процедура ОКСервер()
	
	Справочники[Параметры.Справочник].ПеренестиНоменклатуру(Параметры.Номенклатура, Новый Структура("Владелец,Родитель, ИерархическийСписок,ИсключаяВерхнийУровень,ПеремещатьСуществующие,ПомеченныеНаУдаление",
		Параметры.Владелец,
		Параметры.Родитель,
		ИерархическийСписок,
		ИсключаяВерхнийУровень,
		ПеремещатьСуществующие,
		ПомеченныеНаУдаление));
	
КонецПроцедуры // ОКСервер()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПеремещатьСуществующие = Истина;
	ИерархическийСписок = Истина;
	
КонецПроцедуры // ПриСозданииНаСервере()
