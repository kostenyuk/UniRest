
Процедура ПолучитьЦеновыеПараметры(Номенклатура, Период = Неопределено, Цена = 0, Себестоимость = 0) Экспорт
	
	// Цены.
	Если ЗначениеЗаполнено(Номенклатура.Ссылка) Тогда
		
		////.. Начало изменения Dim)on  7 октября 2013 г. 2:43:35
		//// добавлен учет по типам цен
		////
		//ТипЦены = ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана();
		//
		//Если ЗначениеЗаполнено(Период) Тогда
		//	
		//	Структура = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Период, Новый Структура("Номенклатура, ТипЦены", Номенклатура.Ссылка, ТипЦены));
		//	Цена = Структура.Цена;
		//	Себестоимость = Структура.Себестоимость;
		//	
		//Иначе
		//	
		//	Для Каждого Структура Из РегистрыСведений.ЦеныНоменклатуры.СрезПоследних(ТекущаяДата(), Новый Структура("Номенклатура, ТипЦены", Номенклатура.Ссылка, ТипЦены)) Цикл
		//		Период = Структура.Период;
		//		Цена = Структура.Цена;
		//		Себестоимость = Структура.Себестоимость;
		//		Прервать;
		//	КонецЦикла;
		//	
		//КонецЕсли;
		//
		////
		////.. Конец изменения Dim)on  7 октября 2013 г. 2:43:35
		
		//Костенюк Александр-Старт 14.05.2014
		Если ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ОбменДанными2K_CRS") Тогда
			ТипЦены = ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана();
		Иначе
			ТипЦены = ПараметрыСеанса.ТекущийРесторан.ТипЦен;
		КонецЕсли;
		Для Каждого Структура Из РегистрыСведений.ЦеныНоменклатуры.СрезПоследних(ТекущаяДата(), Новый Структура("Номенклатура, ТипЦены", Номенклатура.Ссылка, ТипЦены)) Цикл
			Период = Структура.Период;
			Цена = Структура.Цена;
			Себестоимость = Структура.Себестоимость;
			Прервать;
		КонецЦикла;
		//Костенюк Александр-Финиш 14.05.2014
				
	КонецЕсли;
	
	// Период.
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = '19800101000000';	// Наследие 7.7 :)
	КонецЕсли;
	
КонецПроцедуры // ПолучитьЦеновыеПараметры()

//.. Начало изменения Dim)on  7 октября 2013 г. 2:42:42
//
Процедура ПолучитьЦеновыеПараметрыПоВсемТипамЦен(Номенклатура, Период = Неопределено, ТаблицаЦенПоТипам = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЦеныНоменклатурыСрезПоследних.Период КАК Период,
	//|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	//|	ЦеныНоменклатурыСрезПоследних.ТипЦены КАК ТипЦены,
	//|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	//|	ЦеныНоменклатурыСрезПоследних.Себестоимость КАК Себестоимость
	//|ПОМЕСТИТЬ Цены
	//|ИЗ
	//|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Цены.Период КАК Период,
	//|	Цены.Номенклатура КАК Номенклатура,
	//|	Цены.ТипЦены КАК ТипЦены,
	//|	Цены.Цена КАК Цена,
	//|	Цены.Себестоимость КАК Себестоимость
	//|ИЗ
	//|	Цены КАК Цены
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	&Период,
	//|	&Номенклатура,
	//|	ТипыЦен.Ссылка,
	//|	0,
	//|	0
	//|ИЗ
	//|	Справочник.ТипыЦен КАК ТипыЦен
	//|ГДЕ
	//|	НЕ ТипыЦен.Ссылка В
	//|				(ВЫБРАТЬ
	//|					Цены.ТипЦены
	//|				ИЗ
	//|					Цены КАК Цены)";
	
	//Костенюк Александр-Старт 13.05.2014
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Период,
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	               |	ЦеныНоменклатурыСрезПоследних.ТипЦены,
	               |	ЦеныНоменклатурыСрезПоследних.Цена,
	               |	ЦеныНоменклатурыСрезПоследних.Себестоимость
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних
	               |ГДЕ
	               |	НЕ ЦеныНоменклатурыСрезПоследних.ТипЦены.ПометкаУдаления";
	//Костенюк Александр-Финиш 13.05.2014
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура.Ссылка);
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(Период), Период, ТекущаяДата()));
	
	Результат = Запрос.Выполнить();
	
	ТаблицаЦенПоТипам = Результат.Выгрузить();
		
КонецПроцедуры // ПолучитьЦеновыеПараметры()

Процедура УстановитьЦеновыеПараметры(Номенклатура, Период = Неопределено, Цена = 0, Себестоимость = 0, ПредотвратитьДеактуализациюНоменклатурыМеню = Ложь, Отказ) Экспорт
	
	Если Не Отказ Тогда
		
		// Период.
		Период = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(Период);
		
		////.. Начало изменения Dim)on  7 октября 2013 г. 2:43:35
		//// добавлен учет по типам цен
		////
		//ТипЦены = ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана();
		
		//Костенюк Александр-Старт 28.07.2014
		Если ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ОбменДанными2K_CRS") Тогда
			ТипЦены = ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана();
		Иначе
			ТипЦены = ПараметрыСеанса.ТекущийРесторан.ТипЦен;
		КонецЕсли;
		//Костенюк Александр-Финиш 28.07.2014
		
		// Проверка.
		Структура = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(Период, Новый Структура("Номенклатура, ТипЦены", Номенклатура.Ссылка, ТипЦены));
		Если (Структура.Цена = Цена) И (Структура.Себестоимость = Себестоимость) Тогда
			Возврат;
		КонецЕсли; 
		
		// Запись.
		Если ПредотвратитьДеактуализациюНоменклатурыМеню Тогда
			
			НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			
			Запись = НаборЗаписей.Добавить();
			Запись.Период = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(Период);
			Запись.Номенклатура = Номенклатура.Ссылка;
			Запись.Цена = Цена;
			Запись.ТипЦены = ТипЦены;
			Запись.Себестоимость = Себестоимость;
			
			НаборЗаписей.Отбор.Период.Установить(Запись.Период);
			НаборЗаписей.Отбор.Номенклатура.Установить(Запись.Номенклатура);
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПредотвратитьДеактуализациюНоменклатурыМеню");
			
			Попытка
				НаборЗаписей.Записать(Истина);
			Исключение
				Отказ = Истина; // ERR.
				//ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, ,, НаборЗаписей, Ссылка);
			КонецПопытки;
			
		Иначе
			
			Запись = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
			Запись.Период = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(Период);
			Запись.Номенклатура = Номенклатура.Ссылка;
			Запись.ТипЦены = ТипЦены;
			Запись.Цена = Цена;
			Запись.Себестоимость = Себестоимость;
				
			Попытка
				Запись.Записать(Истина);
			Исключение
				Отказ = Истина; // ERR.
				//ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), Отказ, ,, НаборЗаписей, Ссылка);
			КонецПопытки;
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЦеновыеПараметры()

//.. Начало изменения Dim)on  7 октября 2013 г. 2:42:42
//
Процедура УстановитьЦеновыеПараметрыДляНесколькихТиповЦен(Номенклатура, Период = Неопределено, ПредотвратитьДеактуализациюНоменклатурыМеню = Ложь, Отказ, ТаблицаЦенПоТипам = Неопределено) Экспорт
	
	Если Не Отказ Тогда
		
		// Период.
		Период = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(Период);
		
		Если ПредотвратитьДеактуализациюНоменклатурыМеню Тогда
			
			НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			
			Для каждого СтрЦены Из ТаблицаЦенПоТипам Цикл
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, СтрЦены);
				
				Запись.Период = Период;
				Запись.Номенклатура = Номенклатура.Ссылка;
			КонецЦикла;
			
			НаборЗаписей.Отбор.Период.Установить(Запись.Период);
			НаборЗаписей.Отбор.Номенклатура.Установить(Запись.Номенклатура);
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПредотвратитьДеактуализациюНоменклатурыМеню");
			
			Попытка
				НаборЗаписей.Записать(Истина);
			Исключение
				Отказ = Истина; // ERR.
			КонецПопытки;
			
		Иначе
			
			НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			
			Для каждого СтрЦены Из ТаблицаЦенПоТипам Цикл
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, СтрЦены);
				
				Запись.Период = Период;
				Запись.Номенклатура = Номенклатура.Ссылка;
			КонецЦикла;
			
			Попытка
				НаборЗаписей.Записать(Истина);
			Исключение
				Отказ = Истина; // ERR.
			КонецПопытки;
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьЦеновыеПараметры()
//.. Конец изменения Dim)on  7 октября 2013 г. 14:31:08

Процедура ПриЧтенииНоменклатуры(Номенклатура, Период, Цена, Себестоимость) Экспорт
	
	ПолучитьЦеновыеПараметры(Номенклатура, Период, Цена, Себестоимость);
	
КонецПроцедуры // ПриЧтенииНоменклатуры()

Процедура ПриЗаписиНоменклатуры(Номенклатура, Период, Цена, Себестоимость, Отказ, ТипЦены = Неопределено, Знач ТаблицаЦенПоТипам = Неопределено) Экспорт
	
	УстановитьЦеновыеПараметры(Номенклатура, Период, Цена, Себестоимость, Истина, Отказ);
	
КонецПроцедуры // ПриЗаписиНоменклатуры()

//.. Начало изменения Dim)on  7 октября 2013 г. 3:59:46
//  Вызывается при обновлении
//
Процедура ЗаполнитьТипЦен(ТипЦены = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатуры.Период,
		|	ЦеныНоменклатуры.Номенклатура,
		|	ЦеныНоменклатуры.ТипЦены,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Себестоимость
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|ГДЕ
		|	ЦеныНоменклатуры.ТипЦены = &ПустойТипЦены";

	ПустойТипЦены = Справочники.ТипыЦен.ПустаяСсылка();
	Запрос.УстановитьПараметр("ПустойТипЦены", ПустойТипЦены);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
           
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МЗ = СоздатьМенеджерЗаписи();
		МЗ.Период = ВыборкаДетальныеЗаписи.Период;
		МЗ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		МЗ.ТипЦены = ?(ТипЦены = Неопределено, ОбменДаннымиПовтИсп.ПолучитьТипЦенТекущегоРесторана(), ТипЦены);
		МЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
		МЗ.Себестоимость = ВыборкаДетальныеЗаписи.Себестоимость;
		МЗ.Записать();
		МЗ = СоздатьМенеджерЗаписи();
		МЗ.Период = ВыборкаДетальныеЗаписи.Период;
		МЗ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		МЗ.ТипЦены = ПустойТипЦены;
		МЗ.Удалить();
	КонецЦикла;

КонецПроцедуры
//.. Конец изменения Dim)on  7 октября 2013 г. 14:31:27