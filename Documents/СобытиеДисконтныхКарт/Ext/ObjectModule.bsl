
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьШапку(РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЭтотОбъект.Проведен Тогда
		ДвиженияПоРегиструСобытияДисконтныхКарт(Отказ);
	Иначе
		Движения.СобытияДисконтныхКарт.Записывать = Истина;
		Движения.СобытияДисконтныхКарт.Очистить();
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДвиженияПоРегистрам(РежимПроведенияДокумента.Неоперативный, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Событие = Неопределено;
	Распечатан = Неопределено;
	Состояние = Неопределено;
	Комментарий = Неопределено;
	
	Для Каждого СтрокаТабличнойЧасти Из РезультатыСобытия Цикл
		СтрокаТабличнойЧасти.Результат = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодготовитьШапку(РежимЗаписи, РежимПроведения)
	
	// Текущая дата
	ТекущаяДата = ТекущаяДата();
	
	// Модуль
	Модуль = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Модуль, Перечисления.МодулиИПодсистемы.Ресторан);
	
	// Ресторан
	Ресторан = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(Ресторан, Справочники.Рестораны.ОсновнойРесторан());
	
	// Распечатан
	Распечатан = (Проведен ИЛИ (РежимЗаписи = РежимЗаписиДокумента.Проведение)) И (НЕ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения);
	
	// Состояние
	Состояние = УправлениеЗаказами.ПолучитьСостояниеДокумента(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры // ПодготовитьШапку()

Процедура ДвиженияПоРегистрам(РежимПроведения, Отказ)
	
	ДвиженияПоРегиструСобытияДисконтныхКарт(Отказ);
	
КонецПроцедуры

Процедура ДвиженияПоРегиструСобытияДисконтныхКарт(Отказ)
	
	Движения.СобытияДисконтныхКарт.Записывать = Истина;
	Движения.СобытияДисконтныхКарт.Очистить();
	
	Для Каждого ТекСтрокаРезультатыСобытия Из РезультатыСобытия Цикл
		Движение 					= Движения.СобытияДисконтныхКарт.Добавить();
		Движение.Период 			= Дата;
		Движение.Ресторан 			= Ресторан;
		Движение.Событие 			= Событие;
		Движение.ДисконтнаяКарта 	= ТекСтрокаРезультатыСобытия.ДисконтнаяКарта;
		Движение.Результат 			= ТекСтрокаРезультатыСобытия.Результат;
	КонецЦикла;
	
КонецПроцедуры	

Функция CreateExcelApplication()
	ExcelApplication = Неопределено;
	Попытка
		ExcelApplication = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Возврат ExcelApplication;
КонецФункции

Функция GetWorkBooks(ExcelApplication)
	WorkBooks = Неопределено;
	Попытка
		WorkBooks = ExcelApplication.WorkBooks; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Возврат WorkBooks;
КонецФункции

Функция OpenWorkBook(WorkBooks, FileName)
	WorkBook = Неопределено;
	Попытка
		WorkBook = WorkBooks.Open(FileName);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Возврат WorkBook;
КонецФункции

Процедура CloseExcelApplication(ExcelApplication)
	ExcelApplication.Quit();
	ExcelApplication = Неопределено;
КонецПроцедуры

Процедура ReadExcelBook(Sheet, Объект)
	
	Для Инд = 1 По Sheet.UsedRange.Rows.Count() Цикл
		
		КодКартыСтрока = СокрЛП(Sheet.Cells(Инд, 1).Value);
		РезультатСтрока = СокрЛП(Sheet.Cells(Инд, 2).Value);
		
		Если НЕ ЗначениеЗаполнено(КодКартыСтрока) Тогда
			Продолжить;
		КонецЕсли;
		
		ДисконтнаяКарта = Справочники.ИнформационныеКарты.НайтиПоКодуКарты(СтрЗаменить(КодКартыСтрока, "№", "")); 
		Если ДисконтнаяКарта.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		
		Если РезультатСтрока = "+" Тогда
			Результат = Перечисления.РезультатыСобытий.Положительно;
		ИначеЕсли РезультатСтрока = "-" Тогда
			Результат = Перечисления.РезультатыСобытий.Отрицательно;
		Иначе
			Результат = Перечисления.РезультатыСобытий.Неопределено;
		КонецЕсли;
		
		НоваяСтрока = Объект.РезультатыСобытия.Добавить();
		НоваяСтрока.ДисконтнаяКарта = ДисконтнаяКарта;
		НоваяСтрока.Результат = Результат;
				
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗагрузитьИзФайла(Объект, ПолноеИмяФайла) Экспорт
	
	ExcelApplication = CreateExcelApplication();
	Если ExcelApplication = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	WorkBooks = GetWorkBooks(ExcelApplication);
	Если WorkBooks = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Book = OpenWorkBook(WorkBooks, ПолноеИмяФайла);
	Если Book = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ReadExcelBook(Book.Sheets(1), Объект);
	Исключение
		Сообщить(ОписаниеОшибки());
		CloseExcelApplication(ExcelApplication);
	КонецПопытки;
	
	Если ExcelApplication <> Неопределено Тогда
		CloseExcelApplication(ExcelApplication);
	КонецЕсли;
	
КонецПроцедуры
