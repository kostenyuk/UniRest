
// Удаляет из строки фрагмент заключенный в скобки.
//
// Параметры:
//	СтрокаДляОбработки – Строка. Строка из которой необходимо удалить фрагмент.
//
// Возвращаемое значение:
//	Строка. Строка без фрагмента заключенного в скобки.
//
Функция УдалениеСимволовСкобок(СтрокаДляОбработки)

	НачальнаяПозиция	= Найти(СтрокаДляОбработки,"(");
	КонечнаяПозиция		= Найти(СтрокаДляОбработки,")");
	ДлинаСтроки			= СтрДлина(СтрокаДляОбработки);
	
	Если Булево(НачальнаяПозиция) Тогда
		Если Булево(КонечнаяПозиция) Тогда
			Возврат Лев(СтрокаДляОбработки, НачальнаяПозиция - 1) + Прав(СтрокаДляОбработки, ДлинаСтроки - КонечнаяПозиция);
		КонецЕсли; 
		Возврат Лев(СтрокаДляОбработки, НачальнаяПозиция - 1);
	Иначе
		Возврат СтрокаДляОбработки
	КонецЕсли; 

КонецФункции // УдалениеСимволовСкобок()

// Функция формирует фамилию и инициалы либо по наименованию элемента спр-ка СотрудникиОрганизаций
// либо по переданным строкам. Если передан объект, то извлеченная из него строка считается совокупностью 
// фамилии имя и отчества, разделенными пробелами.
//
// Параметры
//	Объект - Строка, СправочникСсылка.СотрудникиОрганизаций. Строка или объект элемента спр-ка сотрудники организаций;
//	Фамилия - Строка. Фамилия физ. лица;
//  Имя - Строка. Имя физ. лица;
//	Отчество - Строка. Отчество физ. лица.
//
// Возвращаемое значение: 
//  Строка. Фамилия и инициалы одной строкой.
//
// Описание:
//  Побочные эффекты - переданная целая строка разбивается на подстроки, соответствующие отдельным фамилии, имени и отчеству.
//
Функция ФамилияИнициалыФизЛица(Объект = Неопределено, Фамилия = " ", Имя = " ", Отчество = " ") Экспорт

	Если (Объект = Неопределено) Тогда
		
		Если Не ПустаяСтрока(Фамилия) Тогда
			Результат = Фамилия;
			Если Не ПустаяСтрока(Имя) Тогда
				Результат = Результат + " " + Лев(Имя, 1) + ".";
				Если Не ПустаяСтрока(Отчество) Тогда
					Результат = Результат + Лев(Отчество, 1) + ".";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Возврат Строка(Результат);

	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(Объект);
	Если ТипОбъекта = Тип("Строка") Тогда
		ФИО = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СокрЛП(Объект), " ");
	Иначе
		ФИО = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СокрЛП(Объект.Наименование), " ");
	КонецЕсли;
			
	КоличествоПодстрок = ФИО.Количество();
	Если (КоличествоПодстрок > 0) Тогда Фамилия = ФИО[0] КонецЕсли;;
	Если (КоличествоПодстрок > 1) Тогда Имя = ФИО[1] КонецЕсли;;
	Если (КоличествоПодстрок > 2) Тогда Отчество = ФИО[2] КонецЕсли;;
	
	Возврат ФамилияИнициалыФизЛица(Неопределено, Строка(Фамилия), Строка(Имя), Строка(Отчество));

КонецФункции // ФамилияИнициалыФизЛица()

// Заполняет краткий состав документа по требуемой табличной части.
//
// Параметры:
//  ТЧДокумента - ТабличнаяЧасть. Табличная часть документа по которой происходит заполнение реквизита;
//  ДополнительнаяТЧДокумента - ТабличнаяЧасть. Дополнительная табличная часть документа, как правило с дополнительными начислениями;
//	ИмяРеквизита - Строка. Реквизит по которому будет происходить формирование краткого состава.
//
// Возвращаемое значение:
//	Строка. Сформированное значение краткий состава.
//
Функция ЗаполнитьКраткийСоставДокумента(ТЧДокумента, ДополнительнаяТЧДокумента = Неопределено, ИмяРеквизита = "Сотрудник") Экспорт

	КраткийСоставДокумента = ОбщегоНазначения.ПустоеЗначениеТипа(Тип("Строка"));
	ДлинаКраткогоСостава = Метаданные.Документы.ТабельУчетаРабочегоВремениОрганизации.Реквизиты.КраткийСоставДокумента.Тип.КвалификаторыСтроки.Длина;
	Если Не Булево(ДлинаКраткогоСостава) Тогда
		ДлинаКраткогоСостава = 2147483648;
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из ТЧДокумента Цикл
		
		Если (Не ТипЗнч(СтрокаТЧ[ИмяРеквизита]) = Тип("СправочникСсылка.СотрудникиОрганизаций")) Тогда
			Продолжить;
		КонецЕсли;
		
		ФИОФизЛица = ФамилияИнициалыФизЛица(УдалениеСимволовСкобок(СтрокаТЧ[ИмяРеквизита].Наименование));
		Если Не Булево(Найти(КраткийСоставДокумента, ФИОФизЛица)) Тогда
			
			Если (СтрДлина(КраткийСоставДокумента + ФИОФизЛица) - 2 < ДлинаКраткогоСостава) Тогда
				КраткийСоставДокумента = КраткийСоставДокумента + ", " + ФИОФизЛица;
			Иначе
				КраткийСоставДокумента = КраткийСоставДокумента + "…";
				Прервать;
			КонецЕсли;
			
		КонецЕсли; 
	
	КонецЦикла;
	
	Если (Не ДополнительнаяТЧДокумента = Неопределено) И СтрДлина(КраткийСоставДокумента) < ДлинаКраткогоСостава Тогда
	
		Для Каждого СтрокаТЧ Из ДополнительнаяТЧДокумента Цикл
			
			Если (Не ТипЗнч(СтрокаТЧ[ИмяРеквизита]) = Тип("СправочникСсылка.СотрудникиОрганизаций")) Тогда
				Продолжить;
			КонецЕсли;
			
			ФИОФизЛица = ФамилияИнициалыФизЛица(УдалениеСимволовСкобок(СтрокаТЧ[ИмяРеквизита].Наименование));
			Если Не Булево(Найти(КраткийСоставДокумента, ФИОФизЛица)) Тогда
				
			Если (СтрДлина(КраткийСоставДокумента + ФИОФизЛица) - 2 < ДлинаКраткогоСостава) Тогда
					КраткийСоставДокумента = КраткийСоставДокумента + ", " + ФИОФизЛица;
				Иначе
					КраткийСоставДокумента = КраткийСоставДокумента + "…";
					Прервать;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
	 
	КонецЕсли;
	
	КраткийСоставДокумента = Сред(КраткийСоставДокумента, 3);
	
	Возврат КраткийСоставДокумента;
	
КонецФункции // ЗаполнитьКраткийСоставДокумента()
