// Возвращает код языка интерфейса в формате ru/uk
Функция КодЯзыкаИнтерфейса() Экспорт
	Если ТекущийЯзык()<> Неопределено Тогда
		Возврат ТекущийЯзык().КодЯзыка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции // КодЯзыкаИнтерфейса()

// Возвращает код языка информационной базы, который указан 
// в региональных настройках (в конфигураторе)
Функция КодЯзыкаИнформационнойБазы() Экспорт
	
	// любой язык кроме украинского будем считать русским
	Возврат ?(КодЛокализации() = "uk_UA","uk","ru");
	
КонецФункции //КодЯзыкаИнформационнойБазы()

// Функция возвращает имя языка для формирования нерегламент печатных форм
// документов и некоторых справочников с учетом установленного режима в настройках
// пользователя. По-умолчанию это язык информционной базы.
//
// Параметры
//     	РежимПользователя - Установленное значение в настройках пользователя
//
// Возвращаемое значение:
//		Строка   – код языка
//
Функция ПолучитьЯзыкФормированияПечатныхФорм(РежимПользователя = Неопределено) Экспорт

	
	Если РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаРусскомЯзыке Тогда
		
		КодЯзыкаПечать = "ru";
		
	ИначеЕсли РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаУкраинскомЯзыке Тогда
		
		КодЯзыкаПечать = "uk";
		
	ИначеЕсли РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнтерфейсаПользователя Тогда		
		
		КодЯзыкаПечать = КодЯзыкаИнтерфейса();
		
	Иначе// РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнформационнойБазы 
		 // или по - умолчанию
		 
		КодЯзыкаПечать = КодЯзыкаИнформационнойБазы();
		
	КонецЕсли;

	Возврат КодЯзыкаПечать;
	
КонецФункции // ПолучитьЯзыкФормированияПечатныхФорм()

//Преобразует код языка в формат понятный системной фунции Формат()
// Параметры
//  КодЯзыка  	 – Строка – код языка в формате uk/ru
//
// Возвращаемое значение:
//   Строка   	 – код языка в формате ru_RU/uk_UA
//
Функция ОпределитьКодЯзыкаДляФормат(КодЯзыка) Экспорт
	
	Возврат ?(КодЯзыка = "uk","uk_UA","ru_RU");
	
КонецФункции // ОпределитьКодЯзыкаДляФормат()

//По коду языка возвращает строку параметров прописи из справочника Валюты 
//(ПараметрыПрописиНаРусском или ПараметрыПрописиНаУкраинском).
Функция ПараметрыПрописи(Валюта, КодЯзыка) Экспорт
	
	Возврат ?(КодЯзыка = "uk",Валюта.ПараметрыПрописиНаУкраинском,Валюта.ПараметрыПрописиНаРусском);
	
КонецФункции // ПараметрыПрописи()

//Если параметр КодЯзыка совпадает с кодом языка интерфейса (язКодЯзыкаИнтерфейса()),
//	то представление получается через ОбъектМетаданных.Представление()
//Если не совпадает, то возвращаются синонимы в зависимости от имени объекта
// 
// Параметры
//  Объект		 - Ссылка на объект, для которого нужно получить перевод
//  КодЯзыка  	 – Строка – код языка в формате uk/ru
//
Функция ПолучитьЛокализованныйСинонимОбъекта(Ссылка, КодЯзыка) Экспорт

	МетаданныеДляСсылки = Ссылка.Метаданные();
	ПолноеИмяОбъектаМетаданных = МетаданныеДляСсылки.ПолноеИмя();
	
	Если Метаданные.Документы.Содержит(МетаданныеДляСсылки) Тогда
		Если КодЯзыка = КодЯзыкаИнтерфейса() Тогда
			// "переводить" не нужно
			Возврат МетаданныеДляСсылки.Синоним;
		КонецЕсли;
		// это документ
		ИмяДляПеревода = МетаданныеДляСсылки.Имя;
	ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеДляСсылки) Тогда
		// это перечисление
		Если КодЯзыка = КодЯзыкаИнтерфейса() Тогда
			// "переводить" не нужно
			Возврат Строка(Ссылка);
		КонецЕсли;
		// имя элемента перечисления получить из метаданных "трудно", 
		// поэтому для перевода будем использовать синоним на языке интерфейса
		ИндексЗначения = Перечисления[МетаданныеДляСсылки.Имя].Индекс(Ссылка);
		ИмяДляПеревода = МетаданныеДляСсылки.ЗначенияПеречисления[ИндексЗначения].Имя;
	КонецЕсли; 
	
	РезультатПеревода = "";
	РезультатПеревода = ОбработатьПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка);
	//Если РезультатПеревода = "" Тогда
	//	ОбработатьДополнительныеПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка);
	//КонецЕсли;
	
	Возврат РезультатПеревода;
КонецФункции // ПредставлениеОбъекта()

// Возвращает представление объекта на указанном языке
// Фактически обрабатываются документы и перечисления
// Параметры
//  Ссылка    – <произвольный>
//  КодЯзыка  – <строка> – код языка
//
// Возвращаемое значение:
//   <Строка>   – представление объекта
//
Функция ПолучитьЛокализованноеПредставление(Ссылка, КодЯзыка) Экспорт

	ТипЗначенияСсылки = ТипЗнч(Ссылка);
	
	Если Ссылка = Неопределено ИЛИ Ссылка = NULL Тогда
		
		Возврат "";
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗначенияСсылки) Тогда
		// это документ
		Возврат ОбщегоНазначения.СформироватьЗаголовокДокумента(Ссылка, ПолучитьЛокализованныйСинонимОбъекта(Ссылка, КодЯзыка), КодЯзыка);
		
	ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗначенияСсылки) Тогда

		Возврат ПолучитьЛокализованныйСинонимОбъекта(Ссылка, КодЯзыка);
		
	Иначе
		
		Возврат Строка(Ссылка);
		
	КонецЕсли;	
	
КонецФункции // ПолучитьЛокализованноеПредставление()

// Функция возвращает текстовую строку, сформированную на основании спец. шаблона,
// подставляя значения переданных параметров.	
// 
// Параметры
//  СтрокаШаблон – Строка – Строка шаблон, в тексте которой
//                 есть указания на то, куда вставить представления 
//                 параметров. 
//                 Параметры отмечаются текстом ¤1¤...¤20¤.
//                 Символ "¤" можно набрать при помощи Alt+0164
//  Пар1...Пар20 – произвольного типа – параметры,
//                 строковое представление которых будет 
//                 подставлятся в шаблон.
//
// Возвращаемое значение:
//   Строка   – сформированная текстовая строка
//
Функция СтрокаШаблон(Знач СтрокаШаблон, 
										Знач Пар1  = "", Знач Пар2  = "",
										Знач Пар3  = "", Знач Пар4  = "", Знач Пар5  = "",
										Знач Пар6  = "", Знач Пар7  = "", Знач Пар8  = "",
										Знач Пар9  = "", Знач Пар10 = "", Знач Пар11 = "",
										Знач Пар12 = "", Знач Пар13 = "", Знач Пар14 = "",
										Знач Пар15 = "", Знач Пар16 = "", Знач Пар17 = "",
										Знач Пар18 = "", Знач Пар19 = "", Знач Пар20 = "") Экспорт
										
	ПризнакПараметра = "¤";
	МетаСимвол       = "\¤"; //заменяется на признак параметра
	
	Для Счетчик = 1 По 20 Цикл
			
		ПерваяПозицияВхожденияПараметра = Найти(СтрокаШаблон, ""+ ПризнакПараметра + Счетчик + ПризнакПараметра);
				
		Если ПерваяПозицияВхожденияПараметра = 0 Тогда
			// этот параметр не используется
			Продолжить;	
		КонецЕсли; 
				
		ПараметрВСтроку = "";
		Выполнить("ПараметрВСтроку = Строка(Пар" + Счетчик + ")");
				
		СтрокаШаблон = СтрЗаменить(СтрокаШаблон, ПризнакПараметра + Счетчик + ПризнакПараметра, ПараметрВСтроку);
				
	КонецЦикла;									
		
	ПозицияМетаСимвола = СтрЗаменить(СтрокаШаблон, МетаСимвол,ПризнакПараметра);

	Возврат СтрокаШаблон;
	
КонецФункции //СтрШаблон()

Функция ОбработатьПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка)
	    
		Если ПолноеИмяОбъектаМетаданных = "Документ.АвансовыйОтчет" Тогда 
			Возврат НСтр( "ru='Авансовый отчет';uk='Авансовий звіт';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.АктОбОказанииПроизводственныхУслуг" Тогда 
			Возврат НСтр("ru='Акт об оказании производственных услуг';uk='Акт про надання виробничих послуг'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ВводНачальныхОстатковОС" Тогда 
			Возврат НСтр( "ru='Ввод начальных остатков ОС';uk='Введення початкових залишків по ОЗ';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ВнутреннийЗаказ" Тогда 
			Возврат НСтр( "ru='Внутренний заказ';uk='Внутрішнє замовлення';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ВозвратТоваровОтПокупателя" Тогда 
			Возврат НСтр( "ru='Возврат товаров от покупателя';uk='Повернення товарів від покупців';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ВозвратТоваровПоставщику" Тогда 
			Возврат НСтр( "ru='Возврат товаров поставщику';uk='Повернення товарів постачальнику';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ВозвратТоваровПоставщикуИзНеавтоматизированнойТорговойТочки" Тогда 
			Возврат НСтр( "ru='Возврат товаров поставщику из НТТ';uk='Повернення товарів постачальнику з НТТ';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ДокументРасчетовСКонтрагентом" Тогда 
			Возврат НСтр("ru='Документ расчетов с контрагентом (ручной учет)';uk='Документ розрахунків з контрагентом (ручний облік)'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ЗаказПокупателя" Тогда 
			Возврат НСтр( "ru='Заказ покупателя';uk='Замовлення покупця';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ЗаказПоставщику" Тогда 
			Возврат НСтр( "ru='Заказ поставщику';uk='Замовлення постачальнику';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ИнвентаризацияТоваровНаСкладе" Тогда 
			Возврат НСтр( "ru='Инвентаризация товаров на складе';uk='Інвентаризація товарів на складі';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ИнвентаризацияТоваровОтданныхНаКомиссию" Тогда 
			Возврат НСтр( "ru='Инвентаризация товаров отданных на комиссию';uk='Інвентаризація товарів переданих на комісію';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.КорректировкаДолга" Тогда 
			Возврат НСтр( "ru='Корректировка долга';uk='Коректування боргу';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.КорректировкаДолгаПоВозвратнойТаре" Тогда 
			Возврат НСтр( "ru='Корректировка долга по возвратной таре';uk='Коректування боргу по зворотній тарі';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОтчетКомиссионераОПродажах" Тогда 
			Возврат НСтр( "ru='Отчет комиссионера о продажах';uk='Звіт комісіонера про продаж';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОтчетКомитентуОПродажах" Тогда 
			Возврат НСтр( "ru='Отчет комитенту о продажах товаров';uk='Звіт комітенту про продаж';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОтчетОРозничныхПродажах" Тогда 
			Возврат НСтр( "ru='Отчет о розничных продажах';uk='Звіт про роздрібний продаж';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОприходованиеТоваров" Тогда 
			Возврат НСтр( "ru='Оприходование товаров';uk='Оприбуткування товарів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОтчетПроизводстваЗаСмену" Тогда 
			Возврат НСтр("ru='Отчет производства за смену';uk='Звіт виробництва за зміну'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПеремещениеТоваров" Тогда 
			Возврат НСтр( "ru='Перемещение товаров';uk='Переміщення товарів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежноеПоручениеВходящее" Тогда 
			Возврат НСтр( "ru='Платежное поручение входящее';uk='Платіжне доручення отримане';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежноеПоручениеИсходящее" Тогда 
			Возврат НСтр( "ru='Платежное поручение исходящее';uk='Платіжне доручення ';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежныйОрдерПоступлениеДенежныхСредств" Тогда 
			Возврат НСтр( "ru='Платежный ордер, поступление денежных средств';uk='Платіжний ордер, надходження грошових коштів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежныйОрдерСписаниеДенежныхСредств" Тогда 
			Возврат НСтр( "ru='Платежный ордер, списание денежных средств';uk='Платіжний ордер, списання грошових коштів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПоступлениеДопРасходов" Тогда 
			Возврат НСтр( "ru='Поступление доп. расходов';uk='Надходження дод. витрат';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.Партия" Тогда 
			Возврат НСтр("ru='Партия (ручной учет)';uk='Партія (ручний облік)'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПартияМалоценкиВЭксплуатации" Тогда 
			Возврат НСтр("ru='Партия малоценки в эксплуатации (ручной учет)';uk='Партія малоцінних активів в експлуатації (ручний облік)'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПередачаМалоценкиВЭксплуатацию" Тогда 
			Возврат НСтр("ru='Передача малоценки в эксплуатацию';uk='Передача малоцінних активів в експлуатацію'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПередачаОС" Тогда 
			Возврат НСтр("ru='Передача ОС';uk='Передача ОЗ'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПоступлениеТоваровУслуг" Тогда 
			Возврат НСтр( "ru='Поступление товаров и услуг';uk='Надходження товарів та послуг';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПоступлениеТоваровУслугВНеавтоматизированнуюТорговуюТочку" Тогда 
			Возврат НСтр( "ru='Поступление товаров и услуг в НТТ';uk='Надходження товарів та послуг у НТТ';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПриходныйКассовыйОрдер" Тогда 
			Возврат НСтр( "ru='Приходный кассовый ордер';uk='Прибутковий касовий ордер';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РасходныйКассовыйОрдер" Тогда 
			Возврат НСтр( "ru='Расходный кассовый ордер';uk='Видатковий касовий ордер';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РеализацияТоваровУслуг" Тогда 
			Возврат НСтр( "ru='Реализация товаров и услуг';uk='Реалізація товарів та послуг';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.СчетНаОплатуПокупателю" Тогда 
			Возврат НСтр( "ru='Счет на оплату покупателю';uk='Рахунок на оплату покупцю';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.СчетНаОплатуПоставщика" Тогда 
			Возврат НСтр( "ru='Счет на оплату поставщика';uk='Рахунок на оплату постачальнику';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РеализацияУслугПоПереработке" Тогда 
			Возврат НСтр("ru='Реализация услуг по переработке';uk='Реалізація послуг з переробки'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ЧекККМ" Тогда 
			Возврат НСтр( "ru='Товарний чек';uk='Товарний чек';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПланируемоеПоступлениеДенежныхСредств" Тогда 
			Возврат НСтр( "ru='Планируемое поступление денежных средств';uk='Плановане надходження грошових коштів';" ,КодЯзыка);
		КонецЕсли;	

		Если ПолноеИмяОбъектаМетаданных = "Перечисление.ПолФизическихЛиц" Тогда 
			Если ИмяДляПеревода = "Женский" Тогда 
				Возврат НСтр( "uk='Жіночий';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Мужской" Тогда 
				Возврат НСтр( "ru='Мужской';uk='Чоловічий';" ,КодЯзыка);			
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.СтавкиНДС" Тогда 
			Если ИмяДляПеревода = "БезНДС" Тогда 
				Возврат НСтр( "ru='Без НДС';uk='Без ПДВ';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "НДС0" Тогда 
				Возврат НСтр( "ru='0%';uk='0%';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "НДС20" Тогда 
				Возврат НСтр( "ru='20%';uk='20%';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "НеНДС" Тогда 
				Возврат НСтр( "ru='Не НДС';uk='Не ПДВ';" ,КодЯзыка);			
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ТипыСкладов" Тогда 
			Если ИмяДляПеревода = "Оптовый" Тогда 
				Возврат НСтр( "ru='Оптовый';uk='Гуртовий';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Розничный" Тогда 
				Возврат НСтр( "ru='Розничный';uk='Роздрібний';" ,КодЯзыка);			
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийЗаявкиНаРасходование" Тогда 
			Если ИмяДляПеревода = "ОплатаПоставщику" Тогда 
				Возврат НСтр( "ru='оплата поставщику';uk='оплата постачальнику';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВозвратДенежныхСредствПокупателю" Тогда 
				Возврат НСтр( "ru='возврат денежных средств покупателю';uk='повернення грошових коштів покупцю';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВыдачаДенежныхСредствПодотчетнику" Тогда 
				Возврат НСтр( "ru='выдача денежных средств подотчетнику';uk='видача грошових коштів підзвітнику';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВыдачаДенежныхСредствКассеККМ" Тогда 
				Возврат НСтр( "ru='выдача денежных средств в кассу ККМ';uk='видача грошових коштів в касу ЕККА';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "РасчетыПоКредитамИЗаймамСКонтрагентами" Тогда 
				Возврат НСтр( "ru='расчеты по кредитам и займам с контрагентами';uk='розрахунки за кредитами та займами з контрагентами';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПеречислениеНалога" Тогда 
				Возврат НСтр( "ru='перечисление налога';uk='перерахування податку';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПрочийРасходДенежныхСредств" Тогда 
				Возврат НСтр( "ru='прочий расход денежных средств';uk='інші витрати грошових коштів';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПрочиеРасчетыСКонтрагентами" Тогда 
				Возврат НСтр( "ru='прочие расчеты с контрагентами';uk='інші розрахунки з контрагентами';" ,КодЯзыка);			
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыДенежныхСредств" Тогда 
			Если ИмяДляПеревода = "Наличные" Тогда 
				Возврат НСтр( "ru='Наличные';uk='Готівка';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Безналичные" Тогда 
				Возврат НСтр( "ru='Безналичные';uk='Безготівкова';" ,КодЯзыка);			
			КонецЕсли;
					
		КонецЕсли;	
		
КонецФункции //ОбработатьПереводы()

// Проверяет, соответсвует ли язык платформы 
Процедура ПроверитьСоответсвиеЯзыкаПлатформыИПользователя() Экспорт
	
	ЯзыкПлатформы = ТекущийЯзыкСистемы();
	ЯзыкИнтерфейса = КодЯзыкаИнтерфейса();
	Если ЯзыкПлатформы <> ЯзыкИнтерфейса Тогда
		Сообщить(СтрШаблон(НСтр("ru='Язык интерфейса платформы 1С:Предприятие (""¤1¤"") не совпадает с языком интерфейса пользователя (""¤2¤"")!"
"Для корректной работы рекомендуется устанавливать одинаковые языки!"
"Запустить платформу 1С:Предприятие с необходимым языком интерфейса можно при помощи параметра запуска ""/L uk"" (или ""/L ru"").';uk='Мова інтерфейсу платформи 1С:Підприємство (""¤1¤"") не співпадає з мовою інтерфейсу користувача (""¤2¤"")!"
"Для коректної роботи рекомендується встановлювати однакові мови!"
"Запустити платформу 1С:Підприємство з необхідною мовою інтерфейсу можна за допомогою параметру запуску ""/L uk"" (або ""/L ru"").'"),ЯзыкПлатформы,ЯзыкИнтерфейса));
	КонецЕсли;
	
КонецПроцедуры
