
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КоллекцияПечатныхФорм, ПараметрыВывода;
	
	//Если Параметры.Свойство("ИсточникДанных") Тогда
	//	
	//	Если НЕ УправлениеПечатьюПереопределяемый.ПечатьПоВнешнемуИсточнику(
	//				Параметры.ИсточникДанных,
	//				Параметры.ПараметрыИсточника,
	//				КоллекцияПечатныхФорм,
	//				ОбъектыПечати,
	//				ПараметрыВывода) Тогда
	//		Отказ = Истина;
	//		Возврат;
	//	КонецЕсли;
	//	
	//Иначе
		
		ИмяМенеджераПечати    = Параметры.ИмяМенеджераПечати;
		ИменаМакетов          = Параметры.ИменаМакетов;
		ПараметрКоманды       = Параметры.ПараметрКоманды;
		ПараметрыПечати       = Параметры.ПараметрыПечати;
	    КоличествоЭкземпляров = Параметры.КоличествоЭкземпляров;
	
	УправлениеПечатью.СформироватьПечатныеФормы(ИмяМенеджераПечати, ИменаМакетов, ПараметрКоманды, ПараметрыПечати,
			КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, КоличествоЭкземпляров);
		
	//КонецЕсли;
	
	ДоступнаПечатьПоКомплектно = ПараметрыВывода.ДоступнаПечатьПоКомплектно;
	
	Колво = КоллекцияПечатныхФорм.Количество();
	Для Сч = 1 По 5 Цикл
		Если Сч > Колво Тогда
			ЭтаФорма["Таб" + Сч] = Неопределено;
			Элементы["Группа" + Сч].Видимость = Ложь;
			Элементы["Копии"  + Сч].Видимость = Ложь;
			
		Иначе
			СтрМакета = КоллекцияПечатныхФорм[Сч-1];
			
			ЭтаФорма["Таб" + Сч] = СтрМакета.ТабличныйДокумент;
			Элементы["Группа" + Сч].Видимость = Истина;
			Элементы["Группа" + Сч].Заголовок = СтрМакета.СинонимМакета;
			Элементы["Копии"  + Сч].Видимость = Истина;
			Элементы["Копии"  + Сч].Заголовок = СтрМакета.СинонимМакета;
			
			ЭтаФорма["Копии" + Сч] = СтрМакета.Экземпляров;
			
			ИменаТабДокументов.Добавить(Сч, СтрМакета.СинонимМакета);
			
			Если НЕ ПустаяСтрока(СтрМакета.ПолныйПутьКМакету) Тогда
				МакетыПечатныхФорм.Добавить(СтрМакета.ПолныйПутьКМакету);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Колво = 1 Тогда
		Элементы.ГруппаКопии.Видимость = Ложь;
		Элементы.Копии.Видимость = Истина;
		Копии = КоллекцияПечатныхФорм[0].Экземпляров;
	Иначе
		Элементы.Копии.Видимость = Ложь;
		Элементы.ГруппаКопии.Видимость = Истина;
	КонецЕсли;
	
	Если Колво <= 1 Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	//Если Пользователи.ЭтоПолноправныйПользовательИБ()
	//ИЛИ ( РольДоступна("ВыводНаПринтерФайлБуферОбмена")
	//	И РаботаСПочтовымиСообщениями.ПроверитьСистемнаяУчетнаяЗаписьДоступна() )Тогда
	//	СистемнаяУчетнаяЗаписьЭлектроннойПочты = РаботаСПочтовымиСообщениями.ПолучитьСистемнуюУчетнуюЗапись();
	//Иначе
	//	Элементы.ОтправитьПоПочте.Видимость = Ложь;
	//КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПечатьВыполнить()
	
	ТабличныеДокументы = Новый СписокЗначений;
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		ТабличныеДокументы.Добавить(ЭтаФорма["Таб" + ТабДокумент.Значение], ТабДокумент.Представление);
	КонецЦикла;
	
	УправлениеПечатьюКлиент.РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати,
								ДоступнаПечатьПоКомплектно);
	
КонецПроцедуры

&НаКлиенте
Процедура КопииПриИзменении(Элемент)
	
	Копий = ЭтаФорма[Элемент.Имя];
	ИмяТабДока = "Таб" + ?(Элемент.Имя = "Копии", "1", Сред(Элемент.Имя, 6));
	ТабДок = ЭтаФорма[ИмяТабДока];
	ТабДок.КоличествоЭкземпляров = Копий;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоПочтеВыполнить()
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПечатныхФормПередОтправкой");
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Вложения = Новый Соответствие;
	
	СписокФайлов = Новый СписокЗначений;
	
	Если Результат.ЗапаковатьZIP Тогда
#Если ВебКлиент Тогда
		Путь = ПоместитьТабличныеДокументыВZIPНаСервере();
#Иначе
		Путь = ПоместитьТабличныеДокументыВZIPНаКлиенте(Результат);
#КонецЕсли
		
		Если Путь = "" Тогда
			Возврат;
		КонецЕсли;
		
		ИменаМакетов = "";
		Для Каждого ИмяТабДокумента Из ИменаТабДокументов Цикл
			ИменаМакетов = ИменаМакетов + ИмяТабДокумента.Представление + ", ";;
		КонецЦикла;
		ИменаМакетов = Лев(ИменаМакетов, СтрДлина(ИменаМакетов) - 2);
		ДатаПредставление = Формат(ТекущаяДата(), "ДФ='yyyyMMdd HH:mm'");
		
		Если ОбъектыПечати.Количество() > 1 Тогда
			ИмяФайла = "[ИменаМакетов] ([ДатаПредставление]).zip";
		Иначе
			ИмяФайла = "[Документ] ([ИменаМакетов] [ДатаПредставление]).zip";
		КонецЕсли;
		
		ИмяФайла = СтрЗаменить(ИмяФайла, "[Документ]",			Строка(ОбъектыПечати[0].Значение));
		ИмяФайла = СтрЗаменить(ИмяФайла, "[ИменаМакетов]",		ИменаМакетов);
		ИмяФайла = СтрЗаменить(ИмяФайла, "[ДатаПредставление]",	ДатаПредставление);
		
		СписокФайлов.Добавить(Путь, ИмяФайла);
	Иначе
#Если ВебКлиент Тогда
		ПоместитьТабличныеДокументыВоВременноеХранилище(СписокФайлов);
#Иначе
		ПоместитьТабличныеДокументыВФайлы(СписокФайлов, Результат);
#КонецЕсли
КонецЕсли;
	
	НормализоватьИменаФайлов(СписокФайлов);
	
	//РаботаСПочтовымиСообщениямиКлиент.ОткрытьФормуОтправкиПочтовогоСообщения(
	//		СистемнаяУчетнаяЗаписьЭлектроннойПочты, "", "", "", СписокФайлов, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВыполнить()

	спсВыбора = Новый СписокЗначений;
	Для Каждого Элемент Из ОбъектыПечати Цикл
		спсВыбора.Добавить(Элемент.Значение);
	КонецЦикла;
	
	Элемент = спсВыбора.ВыбратьЭлемент(НСтр("ru = 'Перейти к печатной форме'"));
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = ОбъектыПечати.НайтиПоЗначению(Элемент.Значение);
	Если Элемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбласти = Элемент.Представление;
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		
		ИмяЭлемента = "Таб" + ТабДокумент.Значение;
		Таб = ЭтаФорма[ИмяЭлемента];
		Область = Таб.Области.Найти(ИмяОбласти);
		Если Область = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяОбласть = Таб.Область(Область.Верх, , Область.Верх);
		Элементы[ИмяЭлемента].ТекущаяОбласть = ТекущаяОбласть;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ И ПРОЦЕДУРЫ ПОДГОТАВЛИВАЮЩИЕ ТАБЛИЧНЫЕ ДОКУМЕНТЫ К ОТПРАВКЕ

&НаСервере
Функция ПоместитьТабличныеДокументыВZIPНаСервере()

	ИмяКаталога = ПолучитьИмяВременногоФайла();
	ИмяАрхива   = ПолучитьИмяВременногоФайла();
	БылаОшибка  = Ложь;

	СоздатьКаталог(ИмяКаталога);
	Попытка
		Архив = Новый ЗаписьZipФайла(ИмяАрхива);
		
		Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
			ИмяТабДока = ИмяКаталога + "/" + ТабДокумент.Представление + ".mxl";
			ТабДок = ЭтаФорма["Таб" + ТабДокумент.Значение];
			ТабДок.Записать(ИмяТабДока, ТипФайлаТабличногоДокумента.MXL);
			Архив.Добавить(ИмяТабДока, РежимСохраненияПутейZIP.НеСохранятьПути);
		КонецЦикла;

		Архив.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		БылаОшибка = Истина;
	КонецПопытки;

	УдалитьФайлы(ИмяКаталога);

	Если БылаОшибка Тогда
		Возврат "";
	КонецЕсли;

	Данные = Новый ДвоичныеДанные(ИмяАрхива);
	УдалитьФайлы(ИмяАрхива);
	
	Возврат ПоместитьВоВременноеХранилище(Данные, "");

КонецФункции

&НаКлиенте
Функция ПолучитьСписокТиповФайловТабличныхДокументов(Результат)
	
	СписокТипов = Новый СписокЗначений;
	
	Если Результат.ФорматMXL Тогда
		СписокТипов.Добавить(ТипФайлаТабличногоДокумента.MXL, "mxl");
	КонецЕсли;
	
	Если Результат.ФорматHTML Тогда
		СписокТипов.Добавить(ТипФайлаТабличногоДокумента.HTML, "html");
	КонецЕсли;
	
	Если Результат.ФорматXLS Тогда
		СписокТипов.Добавить(ТипФайлаТабличногоДокумента.XLS, "xls");
	КонецЕсли;
	
	Возврат СписокТипов;	
	
КонецФункции

&НаСервере
Процедура ПоместитьТабличныеДокументыВоВременноеХранилище(СписокФайлов)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДатаПредставление = Формат(ТекущаяДата(), "ДФ='yyyyMMdd HH:mm'");
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		ТабДок = ЭтаФорма["Таб" + ТабДокумент.Значение];
		ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.MXL);
		Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
		Путь = ПоместитьВоВременноеХранилище(Данные, "");
		
		Если ОбъектыПечати.Количество() > 1 Тогда
			ИмяФайла = "[ИмяМакета] ([ДатаПредставление]).mxl";
		Иначе
			ИмяФайла = "[Документ] ([ИмяМакета] [ДатаПредставление]).mxl";
		КонецЕсли;
		
		ИмяФайла = СтрЗаменить(ИмяФайла, "[Документ]",			Строка(ОбъектыПечати[0].Значение));
		ИмяФайла = СтрЗаменить(ИмяФайла, "[ИмяМакета]",			ТабДокумент.Представление);
		ИмяФайла = СтрЗаменить(ИмяФайла, "[ДатаПредставление]",	ДатаПредставление);
		
		СписокФайлов.Добавить(Путь, ИмяФайла);
	КонецЦикла;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

#Если НЕ ВебКлиент Тогда
&НаКлиенте
Процедура ПоместитьТабличныеДокументыВФайлы(СписокФайлов, Результат)
	
	СписокТипов = ПолучитьСписокТиповФайловТабличныхДокументов(Результат);
	ДатаПредставление = Формат(ТекущаяДата(), "ДФ='yyyyMMdd HH:mm'");
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		ТабДок = ЭтаФорма["Таб" + ТабДокумент.Значение];
		
		Для Каждого ТипФайла Из СписокТипов Цикл
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ТипФайла.Представление);
			ТабДок.Записать(ИмяВременногоФайла, ТипФайла.Значение);
			
			Если ОбъектыПечати.Количество() > 1 Тогда
				ИмяФайла = "[ИмяМакета] ([ДатаПредставление]).[Расширение]";
			Иначе
				ИмяФайла = "[Документ] ([ИмяМакета] [ДатаПредставление]).[Расширение]";
			КонецЕсли;
			
			ИмяФайла = СтрЗаменить(ИмяФайла, "[Документ]",			Строка(ОбъектыПечати[0].Значение));
			ИмяФайла = СтрЗаменить(ИмяФайла, "[ИмяМакета]",			ТабДокумент.Представление);
			ИмяФайла = СтрЗаменить(ИмяФайла, "[ДатаПредставление]",	ДатаПредставление);
			ИмяФайла = СтрЗаменить(ИмяФайла, "[Расширение]",		ТипФайла.Представление);
			
			СписокФайлов.Добавить(ИмяВременногоФайла, ИмяФайла);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПоместитьТабличныеДокументыВZIPНаКлиенте(Результат)
	
	ИмяКаталога = ПолучитьИмяВременногоФайла();
	ИмяАрхива   = ПолучитьИмяВременногоФайла("zip");
	БылаОшибка  = Ложь;
	
	СписокТипов = ПолучитьСписокТиповФайловТабличныхДокументов(Результат);
	
	СоздатьКаталог(ИмяКаталога);
	
	Попытка
		Архив = Новый ЗаписьZipФайла(ИмяАрхива);
		
		Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
			ТабДок = ЭтаФорма["Таб" + ТабДокумент.Значение];
			
			Для Каждого ТипФайла Из СписокТипов Цикл
				ИмяТабДока = ИмяКаталога + "/" + ТабДокумент.Представление + "." + ТипФайла.Представление;
				ТабДок.Записать(ИмяТабДока, ТипФайла.Значение);
				Архив.Добавить(ИмяТабДока, РежимСохраненияПутейZIP.НеСохранятьПути);
			КонецЦикла;
		КонецЦикла;
		
		Архив.Записать();
	Исключение
		БылаОшибка = Истина;
	КонецПопытки;
	
	УдалитьФайлы(ИмяКаталога);
	
	Если БылаОшибка Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат ИмяАрхива;
	
КонецФункции
#КонецЕсли

&НаКлиенте
Процедура ПерейтиКУправлениюМакетами(Команда)
	
	ПараметрыОткрытия = ?(МакетыПечатныхФорм.Количество() > 0, Новый Структура("Фильтр", ОбъектыПечати[0].Значение), Неопределено);
	
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.МакетыПечатныхФорм", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура НормализоватьИменаФайлов(СписокФайлов)
	
	СтрИсключения = """ / \ [ ] : ; | = , ? * < >";
	СтрИсключения = СтрЗаменить(СтрИсключения, " ", "");
	
	Для Каждого ЭлементФайл Из СписокФайлов Цикл
		Для Индекс = 1 По СтрДлина(СтрИсключения) Цикл
			
			Символ = Сред(СтрИсключения, Индекс, 1);
			
			Если Найти(ЭлементФайл.Представление, Символ) > 0 Тогда
				ЭлементФайл.Представление = СтрЗаменить(ЭлементФайл.Представление, Символ, " ");
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры
