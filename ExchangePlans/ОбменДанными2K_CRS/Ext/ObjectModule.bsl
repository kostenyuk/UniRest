
Процедура ПриОтправкеДанныхПодчиненному(ЭлементДанных, ОтправкаЭлемента, СозданиеНачальногоОбраза)
	
	//Костенюк Александр-Старт 08.05.2014
	// При физическом удалении объектов в ЦБ возникает ошибка обмена
	Если ТипЗнч(ЭлементДанных) = Тип("УдалениеОбъекта") Тогда
		Возврат;
	КонецЕсли;
	//Костенюк Александр-Финиш 08.05.2014
	
	ЭлементДанныхМетаданные = ЭлементДанных.Метаданные();
	
	Если СозданиеНачальногоОбраза Тогда
		                         
		ОтправкаЭлемента = ОтправкаЭлементаДанных.Игнорировать;
		
		Если ОбщегоНазначения.ЭтоДокумент(ЭлементДанныхМетаданные) Тогда
			ОтправкаЭлемента = ОтправкаЭлементаДанных.Игнорировать
		КонецЕсли;
		              
		Если ОбщегоНазначения.ЭтоСправочник(ЭлементДанныхМетаданные) Тогда
			Отказ = Ложь;
			ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписью("ОбменДанными2K_CRS", ЭлементДанных, Отказ);
			Если ЭлементДанных.ОбменДанными.Получатели.Содержит(ЭтотОбъект.Ссылка) Тогда
				ОтправкаЭлемента = ОтправкаЭлементаДанных.Авто;
			Иначе
				ОтправкаЭлемента = ОтправкаЭлементаДанных.Игнорировать
			КонецЕсли;
		ИначеЕсли ОбщегоНазначения.ЭтоРегистр(ЭлементДанныхМетаданные) Тогда
			ОтправкаЭлемента = ОтправкаЭлементаДанных.Игнорировать;
			Если ОбщегоНазначения.ЭтоРегистрСведений(ЭлементДанныхМетаданные) Тогда
				Отказ = Ложь;
				ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюРегистра("ОбменДанными2K_CRS", ЭлементДанных, Отказ, Истина);
				Если ЭлементДанных.ОбменДанными.Получатели.Содержит(ЭтотОбъект.Ссылка) Тогда
					ОтправкаЭлемента = ОтправкаЭлементаДанных.Авто
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ОбщегоНазначения.ЭтоКонстанта(ЭлементДанныхМетаданные) Тогда
			ОтправкаЭлемента = ОтправкаЭлементаДанных.Авто
		ИначеЕсли ОбщегоНазначения.ЭтоПланВидовХарактеристик(ЭлементДанныхМетаданные) Тогда
			ОтправкаЭлемента = ОтправкаЭлементаДанных.Авто;
		КонецЕсли;
		
	Иначе
		//это выгрузка конфигурации подчиненному. Элементы данных передаются другой процедурой, а здесь данные не передаем.
		//ОтправкаЭлемента = ОтправкаЭлементаДанных.Игнорировать;
		
		//При создании начального образа очистка реквизитов не имеет смысла. Они все равно выгружаются.
		Если ОбщегоНазначения.ЭтоСправочник(ЭлементДанныхМетаданные) Или ОбщегоНазначения.ЭтоКонстанта(ЭлементДанныхМетаданные)
			И ОтправкаЭлемента = ОтправкаЭлементаДанных.Авто Тогда
			ПроцедурыОбменаДаннымиFrontOffice_Restoran.ПодготовитьНеобновляемыеРеквизитыОбъекта(ЭлементДанных, "Выгрузка", 1, ОтправкаЭлемента);
		КонецЕсли;
		
		//Костенюк Александр-Старт 19.12.2013
		Если (ОбщегоНазначения.ЭтоРегистр(ЭлементДанныхМетаданные)) И (ОтправкаЭлемента = ОтправкаЭлементаДанных.Авто) Тогда
			ПроцедурыОбменаДаннымиFrontOffice_Restoran.ПодготовитьНеобновляемыеРеквизитыРегистра(ЭлементДанных, "Выгрузка", 1, ОтправкаЭлемента);	
		КонецЕсли;
		//Костенюк Александр-Финиш 19.12.2013
		
	КонецЕсли;	
	
КонецПроцедуры


Процедура ПриОтправкеДанныхУзлаПодчиненному(ЭлементДанных, Игнорировать)
	а = 1
КонецПроцедуры


Процедура ПриПолученииДанныхОтПодчиненного(ЭлементДанных, ПолучениеЭлемента, ОтправкаНазад)
	ПроцедурыОбменаДаннымиFrontOffice_Restoran.ПодготовитьНеобновляемыеРеквизитыОбъекта(ЭлементДанных, "Загрузка", 0, ПолучениеЭлемента);
КонецПроцедуры


Процедура ПриОтправкеДанныхГлавному(ЭлементДанных, ОтправкаЭлемента)
	ПроцедурыОбменаДаннымиFrontOffice_Restoran.ПодготовитьНеобновляемыеРеквизитыОбъекта(ЭлементДанных, "Выгрузка", 0, ОтправкаЭлемента);
КонецПроцедуры


Процедура ПриПолученииДанныхОтГлавного(ЭлементДанных, ПолучениеЭлемента, ОтправкаНазад)
	ПроцедурыОбменаДаннымиFrontOffice_Restoran.ПодготовитьНеобновляемыеРеквизитыОбъекта(ЭлементДанных, "Загрузка", 1, ПолучениеЭлемента);
	//Костенюк Александр-Старт 20.12.2013
	ЭлементДанныхМетаданные = ЭлементДанных.Метаданные();
	Если (ОбщегоНазначения.ЭтоРегистр(ЭлементДанныхМетаданные)) И (ПолучениеЭлемента = ПолучениеЭлементаДанных.Авто) Тогда
		ПроцедурыОбменаДаннымиFrontOffice_Restoran.ПодготовитьНеобновляемыеРеквизитыРегистра(ЭлементДанных, "Загрузка", 1, ПолучениеЭлемента);	
	КонецЕсли;
	//Костенюк Александр-Финиш 20.12.2013
КонецПроцедуры


Процедура ПередЗаписью(Отказ)
	
	//Проверка уникальности префикса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЭтотУзел", Ссылка);
	Запрос.УстановитьПараметр("ЭтотКод", Код);
	Запрос.УстановитьПараметр("ЭтотРесторан", Ресторан);
	Запрос.УстановитьПараметр("ЭтоНовый", ЭтоНовый());

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ОбменДанными2K_CRS.Код = &ЭтотКод
		|			ТОГДА ""Код""
		|		ИНАЧЕ ""Ресторан""
		|	КОНЕЦ КАК Поле
		|ИЗ
		|	ПланОбмена.ОбменДанными2K_CRS КАК ОбменДанными2K_CRS
		|ГДЕ
		|	(ОбменДанными2K_CRS.Код = &ЭтотКод
		|			ИЛИ ОбменДанными2K_CRS.Ресторан = &ЭтотРесторан)
		|	И НЕ ОбменДанными2K_CRS.Ссылка = &ЭтотУзел
		|	И ОбменДанными2K_CRS.ПометкаУдаления = ЛОЖЬ
		|	И (&ЭтоНовый Или НЕ 0 В
		|				(ВЫБРАТЬ
		|					КОЛИЧЕСТВО(ОбменДанными2K_CRS.Ссылка) КАК Ссылка
		|				ИЗ
		|					ПланОбмена.ОбменДанными2K_CRS КАК ОбменДанными2K_CRS
		|				ГДЕ
		|					(ОбменДанными2K_CRS.Код <> &ЭтотКод
		|						ИЛИ ОбменДанными2K_CRS.Ресторан <> &ЭтотРесторан)
		|					И ОбменДанными2K_CRS.Ссылка = &ЭтотУзел))";

	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
		Если Результат.Выгрузить()[0].Поле = "Код" Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Повторяющийся индекс узла плана обмена """+Код+"""!", Отказ, "Запись настроек нового ресторана");		
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Для ресторана """+Ресторан+""" уже создан узел обмена!", Отказ, "Запись настроек нового ресторана");		
		КонецЕсли;
		Возврат;
	КонецЕсли;

	//Такое происходит если создается новый узел ресторана в ЦБ.
	//Больше вариантов когда выполнится этот код не предвидится.
	Если НастройкиСвязейМеждуБазамиРС.Количество() = 0 Тогда
		//НастройкиСвязейМеждуБазамиРС.Загрузить(ПланыОбмена.ОбменДанными2K_CRS.ЭтотУзел().НастройкиСвязейМеждуБазамиРС.Выгрузить())
		СписокСоставаПоПолномуИмени = ОбменДаннымиПовтИсп.ПолучитьСписокОбъектовСоставаПланаОбмена("ОбменДанными2K_CRS", Ложь);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаГрупп", ОбменДаннымиПовтИсп.ПолучитьТаблицуИерархииИдентификаторов());
		Запрос.УстановитьПараметр("СписокИменРеквизитовКОбработке", СписокСоставаПоПолномуИмени);

		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаГрупп.ПолноеИмяОбъекта,
		|	ТаблицаГрупп.ЗначениеПоУмолчанию
		|ПОМЕСТИТЬ ТаблицаГрупп
		|ИЗ
		|	&ТаблицаГрупп КАК ТаблицаГрупп
		|ГДЕ
		|	ТаблицаГрупп.ЗначениеПоУмолчанию <> ЗНАЧЕНИЕ(Перечисление.ВидыБазИсточниковПриОбменеЦРС.ПустаяСсылка)
		|	И ТаблицаГрупп.ПолноеИмяОбъекта В(&СписокИменРеквизитовКОбработке)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаГрупп.ПолноеИмяОбъекта,
		|	ИдентификаторыОбъектовМетаданных.Ссылка КАК ИдентификаторОбъектаНастройки,
		|	ТаблицаГрупп.ЗначениеПоУмолчанию КАК ИсточникДанныхОбъекта
		|ИЗ
		|	ТаблицаГрупп КАК ТаблицаГрупп
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|		ПО ТаблицаГрупп.ПолноеИмяОбъекта = ИдентификаторыОбъектовМетаданных.ПолноеИмя";
		
		НастройкиСвязейМеждуБазамиРС.Загрузить(Запрос.Выполнить().Выгрузить());  
		
	КонецЕсли;
КонецПроцедуры


Процедура ПриПолученииДанныхУзлаОтГлавного(ЭлементДанных, Игнорировать)
	а = 1;
КонецПроцедуры
                                        