
# Если Клиент Тогда

Перем мРедактируемаяЗапись;

Перем мФормаВладелец;


// Функция определяет имя формы в зависимости от типа контактной информации.
//
// Возвращаемое значение:
//   Строка. Имя формы объекта.
//
Функция ПолучитьИмяФормы()

	Если Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат "ФормаЗаписиАдреса";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		Возврат "ФормаЗаписиАдресаЭП";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
		Возврат "ФормаЗаписиВебСтраницы";
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Возврат "ФормаЗаписиТелефона";
	Иначе
		Возврат "ФормаЗаписи";
	КонецЕсли;

КонецФункции // ПолучитьИмяФормы()

// Процедура инициирует редактирование записи.
//
// Параметры:
//  СтруктураЗаписи - Структура, НаборЗаписейРегистраСведений, МенеджерЗаписи, ЗаписьНабораЗаписей. Данные для редактирования.
//  Записывать - Булево. Записывать данные в регистр при окончании редактирования.
//  ФормаВладелец - Форма. Форма откуда вызывается редактирование.
//  СтруктураПредустановленныхЗначений - Структура. Данные для заполнения формч по умолчанию, могут отличаться от редактируемых, например при копировании.
//
Процедура РедактироватьЗапись(СтруктураЗаписи = Неопределено, Записывать = Ложь, ФормаВладелец = Неопределено, СтруктураПредустановленныхЗначений = Неопределено) Экспорт

	мФормаВладелец = ФормаВладелец;
	
	ЭтотОбъект.ЗаписыватьВРегистр = Записывать;
	
	Если ТипЗнч(СтруктураЗаписи) = Тип("РегистрСведенийЗапись.КонтактнаяИнформация")
	 Или ТипЗнч(СтруктураЗаписи) = Тип("РегистрСведенийМенеджерЗаписи.КонтактнаяИнформация") Тогда
		мРедактируемаяЗапись = СтруктураЗаписи;
		ЛокальнаяСтруктураЗаписи = УправлениеКонтактнойИнформацией.ПолучитьСтруктуруЗаписиРегистра(СтруктураЗаписи);
	ИначеЕсли ТипЗнч(СтруктураЗаписи) = Тип("РегистрСведенийНаборЗаписей.КонтактнаяИнформация") Тогда
		// Вводим новый.
		Если СтруктураЗаписи.Отбор.Объект.Использование И (Не СтруктураЗаписи.Отбор.Объект.Значение = Неопределено) Тогда
			мРедактируемаяЗапись = СтруктураЗаписи;
			ЛокальнаяСтруктураЗаписи = Новый Структура("Объект", СтруктураЗаписи.Отбор.Объект.Значение);
		КонецЕсли; 
	ИначеЕсли ТипЗнч(СтруктураЗаписи) = Тип("Структура") Тогда
		ЛокальнаяСтруктураЗаписи = СтруктураЗаписи;
	КонецЕсли;
	
	Если (Не СтруктураПредустановленныхЗначений = Неопределено) Тогда
		ЛокальнаяСтруктураЗаписи = СтруктураПредустановленныхЗначений;
	КонецЕсли; 
	
	Если ТипЗнч(ЛокальнаяСтруктураЗаписи) = Тип("Структура") Тогда
		Для Каждого ЭлементСтруктуры Из ЛокальнаяСтруктураЗаписи Цикл
			ЭтотОбъект[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;
		КонецЦикла; 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Тип) Тогда
	
		Меню = Новый СписокЗначений();

		Для Индекс = 0 По Перечисления.ТипыКонтактнойИнформации.Количество() - 1 Цикл
			Меню.Добавить(Перечисления.ТипыКонтактнойИнформации[Индекс]);
		КонецЦикла; 

		ВыбранныйПункт = Меню.ВыбратьЭлемент("Выберите тип контактной информации");
		Если (ВыбранныйПункт = Неопределено) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;

		Тип = ВыбранныйПункт.Значение;
	
	КонецЕсли;
	
	ПолучитьФорму(ПолучитьИмяФормы()).ОткрытьМодально();

КонецПроцедуры // РедактироватьЗапись()

// Функция обрабатывает событие закрытия формы редактирования записи.
//
// Возвращаемое значение:
//   Булево. Закрывать или не закрывать форму.
//
Функция ЗакрыватьФормуРедактирования() Экспорт

	ОтветНаВопрос = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
	
	Если (ОтветНаВопрос = КодВозвратаДиалога.Отмена) Тогда
		Возврат Истина;
	КонецЕсли;
	Если (ОтветНаВопрос = КодВозвратаДиалога.Да) Тогда
		Возврат Не Записать();
	КонецЕсли; 
	
	Возврат Ложь;

КонецФункции // ЗакрыватьФормуРедактирования()

// Процедура заполняет запись данными из реквизитов обработки.
//
// Параметры:
//  Запись - Структура, МенеджерЗаписи, ЗаписьНабораЗаписей. Данные для редактирования.
//
Процедура ЗаполнитьЗапись(Запись)

	Запись.Объект        = Объект;
	Запись.Тип           = Тип;
	Запись.Вид           = Вид;
	Запись.Представление = Представление;
	Запись.Комментарий   = Комментарий;
	Запись.Поиск         = Поиск;
	Для Индекс = 1 По 11 Цикл
		Запись["Поле" + Строка(Индекс)] = ЭтотОбъект["Поле" + Строка(Индекс)];
	КонецЦикла;

КонецПроцедуры // ЗаполнитьЗапись()

// Функция производит запись данных в регистр или просто в запись набора или менеджер записи.
//
// Возвращаемое значение:
//   Булево. Истина в случаи успешного завершения операции.
//
Функция Записать() Экспорт
	
	// Проверка заполнения реквизитов.
	
	// TODO: Проверка заполнения реквизитов.
	

	Если ТипЗнч(мРедактируемаяЗапись) = Тип("РегистрСведенийЗапись.КонтактнаяИнформация")
	 ИЛИ ТипЗнч(мРедактируемаяЗапись) = Тип("РегистрСведенийМенеджерЗаписи.КонтактнаяИнформация") Тогда
		ЗаполнитьЗапись(мРедактируемаяЗапись);
		СтруктураОповещения = Новый Структура("Объект,Тип,Вид", мРедактируемаяЗапись.Объект, мРедактируемаяЗапись.Тип, мРедактируемаяЗапись.Вид);
	ИначеЕсли ТипЗнч(мРедактируемаяЗапись) = Тип("РегистрСведенийНаборЗаписей.КонтактнаяИнформация") Тогда
		// Запись с заменой.
		НайденнаяЗаписьНабора = Неопределено;
		Для Каждого ЗаписьНабора Из мРедактируемаяЗапись Цикл
			Если ЗаписьНабора.Объект = Объект
			   И ЗаписьНабора.Тип = Тип
			   И ЗаписьНабора.Вид = Вид Тогда
				НайденнаяЗаписьНабора = ЗаписьНабора;
			КонецЕсли; 
		КонецЦикла;
		Если НайденнаяЗаписьНабора = Неопределено Тогда
			НайденнаяЗаписьНабора = мРедактируемаяЗапись.Добавить();
		КонецЕсли; 
		ЗаполнитьЗапись(НайденнаяЗаписьНабора);
		СтруктураОповещения = Новый Структура("Объект,Тип,Вид", НайденнаяЗаписьНабора.Объект, НайденнаяЗаписьНабора.Тип, НайденнаяЗаписьНабора.Вид);
	КонецЕсли;
	
	Если ЗаписыватьВРегистр И (ТипЗнч(мРедактируемаяЗапись) = Тип("РегистрСведенийМенеджерЗаписи.КонтактнаяИнформация")) Тогда
		Попытка
			мРедактируемаяЗапись.Записать(Ложь);
		Исключение
			ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ОписаниеОшибки(), ,,, мРедактируемаяЗапись, Объект);
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли; 
	
	Если ТипЗнч(мФормаВладелец) = Тип("Форма") И ТипЗнч(СтруктураОповещения) = Тип("Структура") Тогда
		Оповестить("ЗаписанаКИ", СтруктураОповещения);
	КонецЕсли; 
	
	Возврат Истина;

КонецФункции // Записать()


// Инициализация переменных.
ДоступностьОбъекта = Истина;

#КонецЕсли

