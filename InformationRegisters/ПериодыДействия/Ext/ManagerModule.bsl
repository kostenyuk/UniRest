
Процедура ПериодДействияСгенерироватьУсловиеЗапроса(Запрос, Расположение, Псевдоним, ТекущаяДата = Неопределено) Экспорт
	
	ТекущаяДата = __ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ТекущаяДата);
	
	// Внедрение в текст запроса.
	Текст = "(Меню.ПериодДействия = ЗНАЧЕНИЕ(Справочник.ПериодыДействия.ПустаяСсылка)
	        |	ИЛИ Меню.Ссылка В
	        |		(ВЫБРАТЬ
	        |			ПериодыДействия.ОбъектПрименения
	        |		ИЗ
	        |			РегистрСведений.ПериодыДействия КАК ПериодыДействия
	        |		ГДЕ
	        |			НАЧАЛОПЕРИОДА(&ДатаПериодаДействия, ДЕНЬ) МЕЖДУ ПериодыДействия.ДатаНачала И ПериодыДействия.ДатаОкончания
	        |			И &ВремяПериодаДействия МЕЖДУ ПериодыДействия.ВремяНачала И ПериодыДействия.ВремяОкончания
	        |			И (МЕСЯЦ(&ДатаПериодаДействия) = ПериодыДействия.НомерМесяцаГода
	        |				ИЛИ ПериодыДействия.НомерМесяцаГода = 0)
	        |			И (ДЕНЬНЕДЕЛИ(&ДатаПериодаДействия) = ПериодыДействия.НомерДняНедели
	        |				ИЛИ ПериодыДействия.НомерДняНедели = 0)))";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, Расположение, СтрЗаменить(Текст, "Меню", Псевдоним));
	
	Запрос.УстановитьПараметр("ДатаПериодаДействия", ТекущаяДата);						  
	Запрос.УстановитьПараметр("ВремяПериодаДействия", '00010101' + (ТекущаяДата - НачалоДня(ТекущаяДата)));						  
	
КонецПроцедуры // ПериодДействияСгенерироватьУсловиеЗапроса()


Процедура ПриЗаписиПериодаДействия(ПериодДействия, Отказ) Экспорт
	
	// При обмене данными ничего не проверяем.
	Если ПериодДействия.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Реконфигурация.
	Если Не Отказ Тогда
		Если Не ПериодДействия.ЭтоГруппа Тогда
			УстановитьПривилегированныйРежим(Истина);
			
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			                      |	ПериодыДействияКомбинированные.Ссылка КАК ПериодДействия,
			                      |	ВложенныйЗапрос.ОбъектПрименения,
			                      |	ПериодыДействияКомбинированные.НомерСтроки КАК ПорядковыйНомер,
			                      |	ПериодыДействияКомбинированные.ДатаНачала,
			                      |	ПериодыДействияКомбинированные.ДатаОкончания,
			                      |	ПериодыДействияКомбинированные.ВремяНачала,
			                      |	ПериодыДействияКомбинированные.ВремяОкончания,
			                      |	ПериодыДействияКомбинированные.МесяцГода,
			                      |	ПериодыДействияКомбинированные.ДеньНедели,
			                      |	ПериодыДействияКомбинированные.НомерДняНедели,
			                      |	ПериодыДействияКомбинированные.НомерМесяцаГода
			                      |ИЗ
			                      |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			                      |		ПериодыДействия.ОбъектПрименения КАК ОбъектПрименения
			                      |	ИЗ
			                      |		РегистрСведений.ПериодыДействия КАК ПериодыДействия
			                      |	ГДЕ
			                      |		ПериодыДействия.ПериодДействия = &ПериодДействия
			                      |		И НЕ ПериодыДействия.ОбъектПрименения.Ссылка ЕСТЬ NULL ) КАК ВложенныйЗапрос
			                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПериодыДействия.Комбинированные КАК ПериодыДействияКомбинированные
			                      |		ПО (ИСТИНА)
			                      |ГДЕ
			                      |	ПериодыДействияКомбинированные.Ссылка = &ПериодДействия");
			Запрос.УстановитьПараметр("ПериодДействия", ПериодДействия.Ссылка);						  
								  
			НаборЗаписей = РегистрыСведений.ПериодыДействия.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПериодДействия.Установить(ПериодДействия.Ссылка);
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			Попытка
				НаборЗаписей.Записать(Истина);
			Исключение
				Отказ = Истина;	// ERR
			КонецПопытки;
			
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписиПериодаДействия()


Процедура ПередЗаписьюОбъектаПрименения(ОбъектПрименения, Отказ) Экспорт

	// При обмене данными ничего не проверяем.
	Если ОбъектПрименения.ОбменДанными.Загрузка Тогда
		Если Не ОбъектПрименения.ДополнительныеСвойства.Свойство("ПринудительнаяРегистрацияПериодовДействия") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Наследование.
	Если Не Отказ Тогда
		Если Не ОбъектПрименения.ДополнительныеСвойства.Свойство("ПредотвратитьРегистрациюПериодовДействия") Тогда
			УстановитьПривилегированныйРежим(Истина);
			
			Если (Не ОбъектПрименения.Родитель = ОбъектПрименения.Ссылка.Родитель) Тогда
				Если (ОбъектПрименения.ПериодДействия = ОбъектПрименения.Ссылка.ПериодДействия) И
					 (ОбъектПрименения.ПериодДействия = ОбъектПрименения.Ссылка.Родитель.ПериодДействия) Тогда
					 ОбъектПрименения.ПериодДействия = ОбъектПрименения.Родитель.ПериодДействия;
				КонецЕсли; 
			КонецЕсли; 
			
			Если (Не ОбъектПрименения.ПериодДействия = ОбъектПрименения.Ссылка.ПериодДействия) Тогда
				Имя = __ОбщегоНазначенияСервер.Метаданные(ОбъектПрименения).Имя;
				
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	Меню.Ссылка,
				                      |	Меню.Родитель
				                      |ИЗ
				                      |	Справочник.Меню КАК Меню
				                      |ГДЕ
				                      |	Меню.Ссылка В ИЕРАРХИИ(&Ссылка)
				                      |	И Меню.ПериодДействия = &ПериодДействия
				                      |	И Меню.ПериодДействия = Меню.Родитель.ПериодДействия");
			    Запрос.УстановитьПараметр("Ссылка", ОбъектПрименения.Ссылка);
			    Запрос.УстановитьПараметр("ПериодДействия", ОбъектПрименения.Ссылка.ПериодДействия);
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Справочник.Меню", "Справочник." + Имя);
				
				// Пост-обработка.
				МассивОбъектовПрименения = Новый Массив; //Костенюк Александр-Закомментировано 13.03.2013 МассивОбъектовПрименения.Добавить(ОбъектПрименения.Ссылка);
				ТаблицаОбъектовПрименения = Запрос.Выполнить().Выгрузить();
				Для Каждого СтрокаТаблицыПериодовДействия Из ТаблицаОбъектовПрименения Цикл
					Если (Не МассивОбъектовПрименения.Найти(СтрокаТаблицыПериодовДействия.Родитель) = Неопределено) Тогда
						МассивОбъектовПрименения.Добавить(СтрокаТаблицыПериодовДействия.Ссылка);
					КонецЕсли; 
				КонецЦикла; 
				
				ОбъектПрименения.ДополнительныеСвойства.Вставить("РегистрацияПериодовДействия", МассивОбъектовПрименения);
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		ОбъектПрименения.ДополнительныеСвойства.Удалить("ПредотвратитьРегистрациюПериодовДействия");
	КонецЕсли; 	
	
КонецПроцедуры // ПередЗаписьюОбъектаПрименения()

Процедура ПриЗаписиОбъектаПрименения(ОбъектПрименения, Отказ) Экспорт
	
	Перем МассивОбъектовПрименения;

	// При обмене данными ничего не проверяем.
	Если ОбъектПрименения.ОбменДанными.Загрузка Тогда
		Если Не ОбъектПрименения.ДополнительныеСвойства.Свойство("ПринудительнаяРегистрацияПериодовДействия") Тогда
			Возврат;
		КонецЕсли;
		ОбъектПрименения.ДополнительныеСвойства.Удалить("ПринудительнаяРегистрацияПериодовДействия");
	КонецЕсли;
	
	// Наследование.
	Если Не Отказ Тогда
		Если ОбъектПрименения.ДополнительныеСвойства.Свойство("РегистрацияПериодовДействия", МассивОбъектовПрименения) Тогда
			ОбъектПрименения.ДополнительныеСвойства.Удалить("РегистрацияПериодовДействия");
			УстановитьПривилегированныйРежим(Истина);
			
			Запись = ЗначениеЗаполнено(ОбъектПрименения.ПериодДействия);
			
			//Костенюк Александр-Старт 26.11.2012
			ТаблицаКонфигурацииПериодаДействия = Новый ТаблицаЗначений;
			//Костенюк Александр-Финиш 26.11.2012
			
			Если Запись Тогда
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	ПериодыДействияКомбинированные.Ссылка КАК ПериодДействия,
				                      |	НЕОПРЕДЕЛЕНО КАК ОбъектПрименения,
				                      |	ПериодыДействияКомбинированные.НомерСтроки КАК ПорядковыйНомер,
				                      |	ПериодыДействияКомбинированные.ДатаНачала,
				                      |	ПериодыДействияКомбинированные.ДатаОкончания,
				                      |	ПериодыДействияКомбинированные.ВремяНачала,
				                      |	ПериодыДействияКомбинированные.ВремяОкончания,
				                      |	ПериодыДействияКомбинированные.МесяцГода,
				                      |	ПериодыДействияКомбинированные.ДеньНедели,
				                      |	ПериодыДействияКомбинированные.НомерДняНедели,
				                      |	ПериодыДействияКомбинированные.НомерМесяцаГода
				                      |ИЗ
				                      |	Справочник.ПериодыДействия.Комбинированные КАК ПериодыДействияКомбинированные
				                      |ГДЕ
				                      |	ПериодыДействияКомбинированные.Ссылка = &ПериодДействия");
			    Запрос.УстановитьПараметр("ПериодДействия", ОбъектПрименения.ПериодДействия);
				ТаблицаКонфигурацииПериодаДействия = Запрос.Выполнить().Выгрузить();
			КонецЕсли;
			
			//Костенюк Александр-Старт 13.03.2013
			МассивОбъектовПрименения.Добавить(ОбъектПрименения.Ссылка);
			//Костенюк Александр-Финиш 13.03.2013
			
			Для Каждого ОбъектПримененияСсылка Из МассивОбъектовПрименения Цикл
				
				// Справочник.
				Если ЗначениеЗаполнено(ОбъектПримененияСсылка) И (Не ОбъектПрименения.Ссылка = ОбъектПримененияСсылка) Тогда
					ОбъектПримененияОбъект = ОбъектПримененияСсылка.ПолучитьОбъект();
					ОбъектПримененияОбъект.ПериодДействия = ОбъектПрименения.ПериодДействия;
					ОбъектПримененияОбъект.ОбменДанными.Загрузка = Истина;
					Попытка
						ОбъектПримененияОбъект.Записать();
					Исключение
						Отказ = Истина;	// ERR
						Прервать;
					КонецПопытки;
				КонецЕсли; 
				
				// Регистр.
				НаборЗаписей = РегистрыСведений.ПериодыДействия.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ОбъектПрименения.Установить(ОбъектПримененияСсылка);
				//Костенюк Александр-Старт 26.11.2012
				НаборЗаписей.Очистить();
				НаборЗаписей.Прочитать();
				//Костенюк Александр-Финиш 26.11.2012
				Если Запись Тогда
					//Костенюк Александр-Старт 26.11.2012
					НаборЗаписей.Очистить();
					НаборЗаписей.Прочитать();
					//Костенюк Александр-Финиш 26.11.2012
					ТаблицаКонфигурацииПериодаДействия.ЗаполнитьЗначения(ОбъектПримененияСсылка, "ОбъектПрименения");
					//Костенюк Александр-Закомментировано 26.11.2012
					// Отбор по периоду действия устанавливать не нужно, т.к. одному элементу может принадлежать только один период
					//НаборЗаписей.Отбор.ПериодДействия.Установить(ОбъектПрименения.ПериодДействия);
					//НаборЗаписей.Загрузить(ТаблицаКонфигурацииПериодаДействия);
				КонецЕсли;
				//Костенюк Александр-Старт 26.11.2012
				// По каким-то непонятным причинам не очищаются записи регистра с отбором
				// поэтому если период действия не указан, то будем просто передавать пустую таблицу
				// для загрузки в набор записей
				НаборЗаписей.Загрузить(ТаблицаКонфигурацииПериодаДействия);
				//Костенюк Александр-Финиш 26.11.2012
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
				Попытка
					НаборЗаписей.Записать(Истина);
				Исключение
					Отказ = Истина;	// ERR
					Прервать;
				КонецПопытки;
				
			КонецЦикла; 
		
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры // ПриЗаписиОбъектаПрименения()
