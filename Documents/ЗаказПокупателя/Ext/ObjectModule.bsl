
Процедура ПодготовитьШапку(РежимЗаписи, РежимПроведения)
	
	ТекущаяДата = ТекущаяДата();
	
	Распечатан = (Проведен Или (РежимЗаписи = РежимЗаписиДокумента.Проведение)) И (Не РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения);
	
	Состояние = УправлениеЗаказами.ПолучитьСостояниеДокумента(ЭтотОбъект, РежимЗаписи);
	
	Модуль = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
		Модуль,
		Перечисления.МодулиИПодсистемы.Ресторан);
		
	Ресторан = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
		Ресторан,
		Справочники.Рестораны.ОсновнойРесторан());
		
	КоличествоКлиентов = Макс(КоличествоКлиентов, 1);
	
	ДатаНачалаПериода = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
		ДатаНачалаПериода,
		Мин(ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ДатаОкончанияПериода, ТекущаяДата), ТекущаяДата));
	
	Если Распечатан Или ПометкаУдаления Тогда
		ДатаНачалаПериода = ОбщегоНазначенияКлиентСервер.ПолучитьНеПустоеЗначение(
			ДатаОкончанияПериода,
			Макс(ОбщегоНазначенияКлиентСервер.ПолучитьНеПустуюДату(ДатаНачалаПериода, ТекущаяДата), ТекущаяДата));
	КонецЕсли;
	
	Если Не ПометкаУдаления Тогда
		ПричинаОтказа = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ПодготовитьШапку()

Процедура ПодготовитьТабличнуюЧастьСтолы(РежимЗаписи, РежимПроведения)
	
	Если Столы.Количество() Тогда
	
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Столы.Ссылка КАК Стол,
		                      |	Столы.Номер КАК Номер
		                      |ИЗ
		                      |	Справочник.Столы КАК Столы
		                      |ГДЕ
		                      |	Столы.Ссылка В(&Столы)
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	Номер");
		Запрос.УстановитьПараметр("Столы", Столы.ВыгрузитьКолонку("Стол"));
		Результат = Запрос.Выполнить().Выгрузить();
		
		Столы.Загрузить(Результат);
		Если Столы.Количество() Тогда
			Стол = Столы[0].Стол;
		Иначе
			Стол = Неопределено;
		КонецЕсли;
		
		СтолПредставление = Неопределено;
		Для Каждого СтрокаТаблицыРезультата Из Результат Цикл
			Если ПустаяСтрока(СтолПредставление) Тогда
				СтолПредставление = СтрокаТаблицыРезультата.Номер;
			Иначе
				СтолПредставление = СтолПредставление + ", " + СтрокаТаблицыРезультата.Номер;
			КонецЕсли;
		КонецЦикла;
	
	Иначе
		
		Если ЗначениеЗаполнено(Стол) Тогда
			Столы.Добавить().Стол = Стол;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стол) Тогда
			СтолПредставление = Стол.Номер;
		Иначе
			СтолПредставление = Неопределено;
		КонецЕсли;
	
    КонецЕсли;
	
	// Период резервирования.
	ДатаНачалаРезервирования = Дата;
	ДатаОкончанияРезервирования = ДатаНачалаРезервирования + Справочники.Столы.ПолучитьМаксимальноеВремяРезервированияСекунд(Столы.ВыгрузитьКолонку("Стол")) - 1;
	
КонецПроцедуры // ПодготовитьТабличнуюЧастьСтолы()


Процедура ДвиженияПоРегистрамСостояний(РежимПроведения, Отказ);

	Если Не Отказ Тогда
		
		НаборЗаписей = РегистрыСведений.СостояниеЗаказовПокупателей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Ссылка);
		
		Если Проведен Или ПометкаУдаления Тогда
		Иначе
			
			Если Столы.Количество() Тогда
				Для Каждого СтрокаТабличнойЧастиСтолы Из Столы Цикл
					
					Если НаборЗаписей.Количество() Тогда
						НаборЗаписей[НаборЗаписей.Количество() - 1].СледующийСтол = СтрокаТабличнойЧастиСтолы.Стол;
					КонецЕсли;
					
					Запись = НаборЗаписей.Добавить();
					
					ЗаполнитьЗначенияСвойств(Запись, ЭтотОбъект);
					Запись.Документ = Ссылка;
					Запись.Стол = СтрокаТабличнойЧастиСтолы.Стол;
					
				КонецЦикла;
			Иначе
				
				Запись = НаборЗаписей.Добавить();
				
				ЗаполнитьЗначенияСвойств(Запись, ЭтотОбъект);
				Запись.Документ = Ссылка;
				
			КонецЕсли;
		
		КонецЕсли;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибкеЗапеисиРегистра(ИнформацияОбОшибке(), Отказ, ,, НаборЗаписей, ЭтотОбъект);
		КонецПопытки;
	
	КонецЕсли;
		
КонецПроцедуры // ДвиженияПоРегистрамСостояний()


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	// Ресторан.
	Ресторан = ПолучитьСвойство(ДанныеЗаполнения, "Ресторан", Справочники.Рестораны.ОсновнойРесторан());
	
	// Телефон.
	СтруктураТелефона = УправлениеКонтрагентамиКлиентСервер.ПолучитьПустуюСтруктуруТелефона();
	УправлениеКонтрагентамиКлиентСервер.РазложитьТелефонПоПолям(ПолучитьСвойство(ДанныеЗаполнения, "ТелефонПредставление"), СтруктураТелефона);
	ТелефонПоиск = СтруктураТелефона.Поиск;
	
	// Столы.
	Для Каждого Значение Из ПолучитьСвойство(ДанныеЗаполнения, "Столы", Новый СписокЗначений).ВыгрузитьЗначения() Цикл
		Столы.Добавить().Стол = Значение;
	КонецЦикла;	

	ОбщегоНазначения.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Распечатан Тогда
		ПроверяемыеРеквизиты.Добавить("Стол");
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьШапку(РежимЗаписи, РежимПроведения);
	ПодготовитьТабличнуюЧастьСтолы(РежимЗаписи, РежимПроведения);
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияПоРегистрамСостояний(РежимПроведенияДокумента.Неоперативный, Отказ);

КонецПроцедуры // ПриЗаписи()
