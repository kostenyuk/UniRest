&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел();
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПодключенияПриСинхронизацииДанныхНажатие(Элемент)
	
	Отбор              = Новый Структура("Узел", ГлавныйУзел);
	ЗначенияЗаполнения = Новый Структура("Узел", ГлавныйУзел);
	
	ОбменДаннымиКлиент.ОткрытьФормуЗаписиРегистраСведенийПоОтбору(
		Отбор, ЗначенияЗаполнения, "НастройкиТранспортаОбмена", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналРегистрацииНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма.ЖурналРегистрации", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьИПродолжить(Команда)
	
	ТекстПредупреждения = ЗагрузитьИПродолжитьНаСервере();
	Если ПустаяСтрока(ТекстПредупреждения) Тогда
		Закрыть("Продолжить");
	Иначе
		Предупреждение(ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НеСинхронизироватьИПродолжить(Команда)
	
	ПродолжитьЗапускНаСервере();
	
	Закрыть("Продолжить");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботу(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПродолжитьЗапускНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ОбновлениеИнформационнойБазы.НеобходимоОбновлениеИнформационнойБазы() Тогда
		Константы.ЗагрузитьСообщениеОбменаДанными.Установить(Ложь);
	КонецЕсли;
	
	ДобавитьУправляющийПараметр("ПропуститьПовторнуюЗагрузкуСообщенияОбменаДанными");
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьИПродолжитьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если КонфигурацияИзменена() Тогда
		Возврат
			НСтр("ru = 'Из главного узла получены изменения, которые ещё не применены.
			           |Требуется открыть конфигуратор и обновить конфигурацию базы данных.'");
	КонецЕсли;
	
	Попытка
		Справочники.ИдентификаторыОбъектовМетаданных.ПроверкаИспользования();
	Исключение
		// Если ИдентификаторыОбъектовМетаданных не используются,
		// тогда предварительная синхронизация не требуется.
		Константы.ЗагрузитьСообщениеОбменаДанными.Установить(Истина);
		Возврат "";
	КонецПопытки;
	
	ТекстПредупреждения = "";
	Отказ = Ложь;
	Попытка
		ОбменДаннымиСервер.ПередПроверкойИдентификаторовОбъектовМетаданныхВПодчиненномУзлеРИБ(Отказ);
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		Константы.ЗагрузитьСообщениеОбменаДанными.Установить(Истина);
		ДобавитьУправляющийПараметр("ИдентификаторыОбъектовМетаданныхВПодчиненномУзлеУжеЗагружены");
		
	ИначеЕсли КонфигурацияИзменена() Тогда
		Константы.ЗагрузитьСообщениеОбменаДанными.Установить(Истина);
		ТекстПредупреждения =
			НСтр("ru = 'Из главного узла получены изменения, которые нужно применить.
			           |Требуется открыть конфигуратор и обновить конфигурацию базы данных.'");
	Иначе
		ТекстПредупреждения =
			НСтр("ru = 'Получение данных из главного узла завершилось с ошибками.
			           |Подробности см. в журнале регистрации.'");
	КонецЕсли;
	
	УстановитьДоступность();
	
	Возврат ТекстПредупреждения;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность()
	
	Если ОбменДаннымиСервер.ЗагрузитьСообщениеОбменаДанными()
	   И ОбновлениеИнформационнойБазы.НеобходимоОбновлениеИнформационнойБазы() Тогда
		
		Элементы.ФормаНеСинхронизироватьИПродолжить.Доступность = Ложь;
		Элементы.Пояснение2.Доступность = Ложь;
	Иначе
		Элементы.ФормаНеСинхронизироватьИПродолжить.Доступность = Истина;
		Элементы.Пояснение2.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУправляющийПараметр(Имя)
	
	ТекущиеПараметры = Новый Соответствие;
	Для Каждого КлючИЗначение Из ПараметрыСеанса.ПараметрыКлиентаНаСервере Цикл
		ТекущиеПараметры.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	ТекущиеПараметры.Вставить(Имя, Истина);
	
	ПараметрыСеанса.ПараметрыКлиентаНаСервере = Новый ФиксированноеСоответствие(ТекущиеПараметры);
	
КонецПроцедуры
