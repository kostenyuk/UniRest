
Процедура ПолучитьНастройкиМаршрутаДоставки(Ссылка, Объект) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	// Выборка данных.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КлассификаторУлиц.Ссылка КАК Ссылка,
	                      |	ЛОЖЬ КАК Актуальность,
	                      |	NULL КАК Представление,
	                      |	ЛОЖЬ КАК ТолькоПросмотр,
	                      |	ВЫБОР
	                      |		КОГДА КлассификаторУлиц.ЭтоГруппа
	                      |			ТОГДА 2
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ + ВЫБОР
	                      |		КОГДА КлассификаторУлиц.ПометкаУдаления
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК ИндексКартинки
	                      |ИЗ
	                      |	Справочник.КлассификаторУлиц КАК КлассификаторУлиц
	                      |ГДЕ
	                      |	НЕ КлассификаторУлиц.ЭтоГруппа
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КлассификаторУлиц.Владелец.Наименование,
	                      |	КлассификаторУлиц.Наименование
	                      |ИТОГИ
	                      |	КлассификаторУлиц.Владелец КАК Ссылка,
	                      |	ИСТИНА КАК ТолькоПросмотр,
	                      |	2 КАК ИндексКартинки
	                      |ПО
	                      |	КлассификаторУлиц.Владелец
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Владелец", Ссылка.Ссылка);
	
	НастройкиМаршрутаДоставки = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	НастройкиМаршрутаДоставки.Колонки.Добавить("СписокНомеровДомов", Новый ОписаниеТипов("СписокЗначений"));
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АдресаМаршрутовДоставки.Улица КАК Улица,
	                      |	АдресаМаршрутовДоставки.Представление,
	                      |	АдресаМаршрутовДоставки.НачальныйДом КАК НачальныйДом,
	                      |	АдресаМаршрутовДоставки.КонечныйДом КАК КонечныйДом
	                      |ИЗ
	                      |	РегистрСведений.АдресаМаршрутовДоставки КАК АдресаМаршрутовДоставки
	                      |ГДЕ
	                      |	АдресаМаршрутовДоставки.МаршрутДоставки = &Владелец
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Улица,
	                      |	НачальныйДом,
	                      |	КонечныйДом");
	Запрос.УстановитьПараметр("Владелец", Ссылка.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаблицы = НастройкиМаршрутаДоставки.Строки.Найти(Выборка.Улица, "Ссылка", Истина);	
		Если (СтрокаТаблицы = Неопределено) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.Актуальность = Истина;
		Если (УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДомаВнутреннее("1") = Выборка.НачальныйДом) И (УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДомаВнутреннее(Неопределено) = Выборка.КонечныйДом) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы.СписокНомеровДомов.Добавить(Новый Структура("НачальныйДом,КонечныйДом,Представление", Выборка.НачальныйДом,Выборка.КонечныйДом,Выборка.Представление), Выборка.Представление);
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(НастройкиМаршрутаДоставки, Объект);	

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ПолучитьНастройкиМаршрутаДоставки()

Процедура УстановитьНастройкиМаршрутаДоставки(Ссылка, Объект, Отказ) Экспорт

	Если Не Отказ Тогда

		УстановитьПривилегированныйРежим(Истина);
		
		НастройкиМаршрутаДоставки = ДанныеФормыВЗначение(Объект, Тип("ДеревоЗначений"));
		
		НаборЗаписей = РегистрыСведений.АдресаМаршрутовДоставки.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.МаршрутДоставки.Установить(Ссылка.Ссылка);
		
		Ресторан = Ссылка.Владелец;
		
		// Актуальные.
		Для Каждого СтрокаНастройкиМаршрутаДоставки Из НастройкиМаршрутаДоставки.Строки.НайтиСтроки(Новый Структура("Актуальность,ТолькоПросмотр", Истина, Ложь), Истина) Цикл 
			Если СтрокаНастройкиМаршрутаДоставки.СписокНомеровДомов.Количество() Тогда
				Для Каждого Значение Из СтрокаНастройкиМаршрутаДоставки.СписокНомеровДомов Цикл 
					Значение = Значение.Значение;	// Наепка - друг чекиста ;)
					
					Запись = НаборЗаписей.Добавить();
					Запись.МаршрутДоставки = Ссылка.Ссылка;
					Запись.Ресторан = Ресторан;
					Запись.Улица = СтрокаНастройкиМаршрутаДоставки.Ссылка;
					Запись.НачальныйДом = Значение.НачальныйДом;
					Запись.КонечныйДом = Значение.КонечныйДом;
					Запись.Представление = Значение.Представление;
				КонецЦикла;
			Иначе
				Запись = НаборЗаписей.Добавить();
				Запись.Ресторан = Ресторан;
				Запись.МаршрутДоставки = Ссылка.Ссылка;
				Запись.Улица = СтрокаНастройкиМаршрутаДоставки.Ссылка;
				Запись.НачальныйДом = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДомаВнутреннее("1");
				Запись.КонечныйДом = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДомаВнутреннее(Неопределено);
				Запись.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДома("1") + " — " + УправлениеКонтактнойИнформацией.ПолучитьПредставлениеДома(Неопределено);
			КонецЕсли;
		КонецЦикла; 

		Попытка
			НаборЗаписей.Записать(Истина);
		Исключение
			// TODO: Регистрация ошибки.
			__ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(НСтр("ru = 'Не удалось изменить адреса маршрута доставки'; uk = 'Не вдалося змінити адреси маршруту доставки'"), ,, "ПравилаИспользования", Отказ);
		КонецПопытки;

		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры // УстановитьНастройкиПользователей()
